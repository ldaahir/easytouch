{"version":3,"file":"crm-e6d21620.js","sources":["../../../../frontend/src/views/dashboards/crm/CrmActiveProject.vue","../../../../frontend/src/views/dashboards/crm/CrmActivityTimeline.vue","../../../../frontend/src/views/dashboards/crm/CrmAnalyticsSales.vue","../../../../frontend/src/views/dashboards/crm/CrmBrowserStates.vue","../../../../frontend/src/views/dashboards/crm/CrmEarningReportsYearlyOverview.vue","../../../../frontend/src/views/dashboards/crm/CrmProjectStatus.vue","../../../../frontend/src/views/dashboards/crm/CrmRecentTransactions.vue","../../../../frontend/src/views/dashboards/crm/CrmRevenueGrowth.vue","../../../../frontend/src/views/dashboards/crm/CrmSalesAreaCharts.vue","../../../../frontend/src/views/dashboards/crm/CrmSessionsBarWithGapCharts.vue","../../../../frontend/src/pages/dashboards/crm.vue"],"sourcesContent":["<script setup>\nimport bootstrapLogo from '@images/icons/brands/bootstrap-logo.png'\nimport figmaLogo from '@images/icons/brands/figma-logo.png'\nimport laravelLogo from '@images/icons/brands/laravel-logo.png'\nimport reactLogo from '@images/icons/brands/react-logo.png'\nimport sketchLogo from '@images/icons/brands/sketch-logo.png'\nimport vuejsLogo from '@images/icons/brands/vuejs-logo.png'\n\nconst activeProjects = [\n  {\n    avatarImg: laravelLogo,\n    title: 'Laravel',\n    subtitle: 'Ecommerce',\n    stats: '65',\n    progressColor: 'error',\n  },\n  {\n    avatarImg: figmaLogo,\n    title: 'Figma',\n    subtitle: 'App UI Kit',\n    stats: '86',\n    progressColor: 'primary',\n  },\n  {\n    avatarImg: vuejsLogo,\n    title: 'VueJs',\n    subtitle: 'Calendar App',\n    stats: '90',\n    progressColor: 'success',\n  },\n  {\n    avatarImg: reactLogo,\n    title: 'React',\n    subtitle: 'Dashboard',\n    stats: '37',\n    progressColor: 'info',\n  },\n  {\n    avatarImg: bootstrapLogo,\n    title: 'Bootstrap',\n    subtitle: 'Website',\n    stats: '22',\n    progressColor: 'primary',\n  },\n  {\n    avatarImg: sketchLogo,\n    title: 'Sketch',\n    subtitle: 'Website Design',\n    stats: '29',\n    progressColor: 'warning',\n  },\n]\n\nconst moreList = [\n  {\n    title: 'Refresh',\n    value: 'Refresh',\n  },\n  {\n    title: 'Download',\n    value: 'Download',\n  },\n  {\n    title: 'View All',\n    value: 'View All',\n  },\n]\n</script>\n\n<template>\n  <VCard\n    title=\"Active Projects\"\n    subtitle=\"Average 72% completed\"\n  >\n    <template #append>\n      <div class=\"mt-n4 me-n2\">\n        <MoreBtn :menu-list=\"moreList\" />\n      </div>\n    </template>\n\n    <VCardText>\n      <VList class=\"card-list\">\n        <VListItem\n          v-for=\"project in activeProjects\"\n          :key=\"project.title\"\n        >\n          <template #prepend>\n            <VAvatar\n              size=\"34\"\n              rounded\n            >\n              <VImg :src=\"project.avatarImg\" />\n            </VAvatar>\n          </template>\n\n          <VListItemTitle class=\"font-weight-medium\">\n            {{ project.title }}\n          </VListItemTitle>\n          <VListItemSubtitle class=\"text-disabled\">\n            {{ project.subtitle }}\n          </VListItemSubtitle>\n\n          <template #append>\n            <div class=\"d-flex align-center\">\n              <div\n                class=\"me-2\"\n                style=\"inline-size: 4.875rem;\"\n              >\n                <VProgressLinear\n                  :model-value=\"project.stats\"\n                  :color=\"project.progressColor\"\n                  height=\"8\"\n                  rounded-bar\n                  rounded\n                />\n              </div>\n              <span class=\"text-disabled\">{{ project.stats }}%</span>\n            </div>\n          </template>\n        </VListItem>\n      </VList>\n    </VCardText>\n  </VCard>\n</template>\n","<script setup>\nimport avatar1 from '@images/avatars/avatar-1.png'\n\nconst moreList = [\n  {\n    title: 'Refresh',\n    value: 'Refresh',\n  },\n  {\n    title: 'Download',\n    value: 'Download',\n  },\n  {\n    title: 'View All',\n    value: 'View All',\n  },\n]\n</script>\n\n<template>\n  <VCard title=\"Activity Timeline\">\n    <template #append>\n      <div class=\"me-n2\">\n        <MoreBtn :menu-list=\"moreList\" />\n      </div>\n    </template>\n\n    <VCardText>\n      <VTimeline\n        side=\"end\"\n        align=\"start\"\n        truncate-line=\"both\"\n        density=\"compact\"\n        class=\"v-timeline-density-compact\"\n      >\n        <VTimelineItem\n          dot-color=\"primary\"\n          size=\"x-small\"\n        >\n          <!-- ðŸ‘‰ Header -->\n          <div class=\"d-flex justify-space-between align-center flex-wrap\">\n            <span class=\"app-timeline-title\">\n              Client Meeting\n            </span>\n            <span class=\"app-timeline-meta\">Today</span>\n          </div>\n\n          <!-- ðŸ‘‰ Content -->\n          <p class=\"app-timeline-text mb-3\">\n            Project meeting with john @10:15am\n          </p>\n          <div class=\"d-flex align-center\">\n            <VAvatar\n              :image=\"avatar1\"\n              class=\"me-3\"\n            />\n            <div>\n              <h6 class=\"text-h6\">\n                Lester McCarthy (Client)\n              </h6>\n              <p class=\"mb-0 text-sm\">\n                CEO of Infibeam\n              </p>\n            </div>\n          </div>\n        </VTimelineItem>\n\n        <VTimelineItem\n          dot-color=\"success\"\n          size=\"x-small\"\n        >\n          <!-- ðŸ‘‰ Header -->\n          <div class=\"d-flex justify-space-between align-center flex-wrap\">\n            <span class=\"app-timeline-title\">\n              Create a new project for client\n            </span>\n            <span class=\"app-timeline-meta\">2 Days Ago</span>\n          </div>\n\n          <!-- ðŸ‘‰ Content -->\n          <p class=\"app-timeline-text mb-1\">\n            Add files to new design folder\n          </p>\n        </VTimelineItem>\n\n        <VTimelineItem\n          dot-color=\"error\"\n          size=\"x-small\"\n        >\n          <!-- ðŸ‘‰ Header -->\n          <div class=\"d-flex justify-space-between align-center flex-wrap\">\n            <span class=\"app-timeline-title\">\n              Shared 2 New Project Files\n            </span>\n            <span class=\"app-timeline-meta\">6 Days Ago</span>\n          </div>\n\n          <!-- ðŸ‘‰ Content -->\n          <p class=\"app-timeline-text mb-2\">\n            Sent by Mollie Dixon\n          </p>\n          <div class=\"d-flex align-center\">\n            <a\n              href=\"javascript:void(0);\"\n              class=\"d-flex align-center me-4\"\n            >\n              <VIcon\n                start\n                size=\"18\"\n                color=\"warning\"\n                icon=\"tabler-file-description\"\n              />\n              <h6 class=\"font-weight-medium text-h6\">App Guidelines</h6>\n            </a>\n            <a\n              href=\"javascript:void(0);\"\n              class=\"d-flex align-center\"\n            >\n              <VIcon\n                start\n                size=\"18\"\n                color=\"success\"\n                icon=\"tabler-table\"\n              />\n              <h6 class=\"font-weight-medium text-h6\">Testing Results</h6>\n            </a>\n          </div>\n        </VTimelineItem>\n\n        <VTimelineItem\n          dot-color=\"info\"\n          size=\"x-small\"\n        >\n          <!-- ðŸ‘‰ Header -->\n          <div class=\"d-flex justify-space-between align-center flex-wrap\">\n            <span class=\"app-timeline-title\">\n              Project status updated\n            </span>\n            <span class=\"app-timeline-meta\">10 Days Ago</span>\n          </div>\n\n          <!-- ðŸ‘‰ Content -->\n          <p class=\"app-timeline-text mb-1\">\n            Ecommerce iOS App Completed\n          </p>\n        </VTimelineItem>\n      </VTimeline>\n    </VCardText>\n  </VCard>\n</template>\n","<script setup>\nimport VueApexCharts from 'vue3-apexcharts'\nimport { useTheme } from 'vuetify'\nimport { hexToRgb } from '@layouts/utils'\n\nconst vuetifyTheme = useTheme()\n\nconst series = [\n  {\n    name: 'Sales',\n    data: [\n      32,\n      27,\n      27,\n      30,\n      25,\n      25,\n    ],\n  },\n  {\n    name: 'Visits',\n    data: [\n      25,\n      35,\n      20,\n      20,\n      20,\n      20,\n    ],\n  },\n]\n\nconst chartOptions = computed(() => {\n  const currentTheme = vuetifyTheme.current.value.colors\n  const variableTheme = vuetifyTheme.current.value.variables\n  const borderColor = `rgba(${ hexToRgb(String(variableTheme['border-color'])) },${ variableTheme['border-opacity'] })`\n  const labelColor = `rgba(${ hexToRgb(currentTheme['on-surface']) },${ variableTheme['disabled-opacity'] })`\n  const legendColor = `rgba(${ hexToRgb(currentTheme['on-background']) },${ variableTheme['high-emphasis-opacity'] })`\n  \n  return {\n    chart: {\n      type: 'radar',\n      toolbar: { show: false },\n    },\n    plotOptions: {\n      radar: {\n        polygons: {\n          strokeColors: borderColor,\n          connectorColors: borderColor,\n        },\n      },\n    },\n    stroke: {\n      show: false,\n      width: 0,\n    },\n    legend: {\n      show: true,\n      fontSize: '13px',\n      position: 'bottom',\n      labels: {\n        colors: legendColor,\n        useSeriesColors: false,\n      },\n      markers: {\n        height: 10,\n        width: 10,\n        offsetX: -3,\n      },\n      itemMargin: { horizontal: 10 },\n      onItemHover: { highlightDataSeries: false },\n    },\n    colors: [\n      currentTheme.primary,\n      currentTheme.info,\n    ],\n    fill: {\n      opacity: [\n        1,\n        0.85,\n      ],\n    },\n    markers: { size: 0 },\n    grid: {\n      show: false,\n      padding: {\n        top: 0,\n        bottom: -5,\n      },\n    },\n    xaxis: {\n      categories: [\n        'Jan',\n        'Feb',\n        'Mar',\n        'Apr',\n        'May',\n        'Jun',\n      ],\n      labels: {\n        show: true,\n        style: {\n          colors: [\n            labelColor,\n            labelColor,\n            labelColor,\n            labelColor,\n            labelColor,\n            labelColor,\n          ],\n          fontSize: '13px',\n          fontFamily: 'Public Sans',\n        },\n      },\n    },\n    yaxis: {\n      show: false,\n      min: 0,\n      max: 40,\n      tickAmount: 4,\n    },\n    responsive: [{\n      breakpoint: 769,\n      options: { chart: { height: 372 } },\n    }],\n  }\n})\n</script>\n\n<template>\n  <VCard>\n    <VCardItem class=\"pb-0\">\n      <VCardTitle>Sales</VCardTitle>\n      <VCardSubtitle>Last 6 Months</VCardSubtitle>\n\n      <template #append>\n        <div class=\"mt-n4 me-n2\">\n          <MoreBtn :menu-list=\"[{ title: 'View More', value: 'View More' }, { title: 'Delete', value: 'Delete' }]\" />\n        </div>\n      </template>\n    </VCardItem>\n\n    <VCardText>\n      <VueApexCharts\n        :options=\"chartOptions\"\n        :series=\"series\"\n        height=\"355\"\n      />\n    </VCardText>\n  </VCard>\n</template>\n","<script setup>\nimport brave from '@images/logos/brave.png'\nimport chrome from '@images/logos/chrome.png'\nimport firefox from '@images/logos/firefox.png'\nimport internetExplorer from '@images/logos/internet-explorer.png'\nimport operaMini from '@images/logos/opera-mini.png'\nimport safari from '@images/logos/safari.png'\n\nconst browserStates = [\n  {\n    avatarImg: chrome,\n    title: 'Google Chrome',\n    stats: '90.4',\n    progress: 'secondary',\n  },\n  {\n    avatarImg: safari,\n    title: 'Apple Safari',\n    stats: '70.6',\n    progress: 'success',\n  },\n  {\n    avatarImg: firefox,\n    title: 'Mozilla Firefox',\n    stats: '35.5',\n    progress: 'primary',\n  },\n  {\n    avatarImg: operaMini,\n    title: 'Opera Mini',\n    stats: '80.0',\n    progress: 'error',\n  },\n  {\n    avatarImg: internetExplorer,\n    title: 'Internet Explorer',\n    stats: '62.2',\n    progress: 'info',\n  },\n  {\n    avatarImg: brave,\n    title: 'Brave',\n    stats: '46.3',\n    progress: 'warning',\n  },\n]\n\nconst moreList = [\n  {\n    title: 'Refresh',\n    value: 'refresh',\n  },\n  {\n    title: 'Download',\n    value: 'Download',\n  },\n  {\n    title: 'View All',\n    value: 'View All',\n  },\n]\n</script>\n\n<template>\n  <VCard\n    title=\"Browser States\"\n    subtitle=\"Counter April 2022\"\n  >\n    <template #append>\n      <div class=\"mt-n4 me-n2\">\n        <MoreBtn :menu-list=\"moreList\" />\n      </div>\n    </template>\n\n    <VCardText>\n      <VList class=\"card-list\">\n        <VListItem\n          v-for=\"state in browserStates\"\n          :key=\"state.title\"\n        >\n          <template #prepend>\n            <VAvatar size=\"28\">\n              <VImg :src=\"state.avatarImg\" />\n            </VAvatar>\n          </template>\n\n          <VListItemTitle class=\"font-weight-medium\">\n            {{ state.title }}\n          </VListItemTitle>\n\n          <template #append>\n            <span class=\"font-weight-medium text-medium-emphasis me-3\">{{ state.stats }}%</span>\n            <VProgressCircular\n              :model-value=\"state.stats\"\n              :color=\"state.progress\"\n              width=\"3\"\n              size=\"28\"\n            />\n          </template>\n        </VListItem>\n      </VList>\n    </VCardText>\n  </VCard>\n</template>\n\n<style lang=\"scss\" scoped>\n.card-list {\n  --v-card-list-gap: 30px;\n}\n</style>\n","<script setup>\nimport VueApexCharts from 'vue3-apexcharts'\nimport { useTheme } from 'vuetify'\nimport { hexToRgb } from '@layouts/utils'\n\nconst vuetifyTheme = useTheme()\nconst currentTab = ref(0)\nconst refVueApexChart = ref()\n\nconst chartConfigs = computed(() => {\n  const currentTheme = vuetifyTheme.current.value.colors\n  const variableTheme = vuetifyTheme.current.value.variables\n  const labelPrimaryColor = `rgba(${ hexToRgb(currentTheme.primary) },${ variableTheme['dragged-opacity'] })`\n  const legendColor = `rgba(${ hexToRgb(currentTheme['on-background']) },${ variableTheme['high-emphasis-opacity'] })`\n  const borderColor = `rgba(${ hexToRgb(String(variableTheme['border-color'])) },${ variableTheme['border-opacity'] })`\n  const labelColor = `rgba(${ hexToRgb(currentTheme['on-surface']) },${ variableTheme['disabled-opacity'] })`\n  \n  return [\n    {\n      title: 'Orders',\n      icon: 'tabler-shopping-cart',\n      chartOptions: {\n        chart: {\n          parentHeightOffset: 0,\n          type: 'bar',\n          toolbar: { show: false },\n        },\n        plotOptions: {\n          bar: {\n            columnWidth: '32%',\n            startingShape: 'rounded',\n            borderRadius: 4,\n            distributed: true,\n            dataLabels: { position: 'top' },\n          },\n        },\n        grid: {\n          show: false,\n          padding: {\n            top: 0,\n            bottom: 0,\n            left: -10,\n            right: -10,\n          },\n        },\n        colors: [\n          labelPrimaryColor,\n          labelPrimaryColor,\n          `rgba(${ hexToRgb(currentTheme.primary) },1)`,\n          labelPrimaryColor,\n          labelPrimaryColor,\n          labelPrimaryColor,\n          labelPrimaryColor,\n          labelPrimaryColor,\n          labelPrimaryColor,\n        ],\n        dataLabels: {\n          enabled: true,\n          formatter(val) {\n            return `${ val }k`\n          },\n          offsetY: -25,\n          style: {\n            fontSize: '15px',\n            colors: [legendColor],\n            fontWeight: '600',\n            fontFamily: 'Public Sans',\n          },\n        },\n        legend: { show: false },\n        tooltip: { enabled: false },\n        xaxis: {\n          categories: [\n            'Jan',\n            'Feb',\n            'Mar',\n            'Apr',\n            'May',\n            'Jun',\n            'Jul',\n            'Aug',\n            'Sep',\n          ],\n          axisBorder: {\n            show: true,\n            color: borderColor,\n          },\n          axisTicks: { show: false },\n          labels: {\n            style: {\n              colors: labelColor,\n              fontSize: '13px',\n              fontFamily: 'Public Sans',\n            },\n          },\n        },\n        yaxis: {\n          labels: {\n            offsetX: -15,\n            formatter(val) {\n              return `${ parseInt(String(val / 1)) }k`\n            },\n            style: {\n              fontSize: '13px',\n              colors: labelColor,\n              fontFamily: 'Public Sans',\n            },\n            min: 0,\n            max: 60000,\n            tickAmount: 6,\n          },\n        },\n        responsive: [\n          {\n            breakpoint: 1441,\n            options: { plotOptions: { bar: { columnWidth: '41%' } } },\n          },\n          {\n            breakpoint: 590,\n            options: {\n              plotOptions: { bar: { columnWidth: '61%' } },\n              yaxis: { labels: { show: false } },\n              grid: {\n                padding: {\n                  right: 0,\n                  left: -20,\n                },\n              },\n              dataLabels: {\n                style: {\n                  fontSize: '12px',\n                  fontWeight: '400',\n                },\n              },\n            },\n          },\n        ],\n      },\n      series: [{\n        data: [\n          28,\n          10,\n          45,\n          38,\n          15,\n          30,\n          35,\n          30,\n          8,\n        ],\n      }],\n    },\n    {\n      title: 'Sales',\n      icon: 'tabler-chart-bar',\n      chartOptions: {\n        chart: {\n          parentHeightOffset: 0,\n          type: 'bar',\n          toolbar: { show: false },\n        },\n        plotOptions: {\n          bar: {\n            columnWidth: '32%',\n            startingShape: 'rounded',\n            borderRadius: 4,\n            distributed: true,\n            dataLabels: { position: 'top' },\n          },\n        },\n        grid: {\n          show: false,\n          padding: {\n            top: 0,\n            bottom: 0,\n            left: -10,\n            right: -10,\n          },\n        },\n        colors: [\n          labelPrimaryColor,\n          labelPrimaryColor,\n          labelPrimaryColor,\n          labelPrimaryColor,\n          labelPrimaryColor,\n          labelPrimaryColor,\n          currentTheme.primary,\n          labelPrimaryColor,\n          labelPrimaryColor,\n        ],\n        dataLabels: {\n          enabled: true,\n          formatter(val) {\n            return `${ val }k`\n          },\n          offsetY: -25,\n          style: {\n            fontSize: '15px',\n            colors: [legendColor],\n            fontWeight: '600',\n            fontFamily: 'Public Sans',\n          },\n        },\n        legend: { show: false },\n        tooltip: { enabled: false },\n        xaxis: {\n          categories: [\n            'Jan',\n            'Feb',\n            'Mar',\n            'Apr',\n            'May',\n            'Jun',\n            'Jul',\n            'Aug',\n            'Sep',\n          ],\n          axisBorder: {\n            show: true,\n            color: borderColor,\n          },\n          axisTicks: { show: false },\n          labels: {\n            style: {\n              colors: labelColor,\n              fontSize: '13px',\n              fontFamily: 'Public Sans',\n            },\n          },\n        },\n        yaxis: {\n          labels: {\n            offsetX: -15,\n            formatter(val) {\n              return `${ parseInt(String(val / 1)) }k`\n            },\n            style: {\n              fontSize: '13px',\n              colors: labelColor,\n              fontFamily: 'Public Sans',\n            },\n            min: 0,\n            max: 60000,\n            tickAmount: 6,\n          },\n        },\n        responsive: [\n          {\n            breakpoint: 1441,\n            options: { plotOptions: { bar: { columnWidth: '41%' } } },\n          },\n          {\n            breakpoint: 590,\n            options: {\n              plotOptions: { bar: { columnWidth: '61%' } },\n              grid: { padding: { right: 0 } },\n              dataLabels: {\n                style: {\n                  fontSize: '12px',\n                  fontWeight: '400',\n                },\n              },\n              yaxis: { labels: { show: false } },\n            },\n          },\n        ],\n      },\n      series: [{\n        data: [\n          35,\n          25,\n          15,\n          40,\n          42,\n          25,\n          48,\n          8,\n          30,\n        ],\n      }],\n    },\n    {\n      title: 'Profit',\n      icon: 'tabler-currency-dollar',\n      chartOptions: {\n        chart: {\n          parentHeightOffset: 0,\n          type: 'bar',\n          toolbar: { show: false },\n        },\n        plotOptions: {\n          bar: {\n            columnWidth: '32%',\n            startingShape: 'rounded',\n            borderRadius: 4,\n            distributed: true,\n            dataLabels: { position: 'top' },\n          },\n        },\n        grid: {\n          show: false,\n          padding: {\n            top: 0,\n            bottom: 0,\n            left: -10,\n            right: -10,\n          },\n        },\n        colors: [\n          labelPrimaryColor,\n          labelPrimaryColor,\n          labelPrimaryColor,\n          labelPrimaryColor,\n          currentTheme.primary,\n          labelPrimaryColor,\n          labelPrimaryColor,\n          labelPrimaryColor,\n          labelPrimaryColor,\n        ],\n        dataLabels: {\n          enabled: true,\n          formatter(val) {\n            return `${ val }k`\n          },\n          offsetY: -25,\n          style: {\n            fontSize: '15px',\n            colors: [legendColor],\n            fontWeight: '600',\n            fontFamily: 'Public Sans',\n          },\n        },\n        legend: { show: false },\n        tooltip: { enabled: false },\n        xaxis: {\n          categories: [\n            'Jan',\n            'Feb',\n            'Mar',\n            'Apr',\n            'May',\n            'Jun',\n            'Jul',\n            'Aug',\n            'Sep',\n          ],\n          axisBorder: {\n            show: true,\n            color: borderColor,\n          },\n          axisTicks: { show: false },\n          labels: {\n            style: {\n              colors: labelColor,\n              fontSize: '13px',\n              fontFamily: 'Public Sans',\n            },\n          },\n        },\n        yaxis: {\n          labels: {\n            offsetX: -15,\n            formatter(val) {\n              return `${ parseInt(String(val / 1)) }k`\n            },\n            style: {\n              fontSize: '13px',\n              colors: labelColor,\n              fontFamily: 'Public Sans',\n            },\n            min: 0,\n            max: 60000,\n            tickAmount: 6,\n          },\n        },\n        responsive: [\n          {\n            breakpoint: 1441,\n            options: { plotOptions: { bar: { columnWidth: '41%' } } },\n          },\n          {\n            breakpoint: 590,\n            options: {\n              plotOptions: { bar: { columnWidth: '61%' } },\n              grid: { padding: { right: 0 } },\n              dataLabels: {\n                style: {\n                  fontSize: '12px',\n                  fontWeight: '400',\n                },\n              },\n              yaxis: { labels: { show: false } },\n            },\n          },\n        ],\n      },\n      series: [{\n        data: [\n          10,\n          22,\n          27,\n          33,\n          42,\n          32,\n          27,\n          22,\n          8,\n        ],\n      }],\n    },\n    {\n      title: 'Income',\n      icon: 'tabler-chart-pie-2',\n      chartOptions: {\n        chart: {\n          parentHeightOffset: 0,\n          type: 'bar',\n          toolbar: { show: false },\n        },\n        plotOptions: {\n          bar: {\n            columnWidth: '32%',\n            startingShape: 'rounded',\n            borderRadius: 4,\n            distributed: true,\n            dataLabels: { position: 'top' },\n          },\n        },\n        grid: {\n          show: false,\n          padding: {\n            top: 0,\n            bottom: 0,\n            left: -10,\n            right: -10,\n          },\n        },\n        colors: [\n          labelPrimaryColor,\n          labelPrimaryColor,\n          labelPrimaryColor,\n          labelPrimaryColor,\n          labelPrimaryColor,\n          labelPrimaryColor,\n          labelPrimaryColor,\n          labelPrimaryColor,\n          currentTheme.primary,\n        ],\n        dataLabels: {\n          enabled: true,\n          formatter(val) {\n            return `${ val }k`\n          },\n          offsetY: -25,\n          style: {\n            fontSize: '15px',\n            colors: [legendColor],\n            fontWeight: '600',\n            fontFamily: 'Public Sans',\n          },\n        },\n        legend: { show: false },\n        tooltip: { enabled: false },\n        xaxis: {\n          categories: [\n            'Jan',\n            'Feb',\n            'Mar',\n            'Apr',\n            'May',\n            'Jun',\n            'Jul',\n            'Aug',\n            'Sep',\n          ],\n          axisBorder: {\n            show: true,\n            color: borderColor,\n          },\n          axisTicks: { show: false },\n          labels: {\n            style: {\n              colors: labelColor,\n              fontSize: '13px',\n              fontFamily: 'Public Sans',\n            },\n          },\n        },\n        yaxis: {\n          labels: {\n            offsetX: -15,\n            formatter(val) {\n              return `${ parseInt(String(val / 1)) }k`\n            },\n            style: {\n              fontSize: '13px',\n              colors: labelColor,\n              fontFamily: 'Public Sans',\n            },\n            min: 0,\n            max: 60000,\n            tickAmount: 6,\n          },\n        },\n        responsive: [\n          {\n            breakpoint: 1441,\n            options: { plotOptions: { bar: { columnWidth: '41%' } } },\n          },\n          {\n            breakpoint: 590,\n            options: {\n              plotOptions: { bar: { columnWidth: '50%' } },\n              dataLabels: {\n                style: {\n                  fontSize: '12px',\n                  fontWeight: '400',\n                },\n              },\n              grid: { padding: { right: 0 } },\n              yaxis: { labels: { show: false } },\n            },\n          },\n        ],\n      },\n      series: [{\n        data: [\n          5,\n          9,\n          12,\n          18,\n          20,\n          25,\n          30,\n          36,\n          48,\n        ],\n      }],\n    },\n  ]\n})\n</script>\n\n<template>\n  <VCard\n    title=\"Earning Reports\"\n    subtitle=\"Yearly Earnings Overview\"\n  >\n    <template #append>\n      <div class=\"mt-n4 me-n2\">\n        <MoreBtn :menu-list=\"[{ title: 'View More', value: 'View More' }, { title: 'Delete', value: 'Delete' }]\" />\n      </div>\n    </template>\n\n    <VCardText>\n      <VSlideGroup\n        v-model=\"currentTab\"\n        show-arrows\n        mandatory\n      >\n        <VSlideGroupItem\n          v-for=\"(report, index) in chartConfigs\"\n          :key=\"report.title\"\n          v-slot=\"{ isSelected, toggle }\"\n          :value=\"index\"\n        >\n          <div\n            style=\"block-size: 94px; inline-size: 110px;\"\n            :style=\"isSelected ? 'border-color:rgb(var(--v-theme-primary)) !important' : ''\"\n            :class=\"isSelected ? 'border' : 'border border-dashed'\"\n            class=\"d-flex flex-column justify-center align-center cursor-pointer rounded px-5 py-2 me-6\"\n            @click=\"toggle\"\n          >\n            <VAvatar\n              rounded\n              size=\"38\"\n              :color=\"isSelected ? 'primary' : 'secondary'\"\n              variant=\"tonal\"\n              class=\"mb-2\"\n            >\n              <VIcon :icon=\"report.icon\" />\n            </VAvatar>\n            <p class=\"mb-0 font-weight-medium\">\n              {{ report.title }}\n            </p>\n          </div>\n        </VSlideGroupItem>\n\n        <!-- ðŸ‘‰ Slider more -->\n        <VSlideGroupItem>\n          <div\n            style=\"block-size: 94px; inline-size: 110px;\"\n            class=\"d-flex flex-column justify-center align-center rounded me-6 border border-dashed\"\n          >\n            <VAvatar\n              rounded\n              size=\"38\"\n              color=\"default\"\n              variant=\"tonal\"\n              class=\"text-disabled\"\n            >\n              <VIcon icon=\"tabler-plus\" />\n            </VAvatar>\n          </div>\n        </VSlideGroupItem>\n      </VSlideGroup>\n\n      <VueApexCharts\n        ref=\"refVueApexChart\"\n        :key=\"currentTab\"\n        :options=\"chartConfigs[Number(currentTab)].chartOptions\"\n        :series=\"chartConfigs[Number(currentTab)].series\"\n        height=\"240\"\n        class=\"mt-3\"\n      />\n    </VCardText>\n  </VCard>\n</template>\n","<script setup>\nimport VueApexCharts from 'vue3-apexcharts'\nimport { useTheme } from 'vuetify'\nimport { prefixWithPlus } from '@core/utils/formatters'\n\nconst vuetifyTheme = useTheme()\n\nconst series = [{\n  data: [\n    2000,\n    2000,\n    4000,\n    4000,\n    3050,\n    3050,\n    2000,\n    2000,\n    3050,\n    3050,\n    4700,\n    4700,\n    2750,\n    2750,\n    5700,\n    5700,\n  ],\n}]\n\nconst chartOptions = computed(() => {\n  const currentTheme = vuetifyTheme.current.value.colors\n  \n  return {\n    chart: {\n      type: 'area',\n      toolbar: false,\n    },\n    markers: { strokeColor: 'transparent' },\n    dataLabels: { enabled: false },\n    grid: {\n      show: false,\n      padding: {\n        left: -10,\n        right: -5,\n      },\n    },\n    stroke: {\n      width: 3,\n      curve: 'straight',\n    },\n    colors: [currentTheme.warning],\n    fill: {\n      type: 'gradient',\n      gradient: {\n        opacityFrom: 0.6,\n        opacityTo: 0.15,\n        stops: [\n          0,\n          95,\n          100,\n        ],\n      },\n    },\n    xaxis: {\n      labels: { show: false },\n      axisBorder: { show: false },\n      axisTicks: { show: false },\n      lines: { show: false },\n    },\n    yaxis: {\n      labels: { show: false },\n      min: 1000,\n      max: 6000,\n      tickAmount: 5,\n    },\n    tooltip: { enabled: false },\n  }\n})\n\nconst projectStatus = [\n  {\n    title: 'Donates',\n    amount: '$756.26',\n    lossProfit: -139.34,\n  },\n  {\n    title: 'Podcasts',\n    amount: '$2,207.03',\n    lossProfit: +576.24,\n  },\n]\n</script>\n\n<template>\n  <VCard title=\"Project Status\">\n    <template #append>\n      <div class=\"mt-n4 me-n2\">\n        <MoreBtn :menu-list=\"[{ title: 'View More', value: 'View More' }, { title: 'Delete', value: 'Delete' }]\" />\n      </div>\n    </template>\n\n    <VCardText>\n      <VList class=\"card-list\">\n        <VListItem>\n          <template #prepend>\n            <VAvatar\n              size=\"34\"\n              color=\"warning\"\n              variant=\"tonal\"\n              rounded\n              icon=\"tabler-currency-dollar\"\n            />\n          </template>\n          <VListItemTitle class=\"font-weight-medium\">\n            $4,3742\n          </VListItemTitle>\n          <VListItemSubtitle class=\"text-disabled\">\n            Your Earnings\n          </VListItemSubtitle>\n\n          <template #append>\n            <span class=\"text-success font-weight-medium\">10.2%</span>\n          </template>\n        </VListItem>\n      </VList>\n      <VueApexCharts\n        :options=\"chartOptions\"\n        :series=\"series\"\n        height=\"247\"\n      />\n\n      <VList class=\"card-list\">\n        <VListItem\n          v-for=\"status in projectStatus\"\n          :key=\"status.title\"\n        >\n          <VListItemTitle class=\"font-weight-medium\">\n            {{ status.title }}\n          </VListItemTitle>\n          <template #append>\n            <span class=\"me-3 text-medium-emphasis\">{{ status.amount }}</span>\n            <span\n              class=\"font-weight-medium\"\n              :class=\"status.lossProfit > 0 ? 'text-success' : 'text-error'\"\n            >{{ prefixWithPlus(status.lossProfit) }}</span>\n          </template>\n        </VListItem>\n      </VList>\n    </VCardText>\n  </VCard>\n</template>\n\n<style lang=\"scss\" scoped>\n.card-list {\n  --v-card-list-gap: 15px;\n}\n</style>\n","<script setup>\nimport aeIcon from '@images/icons/payments/ae-icon.png'\nimport mastercardIcon from '@images/icons/payments/mastercard-icon.png'\nimport visaIcon from '@images/icons/payments/visa-icon.png'\n\nconst lastTransitions = [\n  {\n    cardImg: visaIcon,\n    lastDigit: '*4230',\n    cardType: 'Credit',\n    sentDate: '17 Mar 2022',\n    status: 'Verified',\n    trend: '+$1,678',\n  },\n  {\n    cardImg: mastercardIcon,\n    lastDigit: '*5578',\n    cardType: 'Credit',\n    sentDate: '12 Feb 2022',\n    status: 'Rejected',\n    trend: '-$839',\n  },\n  {\n    cardImg: aeIcon,\n    lastDigit: '*4567',\n    cardType: 'Credit',\n    sentDate: '28 Feb 2022',\n    status: 'Verified',\n    trend: '+$435',\n  },\n  {\n    cardImg: visaIcon,\n    lastDigit: '*5699',\n    cardType: 'Credit',\n    sentDate: '8 Jan 2022',\n    status: 'Pending',\n    trend: '+$2,345',\n  },\n  {\n    cardImg: visaIcon,\n    lastDigit: '*5699',\n    cardType: 'Credit',\n    sentDate: '8 Jan 2022',\n    status: 'Rejected',\n    trend: '-$234',\n  },\n]\n\nconst resolveStatus = {\n  Verified: 'success',\n  Rejected: 'error',\n  Pending: 'secondary',\n}\n\nconst moreList = [\n  {\n    title: 'Refresh',\n    value: 'refresh',\n  },\n  {\n    title: 'Download',\n    value: 'Download',\n  },\n  {\n    title: 'View All',\n    value: 'View All',\n  },\n]\n</script>\n\n<template>\n  <VCard title=\"Recent Transactions\">\n    <template #append>\n      <div class=\"me-n2\">\n        <MoreBtn :menu-list=\"moreList\" />\n      </div>\n    </template>\n\n    <VDivider />\n    <VTable class=\"text-no-wrap\">\n      <thead>\n        <tr>\n          <th class=\"font-weight-medium\">\n            CARD\n          </th>\n          <th class=\"font-weight-medium\">\n            DATE\n          </th>\n          <th class=\"font-weight-medium\">\n            STATUS\n          </th>\n          <th class=\"font-weight-medium\">\n            TREND\n          </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        <tr\n          v-for=\"transition in lastTransitions\"\n          :key=\"transition.lastDigit\"\n        >\n          <td style=\"padding-block: 0.65rem;\">\n            <div class=\"d-flex align-center\">\n              <div class=\"me-3\">\n                <VImg\n                  :src=\"transition.cardImg\"\n                  width=\"50\"\n                />\n              </div>\n              <div>\n                <p class=\"font-weight-medium text-base mb-0\">\n                  {{ transition.lastDigit }}\n                </p>\n                <p class=\"text-sm mb-0 text-disabled\">\n                  {{ transition.cardType }}\n                </p>\n              </div>\n            </div>\n          </td>\n          <td>\n            <p class=\"font-weight-medium text-base mb-0\">\n              Sent\n            </p>\n            <span class=\"text-sm text-disabled\">{{ transition.sentDate }}</span>\n          </td>\n          <td>\n            <VChip\n              label\n              :color=\"resolveStatus[transition.status]\"\n            >\n              {{ transition.status }}\n            </VChip>\n          </td>\n          <td>\n            <span class=\"font-weight-medium text-base\">{{ transition.trend }}</span>\n          </td>\n        </tr>\n      </tbody>\n    </VTable>\n  </VCard>\n</template>\n\n<style lang=\"scss\" scoped>\n.v-table {\n  tbody {\n    tr:not(:last-child) {\n      td {\n        border: none !important;\n      }\n    }\n  }\n}\n</style>\n","<script setup>\nimport VueApexCharts from 'vue3-apexcharts'\nimport { useTheme } from 'vuetify'\nimport { hexToRgb } from '@layouts/utils'\n\nconst vuetifyTheme = useTheme()\n\nconst series = [{\n  data: [\n    32,\n    52,\n    72,\n    94,\n    116,\n    94,\n    72,\n  ],\n}]\n\nconst chartOptions = computed(() => {\n  const currentTheme = vuetifyTheme.current.value.colors\n  const variableTheme = vuetifyTheme.current.value.variables\n  const labelSuccessColor = `rgba(${ hexToRgb(currentTheme.success) },0.16)`\n  const labelColor = `rgba(${ hexToRgb(currentTheme['on-surface']) },${ variableTheme['disabled-opacity'] })`\n  \n  return {\n    chart: {\n      type: 'bar',\n      parentHeightOffset: 0,\n      toolbar: { show: false },\n    },\n    plotOptions: {\n      bar: {\n        barHeight: '80%',\n        columnWidth: '30%',\n        startingShape: 'rounded',\n        endingShape: 'rounded',\n        borderRadius: 6,\n        distributed: true,\n      },\n    },\n    tooltip: { enabled: false },\n    grid: {\n      show: false,\n      padding: {\n        top: -20,\n        bottom: -12,\n        left: -10,\n        right: 0,\n      },\n    },\n    colors: [\n      labelSuccessColor,\n      labelSuccessColor,\n      labelSuccessColor,\n      labelSuccessColor,\n      currentTheme.success,\n      labelSuccessColor,\n      labelSuccessColor,\n    ],\n    dataLabels: { enabled: false },\n    legend: { show: false },\n    xaxis: {\n      categories: [\n        'M',\n        'T',\n        'W',\n        'T',\n        'F',\n        'S',\n        'S',\n      ],\n      axisBorder: { show: false },\n      axisTicks: { show: false },\n      labels: {\n        style: {\n          colors: labelColor,\n          fontSize: '13px',\n          fontFamily: 'Public sans',\n        },\n      },\n    },\n    yaxis: { labels: { show: false } },\n    states: { hover: { filter: { type: 'none' } } },\n    responsive: [\n      {\n        breakpoint: 1471,\n        options: { plotOptions: { bar: { columnWidth: '50%' } } },\n      },\n      {\n        breakpoint: 1350,\n        options: { plotOptions: { bar: { columnWidth: '57%' } } },\n      },\n      {\n        breakpoint: 1032,\n        options: { plotOptions: { bar: { columnWidth: '60%' } } },\n      },\n      {\n        breakpoint: 992,\n        options: {\n          plotOptions: {\n            bar: {\n              columnWidth: '40%',\n              borderRadius: 8,\n            },\n          },\n        },\n      },\n      {\n        breakpoint: 855,\n        options: {\n          plotOptions: {\n            bar: {\n              columnWidth: '50%',\n              borderRadius: 6,\n            },\n          },\n        },\n      },\n      {\n        breakpoint: 440,\n        options: { plotOptions: { bar: { columnWidth: '40%' } } },\n      },\n      {\n        breakpoint: 381,\n        options: { plotOptions: { bar: { columnWidth: '45%' } } },\n      },\n    ],\n  }\n})\n</script>\n\n<template>\n  <VCard>\n    <VCardText class=\"d-flex justify-space-between\">\n      <div class=\"d-flex flex-column\">\n        <div class=\"mb-auto\">\n          <h5 class=\"text-h5 text-no-wrap mb-2\">\n            Revenue Growth\n          </h5>\n          <p class=\"mb-0 text-sm\">\n            Weekly Report\n          </p>\n        </div>\n\n        <div>\n          <h3 class=\"text-h3 mb-2\">\n            $4,673\n          </h3>\n          <VChip\n            label\n            color=\"success\"\n          >\n            +15.2%\n          </VChip>\n        </div>\n      </div>\n      <div>\n        <VueApexCharts\n          :options=\"chartOptions\"\n          :series=\"series\"\n          :height=\"165\"\n        />\n      </div>\n    </VCardText>\n  </VCard>\n</template>\n","<script setup>\nimport VueApexCharts from 'vue3-apexcharts'\nimport { useTheme } from 'vuetify'\n\nconst vuetifyTheme = useTheme()\nconst currentTheme = vuetifyTheme.current.value.colors\n\nconst series = [{\n  name: 'Subscribers',\n  data: [\n    200,\n    55,\n    400,\n    250,\n  ],\n}]\n\nconst chartOptions = {\n  chart: {\n    type: 'area',\n    parentHeightOffset: 0,\n    toolbar: { show: false },\n    sparkline: { enabled: true },\n  },\n  markers: {\n    colors: 'transparent',\n    strokeColors: 'transparent',\n  },\n  grid: { show: false },\n  colors: [currentTheme.success],\n  fill: {\n    type: 'gradient',\n    gradient: {\n      shadeIntensity: 0.9,\n      opacityFrom: 0.5,\n      opacityTo: 0.07,\n      stops: [\n        0,\n        80,\n        100,\n      ],\n    },\n  },\n  dataLabels: { enabled: false },\n  stroke: {\n    width: 2,\n    curve: 'smooth',\n  },\n  xaxis: {\n    show: true,\n    lines: { show: false },\n    labels: { show: false },\n    stroke: { width: 0 },\n    axisBorder: { show: false },\n  },\n  yaxis: {\n    stroke: { width: 0 },\n    show: false,\n  },\n  tooltip: { enabled: false },\n}\n</script>\n\n<template>\n  <VCard>\n    <VCardText class=\"pb-2\">\n      <h5 class=\"text-h5\">\n        Sales\n      </h5>\n      <p class=\"mb-0 text-sm text-disabled\">\n        Last Year\n      </p>\n    </VCardText>\n\n    <VueApexCharts\n      :options=\"chartOptions\"\n      :series=\"series\"\n      :height=\"72\"\n    />\n\n    <VCardText class=\"pt-0\">\n      <div class=\"d-flex align-center justify-space-between mt-3\">\n        <h4 class=\"text-h4\">\n          175k\n        </h4>\n        <p class=\"mb-0 text-sm text-error\">\n          -16.2%\n        </p>\n      </div>\n    </VCardText>\n  </VCard>\n</template>\n","<script setup>\nimport VueApexCharts from 'vue3-apexcharts'\nimport { useTheme } from 'vuetify'\nimport { hexToRgb } from '@layouts/utils'\n\nconst vuetifyTheme = useTheme()\n\nconst series = [\n  {\n    name: 'PRODUCT A',\n    data: [\n      4,\n      3,\n      6,\n      4,\n      3,\n    ],\n  },\n  {\n    name: 'PRODUCT B',\n    data: [\n      -3,\n      -4,\n      -3,\n      -2,\n      -3,\n    ],\n  },\n]\n\nconst chartOptions = computed(() => {\n  const currentTheme = vuetifyTheme.current.value.colors\n  \n  return {\n    chart: {\n      type: 'bar',\n      parentHeightOffset: 0,\n      stacked: true,\n      toolbar: { show: false },\n    },\n    series: [\n      {\n        name: 'PRODUCT A',\n        data: [\n          4,\n          3,\n          6,\n          4,\n          3,\n        ],\n      },\n      {\n        name: 'PRODUCT B',\n        data: [\n          -3,\n          -4,\n          -3,\n          -2,\n          -3,\n        ],\n      },\n    ],\n    plotOptions: {\n      bar: {\n        horizontal: false,\n        columnWidth: '30%',\n        barHeight: '100%',\n        borderRadius: 5,\n        startingShape: 'rounded',\n        endingShape: 'rounded',\n      },\n    },\n    dataLabels: { enabled: false },\n    tooltip: { enabled: false },\n    stroke: {\n      curve: 'smooth',\n      width: 1,\n      lineCap: 'round',\n      colors: [currentTheme.surface],\n    },\n    legend: { show: false },\n    colors: [\n      `rgba(${ hexToRgb(currentTheme.primary) },1)`,\n      `rgba(${ hexToRgb(currentTheme.success) },1)`,\n    ],\n    grid: {\n      show: false,\n      padding: {\n        top: -41,\n        right: -5,\n        left: -3,\n        bottom: -15,\n      },\n    },\n    xaxis: {\n      categories: [\n        'Mon',\n        'Tue',\n        'Wed',\n        'Thu',\n        'Fri',\n        'Sat',\n        'Sun',\n      ],\n      labels: { show: false },\n      axisBorder: { show: false },\n      axisTicks: { show: false },\n    },\n    yaxis: { show: false },\n    responsive: [\n      {\n        breakpoint: 1441,\n        options: { plotOptions: { bar: { columnWidth: '40%' } } },\n      },\n      {\n        breakpoint: 1300,\n        options: { plotOptions: { bar: { columnWidth: '50%' } } },\n      },\n      {\n        breakpoint: 1279,\n        options: {\n          plotOptions: {\n            bar: {\n              borderRadius: 6,\n              columnWidth: '20%',\n            },\n          },\n        },\n      },\n      {\n        breakpoint: 1025,\n        options: {\n          plotOptions: {\n            bar: {\n              borderRadius: 7,\n              columnWidth: '25%',\n            },\n          },\n          chart: { height: 110 },\n        },\n      },\n      {\n        breakpoint: 960,\n        options: { plotOptions: { bar: { borderRadius: 6 } } },\n      },\n      {\n        breakpoint: 782,\n        options: { plotOptions: { bar: { columnWidth: '30%' } } },\n      },\n      {\n        breakpoint: 600,\n        options: {\n          plotOptions: {\n            bar: {\n              borderRadius: 12,\n              columnWidth: '20%',\n            },\n          },\n          chart: { height: 160 },\n        },\n      },\n      {\n        breakpoint: 426,\n        options: { plotOptions: { bar: { borderRadius: 8 } } },\n      },\n      {\n        breakpoint: 376,\n        options: { plotOptions: { bar: { borderRadius: 6 } } },\n      },\n    ],\n    states: {\n      hover: { filter: { type: 'none' } },\n      active: { filter: { type: 'none' } },\n    },\n  }\n})\n</script>\n\n<template>\n  <VCard>\n    <VCardText>\n      <div>\n        <h5 class=\"text-h5\">\n          Sessions\n        </h5>\n        <p class=\"mb-0 text-sm text-disabled\">\n          This Month\n        </p>\n      </div>\n\n      <VueApexCharts\n        :options=\"chartOptions\"\n        :series=\"series\"\n        :height=\"75\"\n      />\n\n      <div class=\"d-flex align-center justify-space-between mt-4\">\n        <h4 class=\"text-h4\">\n          45.1k\n        </h4>\n        <p class=\"mb-0 text-sm text-success\">\n          +12.6%\n        </p>\n      </div>\n    </VCardText>\n  </VCard>\n</template>\n","<script setup>\nimport CrmActiveProject from '@/views/dashboards/crm/CrmActiveProject.vue'\nimport CrmActivityTimeline from '@/views/dashboards/crm/CrmActivityTimeline.vue'\nimport CrmAnalyticsSales from '@/views/dashboards/crm/CrmAnalyticsSales.vue'\nimport CrmBrowserStates from '@/views/dashboards/crm/CrmBrowserStates.vue'\nimport CrmEarningReportsYearlyOverview from '@/views/dashboards/crm/CrmEarningReportsYearlyOverview.vue'\nimport CrmProjectStatus from '@/views/dashboards/crm/CrmProjectStatus.vue'\nimport CrmRecentTransactions from '@/views/dashboards/crm/CrmRecentTransactions.vue'\nimport CrmRevenueGrowth from '@/views/dashboards/crm/CrmRevenueGrowth.vue'\nimport CrmSalesAreaCharts from '@/views/dashboards/crm/CrmSalesAreaCharts.vue'\nimport CrmSessionsBarWithGapCharts from '@/views/dashboards/crm/CrmSessionsBarWithGapCharts.vue'\n\nconst simpleStatisticsDemoCards = [\n  {\n    icon: 'tabler-currency-dollar',\n    color: 'error',\n    title: 'Total Profit',\n    subTitle: 'Last week',\n    stat: '1.28k',\n    change: '-12.2%',\n  },\n  {\n    icon: 'tabler-chart-bar',\n    color: 'info',\n    title: 'Total Sales',\n    subTitle: 'Last week',\n    stat: '$4,673',\n    change: '+25.2%',\n  },\n]\n</script>\n\n<template>\n  <VRow class=\"match-height\">\n    <VCol\n      cols=\"12\"\n      md=\"4\"\n      sm=\"6\"\n      lg=\"2\"\n    >\n      <CrmSalesAreaCharts />\n    </VCol>\n\n    <VCol\n      cols=\"12\"\n      md=\"4\"\n      sm=\"6\"\n      lg=\"2\"\n    >\n      <CrmSessionsBarWithGapCharts />\n    </VCol>\n\n    <VCol\n      v-for=\"demo in simpleStatisticsDemoCards\"\n      :key=\"demo.title\"\n      cols=\"12\"\n      sm=\"6\"\n      md=\"4\"\n      lg=\"2\"\n    >\n      <VCard>\n        <VCardText>\n          <VAvatar\n            :color=\"demo.color\"\n            variant=\"tonal\"\n            rounded\n            size=\"42\"\n          >\n            <VIcon :icon=\"demo.icon\" />\n          </VAvatar>\n\n          <h5 class=\"text-h5 mt-4\">\n            {{ demo.title }}\n          </h5>\n          <p class=\"text-sm text-disabled my-1 mb-0\">\n            {{ demo.subTitle }}\n          </p>\n          <p class=\"mb-3\">\n            {{ demo.stat }}\n          </p>\n          <VChip\n            color=\"disabled\"\n            label\n          >\n            {{ demo.change }}\n          </VChip>\n        </VCardText>\n      </VCard>\n    </VCol>\n\n    <!-- ðŸ‘‰ Revenue Growth -->\n    <VCol\n      cols=\"12\"\n      md=\"8\"\n      lg=\"4\"\n    >\n      <CrmRevenueGrowth />\n    </VCol>\n\n    <!-- ðŸ‘‰ Earning Reports -->\n    <VCol\n      cols=\"12\"\n      md=\"8\"\n    >\n      <CrmEarningReportsYearlyOverview />\n    </VCol>\n\n    <!-- ðŸ‘‰ Sales -->\n    <VCol\n      cols=\"12\"\n      md=\"4\"\n    >\n      <CrmAnalyticsSales />\n    </VCol>\n\n    <!-- ðŸ‘‰ Browser States -->\n    <VCol\n      cols=\"12\"\n      md=\"4\"\n    >\n      <CrmBrowserStates />\n    </VCol>\n\n    <!-- ðŸ‘‰ Project Status -->\n    <VCol\n      cols=\"12\"\n      md=\"4\"\n    >\n      <CrmProjectStatus />\n    </VCol>\n\n    <!-- ðŸ‘‰ Active Project -->\n    <VCol\n      cols=\"12\"\n      md=\"4\"\n    >\n      <CrmActiveProject />\n    </VCol>\n\n    <!-- ðŸ‘‰ Recent Transactions -->\n    <VCol\n      cols=\"12\"\n      md=\"6\"\n    >\n      <CrmRecentTransactions />\n    </VCol>\n\n    <!-- ðŸ‘‰ Active timeline -->\n    <VCol\n      cols=\"12\"\n      md=\"6\"\n    >\n      <CrmActivityTimeline />\n    </VCol>\n  </VRow>\n</template>\n"],"names":["activeProjects","laravelLogo","figmaLogo","vuejsLogo","reactLogo","bootstrapLogo","sketchLogo","moreList","vuetifyTheme","useTheme","series","chartOptions","computed","currentTheme","variableTheme","borderColor","hexToRgb","labelColor","legendColor","browserStates","chrome","safari","firefox","operaMini","internetExplorer","brave","currentTab","ref","refVueApexChart","chartConfigs","labelPrimaryColor","val","projectStatus","lastTransitions","visaIcon","mastercardIcon","aeIcon","resolveStatus","labelSuccessColor","simpleStatisticsDemoCards"],"mappings":"yjDAQA,MAAAA,EAAA,CACA,CACA,UAAAC,EACA,MAAA,UACA,SAAA,YACA,MAAA,KACA,cAAA,OACA,EACA,CACA,UAAAC,EACA,MAAA,QACA,SAAA,aACA,MAAA,KACA,cAAA,SACA,EACA,CACA,UAAAC,EACA,MAAA,QACA,SAAA,eACA,MAAA,KACA,cAAA,SACA,EACA,CACA,UAAAC,EACA,MAAA,QACA,SAAA,YACA,MAAA,KACA,cAAA,MACA,EACA,CACA,UAAAC,EACA,MAAA,YACA,SAAA,UACA,MAAA,KACA,cAAA,SACA,EACA,CACA,UAAAC,EACA,MAAA,SACA,SAAA,iBACA,MAAA,KACA,cAAA,SACA,CACA,EAEAC,EAAA,CACA,CACA,MAAA,UACA,MAAA,SACA,EACA,CACA,MAAA,WACA,MAAA,UACA,EACA,CACA,MAAA,WACA,MAAA,UACA,CACA,02EC/DA,MAAAA,EAAA,CACA,CACA,MAAA,UACA,MAAA,SACA,EACA,CACA,MAAA,WACA,MAAA,UACA,EACA,CACA,MAAA,WACA,MAAA,UACA,CACA,64BCXA,MAAAC,EAAAC,EAAA,EAEAC,EAAA,CACA,CACA,KAAA,QACA,KAAA,CACA,GACA,GACA,GACA,GACA,GACA,EACA,CACA,EACA,CACA,KAAA,SACA,KAAA,CACA,GACA,GACA,GACA,GACA,GACA,EACA,CACA,CACA,EAEAC,EAAAC,EAAA,IAAA,CACA,MAAAC,EAAAL,EAAA,QAAA,MAAA,OACAM,EAAAN,EAAA,QAAA,MAAA,UACAO,EAAA,QAAAC,EAAA,OAAAF,EAAA,cAAA,CAAA,CAAA,CAAA,IAAAA,EAAA,gBAAA,CAAA,IACAG,EAAA,QAAAD,EAAAH,EAAA,YAAA,CAAA,CAAA,IAAAC,EAAA,kBAAA,CAAA,IACAI,EAAA,QAAAF,EAAAH,EAAA,eAAA,CAAA,CAAA,IAAAC,EAAA,uBAAA,CAAA,IAEA,MAAA,CACA,MAAA,CACA,KAAA,QACA,QAAA,CAAA,KAAA,EAAA,CACA,EACA,YAAA,CACA,MAAA,CACA,SAAA,CACA,aAAAC,EACA,gBAAAA,CACA,CACA,CACA,EACA,OAAA,CACA,KAAA,GACA,MAAA,CACA,EACA,OAAA,CACA,KAAA,GACA,SAAA,OACA,SAAA,SACA,OAAA,CACA,OAAAG,EACA,gBAAA,EACA,EACA,QAAA,CACA,OAAA,GACA,MAAA,GACA,QAAA,EACA,EACA,WAAA,CAAA,WAAA,EAAA,EACA,YAAA,CAAA,oBAAA,EAAA,CACA,EACA,OAAA,CACAL,EAAA,QACAA,EAAA,IACA,EACA,KAAA,CACA,QAAA,CACA,EACA,GACA,CACA,EACA,QAAA,CAAA,KAAA,CAAA,EACA,KAAA,CACA,KAAA,GACA,QAAA,CACA,IAAA,EACA,OAAA,EACA,CACA,EACA,MAAA,CACA,WAAA,CACA,MACA,MACA,MACA,MACA,MACA,KACA,EACA,OAAA,CACA,KAAA,GACA,MAAA,CACA,OAAA,CACAI,EACAA,EACAA,EACAA,EACAA,EACAA,CACA,EACA,SAAA,OACA,WAAA,aACA,CACA,CACA,EACA,MAAA,CACA,KAAA,GACA,IAAA,EACA,IAAA,GACA,WAAA,CACA,EACA,WAAA,CAAA,CACA,WAAA,IACA,QAAA,CAAA,MAAA,CAAA,OAAA,GAAA,CAAA,CACA,CAAA,CACA,CACA,CAAA,ijBCtHA,MAAAE,EAAA,CACA,CACA,UAAAC,GACA,MAAA,gBACA,MAAA,OACA,SAAA,WACA,EACA,CACA,UAAAC,GACA,MAAA,eACA,MAAA,OACA,SAAA,SACA,EACA,CACA,UAAAC,GACA,MAAA,kBACA,MAAA,OACA,SAAA,SACA,EACA,CACA,UAAAC,GACA,MAAA,aACA,MAAA,OACA,SAAA,OACA,EACA,CACA,UAAAC,GACA,MAAA,oBACA,MAAA,OACA,SAAA,MACA,EACA,CACA,UAAAC,GACA,MAAA,QACA,MAAA,OACA,SAAA,SACA,CACA,EAEAlB,EAAA,CACA,CACA,MAAA,UACA,MAAA,SACA,EACA,CACA,MAAA,WACA,MAAA,UACA,EACA,CACA,MAAA,WACA,MAAA,UACA,CACA,y8BCvDA,MAAAC,EAAAC,EAAA,EACAiB,EAAAC,EAAA,CAAA,EACAC,EAAAD,EAAA,EAEAE,EAAAjB,EAAA,IAAA,CACA,MAAAC,EAAAL,EAAA,QAAA,MAAA,OACAM,EAAAN,EAAA,QAAA,MAAA,UACAsB,EAAA,QAAAd,EAAAH,EAAA,OAAA,CAAA,IAAAC,EAAA,iBAAA,CAAA,IACAI,EAAA,QAAAF,EAAAH,EAAA,eAAA,CAAA,CAAA,IAAAC,EAAA,uBAAA,CAAA,IACAC,EAAA,QAAAC,EAAA,OAAAF,EAAA,cAAA,CAAA,CAAA,CAAA,IAAAA,EAAA,gBAAA,CAAA,IACAG,EAAA,QAAAD,EAAAH,EAAA,YAAA,CAAA,CAAA,IAAAC,EAAA,kBAAA,CAAA,IAEA,MAAA,CACA,CACA,MAAA,SACA,KAAA,uBACA,aAAA,CACA,MAAA,CACA,mBAAA,EACA,KAAA,MACA,QAAA,CAAA,KAAA,EAAA,CACA,EACA,YAAA,CACA,IAAA,CACA,YAAA,MACA,cAAA,UACA,aAAA,EACA,YAAA,GACA,WAAA,CAAA,SAAA,KAAA,CACA,CACA,EACA,KAAA,CACA,KAAA,GACA,QAAA,CACA,IAAA,EACA,OAAA,EACA,KAAA,IACA,MAAA,GACA,CACA,EACA,OAAA,CACAgB,EACAA,EACA,QAAAd,EAAAH,EAAA,OAAA,CAAA,MACAiB,EACAA,EACAA,EACAA,EACAA,EACAA,CACA,EACA,WAAA,CACA,QAAA,GACA,UAAAC,EAAA,CACA,MAAA,GAAAA,CAAA,GACA,EACA,QAAA,IACA,MAAA,CACA,SAAA,OACA,OAAA,CAAAb,CAAA,EACA,WAAA,MACA,WAAA,aACA,CACA,EACA,OAAA,CAAA,KAAA,EAAA,EACA,QAAA,CAAA,QAAA,EAAA,EACA,MAAA,CACA,WAAA,CACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KACA,EACA,WAAA,CACA,KAAA,GACA,MAAAH,CACA,EACA,UAAA,CAAA,KAAA,EAAA,EACA,OAAA,CACA,MAAA,CACA,OAAAE,EACA,SAAA,OACA,WAAA,aACA,CACA,CACA,EACA,MAAA,CACA,OAAA,CACA,QAAA,IACA,UAAAc,EAAA,CACA,MAAA,GAAA,SAAA,OAAAA,EAAA,CAAA,CAAA,CAAA,GACA,EACA,MAAA,CACA,SAAA,OACA,OAAAd,EACA,WAAA,aACA,EACA,IAAA,EACA,IAAA,IACA,WAAA,CACA,CACA,EACA,WAAA,CACA,CACA,WAAA,KACA,QAAA,CAAA,YAAA,CAAA,IAAA,CAAA,YAAA,KAAA,EAAA,CACA,EACA,CACA,WAAA,IACA,QAAA,CACA,YAAA,CAAA,IAAA,CAAA,YAAA,KAAA,CAAA,EACA,MAAA,CAAA,OAAA,CAAA,KAAA,EAAA,CAAA,EACA,KAAA,CACA,QAAA,CACA,MAAA,EACA,KAAA,GACA,CACA,EACA,WAAA,CACA,MAAA,CACA,SAAA,OACA,WAAA,KACA,CACA,CACA,CACA,CACA,CACA,EACA,OAAA,CAAA,CACA,KAAA,CACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,CACA,CACA,CAAA,CACA,EACA,CACA,MAAA,QACA,KAAA,mBACA,aAAA,CACA,MAAA,CACA,mBAAA,EACA,KAAA,MACA,QAAA,CAAA,KAAA,EAAA,CACA,EACA,YAAA,CACA,IAAA,CACA,YAAA,MACA,cAAA,UACA,aAAA,EACA,YAAA,GACA,WAAA,CAAA,SAAA,KAAA,CACA,CACA,EACA,KAAA,CACA,KAAA,GACA,QAAA,CACA,IAAA,EACA,OAAA,EACA,KAAA,IACA,MAAA,GACA,CACA,EACA,OAAA,CACAa,EACAA,EACAA,EACAA,EACAA,EACAA,EACAjB,EAAA,QACAiB,EACAA,CACA,EACA,WAAA,CACA,QAAA,GACA,UAAAC,EAAA,CACA,MAAA,GAAAA,CAAA,GACA,EACA,QAAA,IACA,MAAA,CACA,SAAA,OACA,OAAA,CAAAb,CAAA,EACA,WAAA,MACA,WAAA,aACA,CACA,EACA,OAAA,CAAA,KAAA,EAAA,EACA,QAAA,CAAA,QAAA,EAAA,EACA,MAAA,CACA,WAAA,CACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KACA,EACA,WAAA,CACA,KAAA,GACA,MAAAH,CACA,EACA,UAAA,CAAA,KAAA,EAAA,EACA,OAAA,CACA,MAAA,CACA,OAAAE,EACA,SAAA,OACA,WAAA,aACA,CACA,CACA,EACA,MAAA,CACA,OAAA,CACA,QAAA,IACA,UAAAc,EAAA,CACA,MAAA,GAAA,SAAA,OAAAA,EAAA,CAAA,CAAA,CAAA,GACA,EACA,MAAA,CACA,SAAA,OACA,OAAAd,EACA,WAAA,aACA,EACA,IAAA,EACA,IAAA,IACA,WAAA,CACA,CACA,EACA,WAAA,CACA,CACA,WAAA,KACA,QAAA,CAAA,YAAA,CAAA,IAAA,CAAA,YAAA,KAAA,EAAA,CACA,EACA,CACA,WAAA,IACA,QAAA,CACA,YAAA,CAAA,IAAA,CAAA,YAAA,KAAA,CAAA,EACA,KAAA,CAAA,QAAA,CAAA,MAAA,CAAA,CAAA,EACA,WAAA,CACA,MAAA,CACA,SAAA,OACA,WAAA,KACA,CACA,EACA,MAAA,CAAA,OAAA,CAAA,KAAA,EAAA,CAAA,CACA,CACA,CACA,CACA,EACA,OAAA,CAAA,CACA,KAAA,CACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,CACA,CAAA,CACA,EACA,CACA,MAAA,SACA,KAAA,yBACA,aAAA,CACA,MAAA,CACA,mBAAA,EACA,KAAA,MACA,QAAA,CAAA,KAAA,EAAA,CACA,EACA,YAAA,CACA,IAAA,CACA,YAAA,MACA,cAAA,UACA,aAAA,EACA,YAAA,GACA,WAAA,CAAA,SAAA,KAAA,CACA,CACA,EACA,KAAA,CACA,KAAA,GACA,QAAA,CACA,IAAA,EACA,OAAA,EACA,KAAA,IACA,MAAA,GACA,CACA,EACA,OAAA,CACAa,EACAA,EACAA,EACAA,EACAjB,EAAA,QACAiB,EACAA,EACAA,EACAA,CACA,EACA,WAAA,CACA,QAAA,GACA,UAAAC,EAAA,CACA,MAAA,GAAAA,CAAA,GACA,EACA,QAAA,IACA,MAAA,CACA,SAAA,OACA,OAAA,CAAAb,CAAA,EACA,WAAA,MACA,WAAA,aACA,CACA,EACA,OAAA,CAAA,KAAA,EAAA,EACA,QAAA,CAAA,QAAA,EAAA,EACA,MAAA,CACA,WAAA,CACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KACA,EACA,WAAA,CACA,KAAA,GACA,MAAAH,CACA,EACA,UAAA,CAAA,KAAA,EAAA,EACA,OAAA,CACA,MAAA,CACA,OAAAE,EACA,SAAA,OACA,WAAA,aACA,CACA,CACA,EACA,MAAA,CACA,OAAA,CACA,QAAA,IACA,UAAAc,EAAA,CACA,MAAA,GAAA,SAAA,OAAAA,EAAA,CAAA,CAAA,CAAA,GACA,EACA,MAAA,CACA,SAAA,OACA,OAAAd,EACA,WAAA,aACA,EACA,IAAA,EACA,IAAA,IACA,WAAA,CACA,CACA,EACA,WAAA,CACA,CACA,WAAA,KACA,QAAA,CAAA,YAAA,CAAA,IAAA,CAAA,YAAA,KAAA,EAAA,CACA,EACA,CACA,WAAA,IACA,QAAA,CACA,YAAA,CAAA,IAAA,CAAA,YAAA,KAAA,CAAA,EACA,KAAA,CAAA,QAAA,CAAA,MAAA,CAAA,CAAA,EACA,WAAA,CACA,MAAA,CACA,SAAA,OACA,WAAA,KACA,CACA,EACA,MAAA,CAAA,OAAA,CAAA,KAAA,EAAA,CAAA,CACA,CACA,CACA,CACA,EACA,OAAA,CAAA,CACA,KAAA,CACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,CACA,CACA,CAAA,CACA,EACA,CACA,MAAA,SACA,KAAA,qBACA,aAAA,CACA,MAAA,CACA,mBAAA,EACA,KAAA,MACA,QAAA,CAAA,KAAA,EAAA,CACA,EACA,YAAA,CACA,IAAA,CACA,YAAA,MACA,cAAA,UACA,aAAA,EACA,YAAA,GACA,WAAA,CAAA,SAAA,KAAA,CACA,CACA,EACA,KAAA,CACA,KAAA,GACA,QAAA,CACA,IAAA,EACA,OAAA,EACA,KAAA,IACA,MAAA,GACA,CACA,EACA,OAAA,CACAa,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAjB,EAAA,OACA,EACA,WAAA,CACA,QAAA,GACA,UAAAkB,EAAA,CACA,MAAA,GAAAA,CAAA,GACA,EACA,QAAA,IACA,MAAA,CACA,SAAA,OACA,OAAA,CAAAb,CAAA,EACA,WAAA,MACA,WAAA,aACA,CACA,EACA,OAAA,CAAA,KAAA,EAAA,EACA,QAAA,CAAA,QAAA,EAAA,EACA,MAAA,CACA,WAAA,CACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KACA,EACA,WAAA,CACA,KAAA,GACA,MAAAH,CACA,EACA,UAAA,CAAA,KAAA,EAAA,EACA,OAAA,CACA,MAAA,CACA,OAAAE,EACA,SAAA,OACA,WAAA,aACA,CACA,CACA,EACA,MAAA,CACA,OAAA,CACA,QAAA,IACA,UAAAc,EAAA,CACA,MAAA,GAAA,SAAA,OAAAA,EAAA,CAAA,CAAA,CAAA,GACA,EACA,MAAA,CACA,SAAA,OACA,OAAAd,EACA,WAAA,aACA,EACA,IAAA,EACA,IAAA,IACA,WAAA,CACA,CACA,EACA,WAAA,CACA,CACA,WAAA,KACA,QAAA,CAAA,YAAA,CAAA,IAAA,CAAA,YAAA,KAAA,EAAA,CACA,EACA,CACA,WAAA,IACA,QAAA,CACA,YAAA,CAAA,IAAA,CAAA,YAAA,KAAA,CAAA,EACA,WAAA,CACA,MAAA,CACA,SAAA,OACA,WAAA,KACA,CACA,EACA,KAAA,CAAA,QAAA,CAAA,MAAA,CAAA,CAAA,EACA,MAAA,CAAA,OAAA,CAAA,KAAA,EAAA,CAAA,CACA,CACA,CACA,CACA,EACA,OAAA,CAAA,CACA,KAAA,CACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,CACA,CAAA,CACA,CACA,CACA,CAAA,6kDCvhBA,MAAAT,EAAAC,EAAA,EAEAC,EAAA,CAAA,CACA,KAAA,CACA,IACA,IACA,IACA,IACA,KACA,KACA,IACA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACA,CACA,CAAA,EAEAC,EAAAC,EAAA,IAAA,CACA,MAAAC,EAAAL,EAAA,QAAA,MAAA,OAEA,MAAA,CACA,MAAA,CACA,KAAA,OACA,QAAA,EACA,EACA,QAAA,CAAA,YAAA,aAAA,EACA,WAAA,CAAA,QAAA,EAAA,EACA,KAAA,CACA,KAAA,GACA,QAAA,CACA,KAAA,IACA,MAAA,EACA,CACA,EACA,OAAA,CACA,MAAA,EACA,MAAA,UACA,EACA,OAAA,CAAAK,EAAA,OAAA,EACA,KAAA,CACA,KAAA,WACA,SAAA,CACA,YAAA,GACA,UAAA,IACA,MAAA,CACA,EACA,GACA,GACA,CACA,CACA,EACA,MAAA,CACA,OAAA,CAAA,KAAA,EAAA,EACA,WAAA,CAAA,KAAA,EAAA,EACA,UAAA,CAAA,KAAA,EAAA,EACA,MAAA,CAAA,KAAA,EAAA,CACA,EACA,MAAA,CACA,OAAA,CAAA,KAAA,EAAA,EACA,IAAA,IACA,IAAA,IACA,WAAA,CACA,EACA,QAAA,CAAA,QAAA,EAAA,CACA,CACA,CAAA,EAEAmB,EAAA,CACA,CACA,MAAA,UACA,OAAA,UACA,WAAA,OACA,EACA,CACA,MAAA,WACA,OAAA,YACA,WAAA,MACA,CACA,ksDCpFA,MAAAC,EAAA,CACA,CACA,QAAAC,EACA,UAAA,QACA,SAAA,SACA,SAAA,cACA,OAAA,WACA,MAAA,SACA,EACA,CACA,QAAAC,GACA,UAAA,QACA,SAAA,SACA,SAAA,cACA,OAAA,WACA,MAAA,OACA,EACA,CACA,QAAAC,GACA,UAAA,QACA,SAAA,SACA,SAAA,cACA,OAAA,WACA,MAAA,OACA,EACA,CACA,QAAAF,EACA,UAAA,QACA,SAAA,SACA,SAAA,aACA,OAAA,UACA,MAAA,SACA,EACA,CACA,QAAAA,EACA,UAAA,QACA,SAAA,SACA,SAAA,aACA,OAAA,WACA,MAAA,OACA,CACA,EAEAG,EAAA,CACA,SAAA,UACA,SAAA,QACA,QAAA,WACA,EAEA9B,EAAA,CACA,CACA,MAAA,UACA,MAAA,SACA,EACA,CACA,MAAA,WACA,MAAA,UACA,EACA,CACA,MAAA,WACA,MAAA,UACA,CACA,46BC9DA,MAAAC,EAAAC,EAAA,EAEAC,EAAA,CAAA,CACA,KAAA,CACA,GACA,GACA,GACA,GACA,IACA,GACA,EACA,CACA,CAAA,EAEAC,EAAAC,EAAA,IAAA,CACA,MAAAC,EAAAL,EAAA,QAAA,MAAA,OACAM,EAAAN,EAAA,QAAA,MAAA,UACA8B,EAAA,QAAAtB,EAAAH,EAAA,OAAA,CAAA,SACAI,EAAA,QAAAD,EAAAH,EAAA,YAAA,CAAA,CAAA,IAAAC,EAAA,kBAAA,CAAA,IAEA,MAAA,CACA,MAAA,CACA,KAAA,MACA,mBAAA,EACA,QAAA,CAAA,KAAA,EAAA,CACA,EACA,YAAA,CACA,IAAA,CACA,UAAA,MACA,YAAA,MACA,cAAA,UACA,YAAA,UACA,aAAA,EACA,YAAA,EACA,CACA,EACA,QAAA,CAAA,QAAA,EAAA,EACA,KAAA,CACA,KAAA,GACA,QAAA,CACA,IAAA,IACA,OAAA,IACA,KAAA,IACA,MAAA,CACA,CACA,EACA,OAAA,CACAwB,EACAA,EACAA,EACAA,EACAzB,EAAA,QACAyB,EACAA,CACA,EACA,WAAA,CAAA,QAAA,EAAA,EACA,OAAA,CAAA,KAAA,EAAA,EACA,MAAA,CACA,WAAA,CACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,EACA,WAAA,CAAA,KAAA,EAAA,EACA,UAAA,CAAA,KAAA,EAAA,EACA,OAAA,CACA,MAAA,CACA,OAAArB,EACA,SAAA,OACA,WAAA,aACA,CACA,CACA,EACA,MAAA,CAAA,OAAA,CAAA,KAAA,EAAA,CAAA,EACA,OAAA,CAAA,MAAA,CAAA,OAAA,CAAA,KAAA,MAAA,EAAA,EACA,WAAA,CACA,CACA,WAAA,KACA,QAAA,CAAA,YAAA,CAAA,IAAA,CAAA,YAAA,KAAA,EAAA,CACA,EACA,CACA,WAAA,KACA,QAAA,CAAA,YAAA,CAAA,IAAA,CAAA,YAAA,KAAA,EAAA,CACA,EACA,CACA,WAAA,KACA,QAAA,CAAA,YAAA,CAAA,IAAA,CAAA,YAAA,KAAA,EAAA,CACA,EACA,CACA,WAAA,IACA,QAAA,CACA,YAAA,CACA,IAAA,CACA,YAAA,MACA,aAAA,CACA,CACA,CACA,CACA,EACA,CACA,WAAA,IACA,QAAA,CACA,YAAA,CACA,IAAA,CACA,YAAA,MACA,aAAA,CACA,CACA,CACA,CACA,EACA,CACA,WAAA,IACA,QAAA,CAAA,YAAA,CAAA,IAAA,CAAA,YAAA,KAAA,EAAA,CACA,EACA,CACA,WAAA,IACA,QAAA,CAAA,YAAA,CAAA,IAAA,CAAA,YAAA,KAAA,EAAA,CACA,CACA,CACA,CACA,CAAA,smBC5HA,MAAAJ,EADAJ,EAAA,EACA,QAAA,MAAA,OAEAC,EAAA,CAAA,CACA,KAAA,cACA,KAAA,CACA,IACA,GACA,IACA,GACA,CACA,CAAA,EAEAC,EAAA,CACA,MAAA,CACA,KAAA,OACA,mBAAA,EACA,QAAA,CAAA,KAAA,EAAA,EACA,UAAA,CAAA,QAAA,EAAA,CACA,EACA,QAAA,CACA,OAAA,cACA,aAAA,aACA,EACA,KAAA,CAAA,KAAA,EAAA,EACA,OAAA,CAAAE,EAAA,OAAA,EACA,KAAA,CACA,KAAA,WACA,SAAA,CACA,eAAA,GACA,YAAA,GACA,UAAA,IACA,MAAA,CACA,EACA,GACA,GACA,CACA,CACA,EACA,WAAA,CAAA,QAAA,EAAA,EACA,OAAA,CACA,MAAA,EACA,MAAA,QACA,EACA,MAAA,CACA,KAAA,GACA,MAAA,CAAA,KAAA,EAAA,EACA,OAAA,CAAA,KAAA,EAAA,EACA,OAAA,CAAA,MAAA,CAAA,EACA,WAAA,CAAA,KAAA,EAAA,CACA,EACA,MAAA,CACA,OAAA,CAAA,MAAA,CAAA,EACA,KAAA,EACA,EACA,QAAA,CAAA,QAAA,EAAA,CACA,4gBCvDA,MAAAL,EAAAC,EAAA,EAEAC,EAAA,CACA,CACA,KAAA,YACA,KAAA,CACA,EACA,EACA,EACA,EACA,CACA,CACA,EACA,CACA,KAAA,YACA,KAAA,CACA,GACA,GACA,GACA,GACA,EACA,CACA,CACA,EAEAC,EAAAC,EAAA,IAAA,CACA,MAAAC,EAAAL,EAAA,QAAA,MAAA,OAEA,MAAA,CACA,MAAA,CACA,KAAA,MACA,mBAAA,EACA,QAAA,GACA,QAAA,CAAA,KAAA,EAAA,CACA,EACA,OAAA,CACA,CACA,KAAA,YACA,KAAA,CACA,EACA,EACA,EACA,EACA,CACA,CACA,EACA,CACA,KAAA,YACA,KAAA,CACA,GACA,GACA,GACA,GACA,EACA,CACA,CACA,EACA,YAAA,CACA,IAAA,CACA,WAAA,GACA,YAAA,MACA,UAAA,OACA,aAAA,EACA,cAAA,UACA,YAAA,SACA,CACA,EACA,WAAA,CAAA,QAAA,EAAA,EACA,QAAA,CAAA,QAAA,EAAA,EACA,OAAA,CACA,MAAA,SACA,MAAA,EACA,QAAA,QACA,OAAA,CAAAK,EAAA,OAAA,CACA,EACA,OAAA,CAAA,KAAA,EAAA,EACA,OAAA,CACA,QAAAG,EAAAH,EAAA,OAAA,CAAA,MACA,QAAAG,EAAAH,EAAA,OAAA,CAAA,KACA,EACA,KAAA,CACA,KAAA,GACA,QAAA,CACA,IAAA,IACA,MAAA,GACA,KAAA,GACA,OAAA,GACA,CACA,EACA,MAAA,CACA,WAAA,CACA,MACA,MACA,MACA,MACA,MACA,MACA,KACA,EACA,OAAA,CAAA,KAAA,EAAA,EACA,WAAA,CAAA,KAAA,EAAA,EACA,UAAA,CAAA,KAAA,EAAA,CACA,EACA,MAAA,CAAA,KAAA,EAAA,EACA,WAAA,CACA,CACA,WAAA,KACA,QAAA,CAAA,YAAA,CAAA,IAAA,CAAA,YAAA,KAAA,EAAA,CACA,EACA,CACA,WAAA,KACA,QAAA,CAAA,YAAA,CAAA,IAAA,CAAA,YAAA,KAAA,EAAA,CACA,EACA,CACA,WAAA,KACA,QAAA,CACA,YAAA,CACA,IAAA,CACA,aAAA,EACA,YAAA,KACA,CACA,CACA,CACA,EACA,CACA,WAAA,KACA,QAAA,CACA,YAAA,CACA,IAAA,CACA,aAAA,EACA,YAAA,KACA,CACA,EACA,MAAA,CAAA,OAAA,GAAA,CACA,CACA,EACA,CACA,WAAA,IACA,QAAA,CAAA,YAAA,CAAA,IAAA,CAAA,aAAA,CAAA,EAAA,CACA,EACA,CACA,WAAA,IACA,QAAA,CAAA,YAAA,CAAA,IAAA,CAAA,YAAA,KAAA,EAAA,CACA,EACA,CACA,WAAA,IACA,QAAA,CACA,YAAA,CACA,IAAA,CACA,aAAA,GACA,YAAA,KACA,CACA,EACA,MAAA,CAAA,OAAA,GAAA,CACA,CACA,EACA,CACA,WAAA,IACA,QAAA,CAAA,YAAA,CAAA,IAAA,CAAA,aAAA,CAAA,EAAA,CACA,EACA,CACA,WAAA,IACA,QAAA,CAAA,YAAA,CAAA,IAAA,CAAA,aAAA,CAAA,EAAA,CACA,CACA,EACA,OAAA,CACA,MAAA,CAAA,OAAA,CAAA,KAAA,MAAA,CAAA,EACA,OAAA,CAAA,OAAA,CAAA,KAAA,MAAA,CAAA,CACA,CACA,CACA,CAAA,+QCnKA,MAAA0B,EAAA,CACA,CACA,KAAA,yBACA,MAAA,QACA,MAAA,eACA,SAAA,YACA,KAAA,QACA,OAAA,QACA,EACA,CACA,KAAA,mBACA,MAAA,OACA,MAAA,cACA,SAAA,YACA,KAAA,SACA,OAAA,QACA,CACA"}