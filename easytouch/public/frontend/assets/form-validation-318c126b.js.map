{"version":3,"file":"form-validation-318c126b.js","sources":["../../../../frontend/src/views/demos/forms/form-validation/DemoFormValidationValidationTypes.vue","../../../../frontend/src/views/demos/forms/form-validation/DemoFormValidationValidatingMultipleRules.vue","../../../../frontend/src/views/demos/forms/form-validation/DemoFormValidationSimpleFormValidation.vue","../../../../frontend/src/views/demos/forms/form-validation/demoCodeFormValidation.js"],"sourcesContent":["<script setup>\nimport {\n  alphaDashValidator,\n  alphaValidator,\n  betweenValidator,\n  confirmedValidator,\n  emailValidator,\n  integerValidator,\n  lengthValidator,\n  passwordValidator,\n  regexValidator,\n  requiredValidator,\n  urlValidator,\n} from '@validators'\n\nconst requiredField = ref('')\nconst numberBetween10to20 = ref('')\nconst onlyConsistNumber = ref('')\nconst matchRegularEx = ref('')\nconst onlyAlphabeticCharacters = ref('')\nconst specifiedLength = ref('')\nconst password = ref('')\nconst digits = ref('')\nconst repeatPassword = ref('')\nconst onlyAlphabeticNumbersDashesUnderscores = ref('')\nconst email = ref('')\nconst validURL = ref('')\nconst refForm = ref()\n</script>\n\n<template>\n  <VForm\n    ref=\"refForm\"\n    @submit.prevent\n  >\n    <VRow>\n      <VCol\n        cols=\"12\"\n        md=\"6\"\n      >\n        <AppTextField\n          v-model=\"requiredField\"\n          persistent-placeholder\n          placeholder=\"This field is required\"\n          :rules=\"[requiredValidator]\"\n        />\n      </VCol>\n\n      <VCol\n        cols=\"12\"\n        md=\"6\"\n      >\n        <AppTextField\n          v-model=\"numberBetween10to20\"\n          persistent-placeholder\n          placeholder=\"Enter Number between 10 & 20\"\n          :rules=\"[requiredValidator, betweenValidator(numberBetween10to20, 10, 20)]\"\n        />\n      </VCol>\n\n      <VCol\n        cols=\"12\"\n        md=\"6\"\n      >\n        <AppTextField\n          v-model=\"onlyConsistNumber\"\n          persistent-placeholder\n          placeholder=\"Must only consist of numbers\"\n          :rules=\"[requiredValidator, integerValidator]\"\n        />\n      </VCol>\n\n      <VCol\n        cols=\"12\"\n        md=\"6\"\n      >\n        <AppTextField\n          v-model=\"matchRegularEx\"\n          persistent-placeholder\n          placeholder=\"Must match the specified regular expression : ^([0-9]+)$ - numbers only\"\n          :rules=\"[requiredValidator, regexValidator(matchRegularEx, '^([0-9]+)$')]\"\n        />\n      </VCol>\n\n      <VCol\n        cols=\"12\"\n        md=\"6\"\n      >\n        <AppTextField\n          v-model=\"onlyAlphabeticCharacters\"\n          persistent-placeholder\n          placeholder=\"Only alphabetic characters\"\n          :rules=\"[requiredValidator, alphaValidator]\"\n        />\n      </VCol>\n\n      <VCol\n        cols=\"12\"\n        md=\"6\"\n      >\n        <AppTextField\n          v-model=\"specifiedLength\"\n          persistent-placeholder\n          placeholder=\"Length should not be less than the specified length : 3\"\n          :rules=\"[requiredValidator, lengthValidator(specifiedLength, 3)]\"\n        />\n      </VCol>\n\n      <VCol\n        cols=\"12\"\n        md=\"6\"\n      >\n        <AppTextField\n          v-model=\"password\"\n          persistent-placeholder\n          placeholder=\"Password Input Field\"\n          type=\"password\"\n          :rules=\"[requiredValidator, passwordValidator]\"\n          autocomplete=\"on\"\n        />\n      </VCol>\n\n      <VCol\n        cols=\"12\"\n        md=\"6\"\n      >\n        <AppTextField\n          v-model=\"digits\"\n          persistent-placeholder\n          placeholder=\"The digits field must be numeric and exactly contain 3 digits\"\n          :rules=\"[requiredValidator, lengthValidator(digits, 3), integerValidator]\"\n        />\n      </VCol>\n\n      <VCol\n        cols=\"12\"\n        md=\"6\"\n      >\n        <AppTextField\n          v-model=\"repeatPassword\"\n          persistent-placeholder\n          placeholder=\"Repeat password must match\"\n          type=\"password\"\n          :rules=\"[requiredValidator, confirmedValidator(repeatPassword, password)]\"\n          autocomplete=\"on\"\n        />\n      </VCol>\n\n      <VCol\n        cols=\"12\"\n        md=\"6\"\n      >\n        <AppTextField\n          v-model=\"onlyAlphabeticNumbersDashesUnderscores\"\n          persistent-placeholder\n          placeholder=\"Only alphabetic characters, numbers, dashes or underscores\"\n          :rules=\"[requiredValidator, alphaDashValidator]\"\n        />\n      </VCol>\n\n      <VCol\n        cols=\"12\"\n        md=\"6\"\n      >\n        <AppTextField\n          v-model=\"email\"\n          persistent-placeholder\n          placeholder=\"Must be a valid email\"\n          :rules=\"[requiredValidator, emailValidator]\"\n        />\n      </VCol>\n\n      <VCol\n        cols=\"12\"\n        md=\"6\"\n      >\n        <AppTextField\n          v-model=\"validURL\"\n          persistent-placeholder\n          placeholder=\"Must be a valid url\"\n          :rules=\"[requiredValidator, urlValidator]\"\n        />\n      </VCol>\n\n      <VCol cols=\"12\">\n        <VBtn\n          type=\"submit\"\n          @click=\"refForm?.validate()\"\n        >\n          Submit\n        </VBtn>\n      </VCol>\n    </VRow>\n  </VForm>\n</template>\n","<script setup>\nimport {\n  confirmedValidator,\n  emailValidator,\n  passwordValidator,\n  requiredValidator,\n} from '@validators'\n\nconst name = ref('')\nconst email = ref('')\nconst refForm = ref()\nconst password = ref('')\nconst confirmPassword = ref('')\n</script>\n\n<template>\n  <VForm\n    ref=\"refForm\"\n    @submit.prevent=\"() => {}\"\n  >\n    <VRow>\n      <VCol\n        cols=\"12\"\n        md=\"6\"\n      >\n        <AppTextField\n          v-model=\"name\"\n          placeholder=\"Your Name\"\n          persistent-placeholder\n          :rules=\"[requiredValidator]\"\n        />\n      </VCol>\n\n      <VCol\n        cols=\"12\"\n        md=\"6\"\n      >\n        <AppTextField\n          v-model=\"email\"\n          placeholder=\"Your Email\"\n          persistent-placeholder\n          :rules=\"[requiredValidator, emailValidator]\"\n        />\n      </VCol>\n\n      <VCol\n        cols=\"12\"\n        md=\"6\"\n      >\n        <AppTextField\n          v-model=\"password\"\n          type=\"password\"\n          placeholder=\"Your Password\"\n          persistent-placeholder\n          :rules=\"[requiredValidator, passwordValidator]\"\n          autocomplete=\"on\"\n        />\n      </VCol>\n\n      <VCol\n        cols=\"12\"\n        md=\"6\"\n      >\n        <AppTextField\n          v-model=\"confirmPassword\"\n          type=\"password\"\n          placeholder=\"Confirm Password\"\n          persistent-placeholder\n          :rules=\"[requiredValidator, confirmedValidator(confirmPassword, password)]\"\n          autocomplete=\"on\"\n        />\n      </VCol>\n\n      <VCol cols=\"12\">\n        <VBtn\n          type=\"submit\"\n          @click=\"refForm?.validate()\"\n        >\n          Submit\n        </VBtn>\n      </VCol>\n    </VRow>\n  </VForm>\n</template>\n","<script setup>\nimport {\n  emailValidator,\n  requiredValidator,\n} from '@validators'\n\nconst firstName = ref('')\nconst email = ref('')\nconst refForm = ref()\n</script>\n\n<template>\n  <VForm\n    ref=\"refForm\"\n    @submit.prevent=\"() => {}\"\n  >\n    <VRow>\n      <VCol\n        cols=\"12\"\n        md=\"6\"\n      >\n        <AppTextField\n          v-model=\"firstName\"\n          label=\"First Name\"\n          :rules=\"[requiredValidator]\"\n        />\n      </VCol>\n\n      <VCol\n        cols=\"12\"\n        md=\"6\"\n      >\n        <AppTextField\n          v-model=\"email\"\n          label=\"Email\"\n          :rules=\"[requiredValidator, emailValidator]\"\n        />\n      </VCol>\n\n      <VCol cols=\"12\">\n        <VBtn\n          type=\"submit\"\n          @click=\"refForm?.validate()\"\n        >\n          Submit\n        </VBtn>\n      </VCol>\n    </VRow>\n  </VForm>\n</template>\n","export const simpleFormValidation = { ts: `<script lang=\"ts\" setup>\n// eslint-disable-next-line @typescript-eslint/consistent-type-imports\nimport type { VForm } from 'vuetify/components/VForm'\nimport { emailValidator, requiredValidator } from '@validators'\n\nconst firstName = ref('')\nconst email = ref('')\n\nconst refForm = ref<VForm>()\n</script>\n\n<template>\n  <VForm\n    ref=\"refForm\"\n    @submit.prevent=\"() => {}\"\n  >\n    <VRow>\n      <VCol\n        cols=\"12\"\n        md=\"6\"\n      >\n        <AppTextField\n          v-model=\"firstName\"\n          label=\"First Name\"\n          :rules=\"[requiredValidator]\"\n        />\n      </VCol>\n\n      <VCol\n        cols=\"12\"\n        md=\"6\"\n      >\n        <AppTextField\n          v-model=\"email\"\n          label=\"Email\"\n          :rules=\"[requiredValidator, emailValidator]\"\n        />\n      </VCol>\n\n      <VCol cols=\"12\">\n        <VBtn\n          type=\"submit\"\n          @click=\"refForm?.validate()\"\n        >\n          Submit\n        </VBtn>\n      </VCol>\n    </VRow>\n  </VForm>\n</template>\n`, js: `<script setup>\nimport {\n  emailValidator,\n  requiredValidator,\n} from '@validators'\n\nconst firstName = ref('')\nconst email = ref('')\nconst refForm = ref()\n</script>\n\n<template>\n  <VForm\n    ref=\"refForm\"\n    @submit.prevent=\"() => {}\"\n  >\n    <VRow>\n      <VCol\n        cols=\"12\"\n        md=\"6\"\n      >\n        <AppTextField\n          v-model=\"firstName\"\n          label=\"First Name\"\n          :rules=\"[requiredValidator]\"\n        />\n      </VCol>\n\n      <VCol\n        cols=\"12\"\n        md=\"6\"\n      >\n        <AppTextField\n          v-model=\"email\"\n          label=\"Email\"\n          :rules=\"[requiredValidator, emailValidator]\"\n        />\n      </VCol>\n\n      <VCol cols=\"12\">\n        <VBtn\n          type=\"submit\"\n          @click=\"refForm?.validate()\"\n        >\n          Submit\n        </VBtn>\n      </VCol>\n    </VRow>\n  </VForm>\n</template>\n` }\n\nexport const validatingMultipleRules = { ts: `<script lang=\"ts\" setup>\n// eslint-disable-next-line @typescript-eslint/consistent-type-imports\nimport type { VForm } from 'vuetify/components/VForm'\nimport { confirmedValidator, emailValidator, passwordValidator, requiredValidator } from '@validators'\n\nconst name = ref('')\nconst email = ref('')\nconst refForm = ref<VForm>()\nconst password = ref('')\nconst confirmPassword = ref('')\n</script>\n\n<template>\n  <VForm\n    ref=\"refForm\"\n    @submit.prevent=\"() => {}\"\n  >\n    <VRow>\n      <VCol\n        cols=\"12\"\n        md=\"6\"\n      >\n        <AppTextField\n          v-model=\"name\"\n          placeholder=\"Your Name\"\n          persistent-placeholder\n          :rules=\"[requiredValidator]\"\n        />\n      </VCol>\n\n      <VCol\n        cols=\"12\"\n        md=\"6\"\n      >\n        <AppTextField\n          v-model=\"email\"\n          placeholder=\"Your Email\"\n          persistent-placeholder\n          :rules=\"[requiredValidator, emailValidator]\"\n        />\n      </VCol>\n\n      <VCol\n        cols=\"12\"\n        md=\"6\"\n      >\n        <AppTextField\n          v-model=\"password\"\n          type=\"password\"\n          placeholder=\"Your Password\"\n          persistent-placeholder\n          :rules=\"[requiredValidator, passwordValidator]\"\n          autocomplete=\"on\"\n        />\n      </VCol>\n\n      <VCol\n        cols=\"12\"\n        md=\"6\"\n      >\n        <AppTextField\n          v-model=\"confirmPassword\"\n          type=\"password\"\n          placeholder=\"Confirm Password\"\n          persistent-placeholder\n          :rules=\"[requiredValidator, confirmedValidator(confirmPassword, password)]\"\n          autocomplete=\"on\"\n        />\n      </VCol>\n\n      <VCol cols=\"12\">\n        <VBtn\n          type=\"submit\"\n          @click=\"refForm?.validate()\"\n        >\n          Submit\n        </VBtn>\n      </VCol>\n    </VRow>\n  </VForm>\n</template>\n`, js: `<script setup>\nimport {\n  confirmedValidator,\n  emailValidator,\n  passwordValidator,\n  requiredValidator,\n} from '@validators'\n\nconst name = ref('')\nconst email = ref('')\nconst refForm = ref()\nconst password = ref('')\nconst confirmPassword = ref('')\n</script>\n\n<template>\n  <VForm\n    ref=\"refForm\"\n    @submit.prevent=\"() => {}\"\n  >\n    <VRow>\n      <VCol\n        cols=\"12\"\n        md=\"6\"\n      >\n        <AppTextField\n          v-model=\"name\"\n          placeholder=\"Your Name\"\n          persistent-placeholder\n          :rules=\"[requiredValidator]\"\n        />\n      </VCol>\n\n      <VCol\n        cols=\"12\"\n        md=\"6\"\n      >\n        <AppTextField\n          v-model=\"email\"\n          placeholder=\"Your Email\"\n          persistent-placeholder\n          :rules=\"[requiredValidator, emailValidator]\"\n        />\n      </VCol>\n\n      <VCol\n        cols=\"12\"\n        md=\"6\"\n      >\n        <AppTextField\n          v-model=\"password\"\n          type=\"password\"\n          placeholder=\"Your Password\"\n          persistent-placeholder\n          :rules=\"[requiredValidator, passwordValidator]\"\n          autocomplete=\"on\"\n        />\n      </VCol>\n\n      <VCol\n        cols=\"12\"\n        md=\"6\"\n      >\n        <AppTextField\n          v-model=\"confirmPassword\"\n          type=\"password\"\n          placeholder=\"Confirm Password\"\n          persistent-placeholder\n          :rules=\"[requiredValidator, confirmedValidator(confirmPassword, password)]\"\n          autocomplete=\"on\"\n        />\n      </VCol>\n\n      <VCol cols=\"12\">\n        <VBtn\n          type=\"submit\"\n          @click=\"refForm?.validate()\"\n        >\n          Submit\n        </VBtn>\n      </VCol>\n    </VRow>\n  </VForm>\n</template>\n` }\n\nexport const validationTypes = { ts: `<script lang=\"ts\" setup>\n// eslint-disable-next-line @typescript-eslint/consistent-type-imports\nimport type { VForm } from 'vuetify/components/VForm'\nimport {\n  alphaDashValidator,\n  alphaValidator,\n  betweenValidator,\n  confirmedValidator,\n  emailValidator,\n  integerValidator,\n  lengthValidator,\n  passwordValidator,\n  regexValidator,\n  requiredValidator,\n  urlValidator,\n} from '@validators'\n\nconst requiredField = ref('')\nconst numberBetween10to20 = ref('')\nconst onlyConsistNumber = ref('')\nconst matchRegularEx = ref('')\nconst onlyAlphabeticCharacters = ref('')\nconst specifiedLength = ref('')\nconst password = ref('')\nconst digits = ref('')\nconst repeatPassword = ref('')\nconst onlyAlphabeticNumbersDashesUnderscores = ref('')\nconst email = ref('')\nconst validURL = ref('')\nconst refForm = ref<VForm>()\n</script>\n\n<template>\n  <VForm\n    ref=\"refForm\"\n    @submit.prevent\n  >\n    <VRow>\n      <VCol\n        cols=\"12\"\n        md=\"6\"\n      >\n        <AppTextField\n          v-model=\"requiredField\"\n          persistent-placeholder\n          placeholder=\"This field is required\"\n          :rules=\"[requiredValidator]\"\n        />\n      </VCol>\n\n      <VCol\n        cols=\"12\"\n        md=\"6\"\n      >\n        <AppTextField\n          v-model=\"numberBetween10to20\"\n          persistent-placeholder\n          placeholder=\"Enter Number between 10 & 20\"\n          :rules=\"[requiredValidator, betweenValidator(numberBetween10to20, 10, 20)]\"\n        />\n      </VCol>\n\n      <VCol\n        cols=\"12\"\n        md=\"6\"\n      >\n        <AppTextField\n          v-model=\"onlyConsistNumber\"\n          persistent-placeholder\n          placeholder=\"Must only consist of numbers\"\n          :rules=\"[requiredValidator, integerValidator]\"\n        />\n      </VCol>\n\n      <VCol\n        cols=\"12\"\n        md=\"6\"\n      >\n        <AppTextField\n          v-model=\"matchRegularEx\"\n          persistent-placeholder\n          placeholder=\"Must match the specified regular expression : ^([0-9]+)$ - numbers only\"\n          :rules=\"[requiredValidator, regexValidator(matchRegularEx, '^([0-9]+)$')]\"\n        />\n      </VCol>\n\n      <VCol\n        cols=\"12\"\n        md=\"6\"\n      >\n        <AppTextField\n          v-model=\"onlyAlphabeticCharacters\"\n          persistent-placeholder\n          placeholder=\"Only alphabetic characters\"\n          :rules=\"[requiredValidator, alphaValidator]\"\n        />\n      </VCol>\n\n      <VCol\n        cols=\"12\"\n        md=\"6\"\n      >\n        <AppTextField\n          v-model=\"specifiedLength\"\n          persistent-placeholder\n          placeholder=\"Length should not be less than the specified length : 3\"\n          :rules=\"[requiredValidator, lengthValidator(specifiedLength, 3)]\"\n        />\n      </VCol>\n\n      <VCol\n        cols=\"12\"\n        md=\"6\"\n      >\n        <AppTextField\n          v-model=\"password\"\n          persistent-placeholder\n          placeholder=\"Password Input Field\"\n          type=\"password\"\n          :rules=\"[requiredValidator, passwordValidator]\"\n          autocomplete=\"on\"\n        />\n      </VCol>\n\n      <VCol\n        cols=\"12\"\n        md=\"6\"\n      >\n        <AppTextField\n          v-model=\"digits\"\n          persistent-placeholder\n          placeholder=\"The digits field must be numeric and exactly contain 3 digits\"\n          :rules=\"[requiredValidator, lengthValidator(digits, 3), integerValidator]\"\n        />\n      </VCol>\n\n      <VCol\n        cols=\"12\"\n        md=\"6\"\n      >\n        <AppTextField\n          v-model=\"repeatPassword\"\n          persistent-placeholder\n          placeholder=\"Repeat password must match\"\n          type=\"password\"\n          :rules=\"[requiredValidator, confirmedValidator(repeatPassword, password)]\"\n          autocomplete=\"on\"\n        />\n      </VCol>\n\n      <VCol\n        cols=\"12\"\n        md=\"6\"\n      >\n        <AppTextField\n          v-model=\"onlyAlphabeticNumbersDashesUnderscores\"\n          persistent-placeholder\n          placeholder=\"Only alphabetic characters, numbers, dashes or underscores\"\n          :rules=\"[requiredValidator, alphaDashValidator]\"\n        />\n      </VCol>\n\n      <VCol\n        cols=\"12\"\n        md=\"6\"\n      >\n        <AppTextField\n          v-model=\"email\"\n          persistent-placeholder\n          placeholder=\"Must be a valid email\"\n          :rules=\"[requiredValidator, emailValidator]\"\n        />\n      </VCol>\n\n      <VCol\n        cols=\"12\"\n        md=\"6\"\n      >\n        <AppTextField\n          v-model=\"validURL\"\n          persistent-placeholder\n          placeholder=\"Must be a valid url\"\n          :rules=\"[requiredValidator, urlValidator]\"\n        />\n      </VCol>\n\n      <VCol cols=\"12\">\n        <VBtn\n          type=\"submit\"\n          @click=\"refForm?.validate()\"\n        >\n          Submit\n        </VBtn>\n      </VCol>\n    </VRow>\n  </VForm>\n</template>\n`, js: `<script setup>\nimport {\n  alphaDashValidator,\n  alphaValidator,\n  betweenValidator,\n  confirmedValidator,\n  emailValidator,\n  integerValidator,\n  lengthValidator,\n  passwordValidator,\n  regexValidator,\n  requiredValidator,\n  urlValidator,\n} from '@validators'\n\nconst requiredField = ref('')\nconst numberBetween10to20 = ref('')\nconst onlyConsistNumber = ref('')\nconst matchRegularEx = ref('')\nconst onlyAlphabeticCharacters = ref('')\nconst specifiedLength = ref('')\nconst password = ref('')\nconst digits = ref('')\nconst repeatPassword = ref('')\nconst onlyAlphabeticNumbersDashesUnderscores = ref('')\nconst email = ref('')\nconst validURL = ref('')\nconst refForm = ref()\n</script>\n\n<template>\n  <VForm\n    ref=\"refForm\"\n    @submit.prevent\n  >\n    <VRow>\n      <VCol\n        cols=\"12\"\n        md=\"6\"\n      >\n        <AppTextField\n          v-model=\"requiredField\"\n          persistent-placeholder\n          placeholder=\"This field is required\"\n          :rules=\"[requiredValidator]\"\n        />\n      </VCol>\n\n      <VCol\n        cols=\"12\"\n        md=\"6\"\n      >\n        <AppTextField\n          v-model=\"numberBetween10to20\"\n          persistent-placeholder\n          placeholder=\"Enter Number between 10 & 20\"\n          :rules=\"[requiredValidator, betweenValidator(numberBetween10to20, 10, 20)]\"\n        />\n      </VCol>\n\n      <VCol\n        cols=\"12\"\n        md=\"6\"\n      >\n        <AppTextField\n          v-model=\"onlyConsistNumber\"\n          persistent-placeholder\n          placeholder=\"Must only consist of numbers\"\n          :rules=\"[requiredValidator, integerValidator]\"\n        />\n      </VCol>\n\n      <VCol\n        cols=\"12\"\n        md=\"6\"\n      >\n        <AppTextField\n          v-model=\"matchRegularEx\"\n          persistent-placeholder\n          placeholder=\"Must match the specified regular expression : ^([0-9]+)$ - numbers only\"\n          :rules=\"[requiredValidator, regexValidator(matchRegularEx, '^([0-9]+)$')]\"\n        />\n      </VCol>\n\n      <VCol\n        cols=\"12\"\n        md=\"6\"\n      >\n        <AppTextField\n          v-model=\"onlyAlphabeticCharacters\"\n          persistent-placeholder\n          placeholder=\"Only alphabetic characters\"\n          :rules=\"[requiredValidator, alphaValidator]\"\n        />\n      </VCol>\n\n      <VCol\n        cols=\"12\"\n        md=\"6\"\n      >\n        <AppTextField\n          v-model=\"specifiedLength\"\n          persistent-placeholder\n          placeholder=\"Length should not be less than the specified length : 3\"\n          :rules=\"[requiredValidator, lengthValidator(specifiedLength, 3)]\"\n        />\n      </VCol>\n\n      <VCol\n        cols=\"12\"\n        md=\"6\"\n      >\n        <AppTextField\n          v-model=\"password\"\n          persistent-placeholder\n          placeholder=\"Password Input Field\"\n          type=\"password\"\n          :rules=\"[requiredValidator, passwordValidator]\"\n          autocomplete=\"on\"\n        />\n      </VCol>\n\n      <VCol\n        cols=\"12\"\n        md=\"6\"\n      >\n        <AppTextField\n          v-model=\"digits\"\n          persistent-placeholder\n          placeholder=\"The digits field must be numeric and exactly contain 3 digits\"\n          :rules=\"[requiredValidator, lengthValidator(digits, 3), integerValidator]\"\n        />\n      </VCol>\n\n      <VCol\n        cols=\"12\"\n        md=\"6\"\n      >\n        <AppTextField\n          v-model=\"repeatPassword\"\n          persistent-placeholder\n          placeholder=\"Repeat password must match\"\n          type=\"password\"\n          :rules=\"[requiredValidator, confirmedValidator(repeatPassword, password)]\"\n          autocomplete=\"on\"\n        />\n      </VCol>\n\n      <VCol\n        cols=\"12\"\n        md=\"6\"\n      >\n        <AppTextField\n          v-model=\"onlyAlphabeticNumbersDashesUnderscores\"\n          persistent-placeholder\n          placeholder=\"Only alphabetic characters, numbers, dashes or underscores\"\n          :rules=\"[requiredValidator, alphaDashValidator]\"\n        />\n      </VCol>\n\n      <VCol\n        cols=\"12\"\n        md=\"6\"\n      >\n        <AppTextField\n          v-model=\"email\"\n          persistent-placeholder\n          placeholder=\"Must be a valid email\"\n          :rules=\"[requiredValidator, emailValidator]\"\n        />\n      </VCol>\n\n      <VCol\n        cols=\"12\"\n        md=\"6\"\n      >\n        <AppTextField\n          v-model=\"validURL\"\n          persistent-placeholder\n          placeholder=\"Must be a valid url\"\n          :rules=\"[requiredValidator, urlValidator]\"\n        />\n      </VCol>\n\n      <VCol cols=\"12\">\n        <VBtn\n          type=\"submit\"\n          @click=\"refForm?.validate()\"\n        >\n          Submit\n        </VBtn>\n      </VCol>\n    </VRow>\n  </VForm>\n</template>\n` }\n\n"],"names":["requiredField","ref","numberBetween10to20","onlyConsistNumber","matchRegularEx","onlyAlphabeticCharacters","specifiedLength","password","digits","repeatPassword","onlyAlphabeticNumbersDashesUnderscores","email","validURL","refForm","name","confirmPassword","firstName","simpleFormValidation","validatingMultipleRules","validationTypes"],"mappings":"26BAeA,MAAAA,EAAAC,EAAA,EAAA,EACAC,EAAAD,EAAA,EAAA,EACAE,EAAAF,EAAA,EAAA,EACAG,EAAAH,EAAA,EAAA,EACAI,EAAAJ,EAAA,EAAA,EACAK,EAAAL,EAAA,EAAA,EACAM,EAAAN,EAAA,EAAA,EACAO,EAAAP,EAAA,EAAA,EACAQ,EAAAR,EAAA,EAAA,EACAS,EAAAT,EAAA,EAAA,EACAU,EAAAV,EAAA,EAAA,EACAW,EAAAX,EAAA,EAAA,EACAY,EAAAZ,EAAA,shHCnBA,MAAAa,EAAAb,EAAA,EAAA,EACAU,EAAAV,EAAA,EAAA,EACAY,EAAAZ,EAAA,EACAM,EAAAN,EAAA,EAAA,EACAc,EAAAd,EAAA,EAAA,43CCNA,MAAAe,EAAAf,EAAA,EAAA,EACAU,EAAAV,EAAA,EAAA,EACAY,EAAAZ,EAAA,stBCRagB,EAAuB,CAAE,GAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAkDvC,GAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAkDJ,EAEUC,EAA0B,CAAE,GAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAiF1C,GAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAoFJ,EAEUC,EAAkqMlmMN"}