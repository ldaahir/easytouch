{"version":3,"file":"checkbox-9c9290bf.js","sources":["../../../../frontend/src/views/demos/forms/form-elements/checkbox/DemoCheckboxInlineTextField.vue","../../../../frontend/src/views/demos/forms/form-elements/checkbox/DemoCheckboxLabelSlot.vue","../../../../frontend/src/views/demos/forms/form-elements/checkbox/DemoCheckboxStates.vue","../../../../frontend/src/views/demos/forms/form-elements/checkbox/DemoCheckboxCheckboxValue.vue","../../../../frontend/src/views/demos/forms/form-elements/checkbox/DemoCheckboxIcon.vue","../../../../frontend/src/views/demos/forms/form-elements/checkbox/DemoCheckboxModelAsArray.vue","../../../../frontend/src/views/demos/forms/form-elements/checkbox/DemoCheckboxColors.vue","../../../../frontend/src/views/demos/forms/form-elements/checkbox/DemoCheckboxDensity.vue","../../../../frontend/src/views/demos/forms/form-elements/checkbox/DemoCheckboxBasic.vue","../../../../frontend/src/views/demos/forms/form-elements/checkbox/demoCodeCheckbox.js"],"sourcesContent":["<script setup>\nconst includeFiles = ref(true)\nconst isInputEnabled = ref(false)\n</script>\n\n<template>\n  <VRow>\n    <VCol\n      sm=\"1\"\n      cols=\"2\"\n      class=\"d-flex align-end\"\n    >\n      <VCheckbox v-model=\"includeFiles\" />\n    </VCol>\n\n    <VCol\n      sm=\"11\"\n      cols=\"10\"\n    >\n      <AppTextField label=\"Include files\" />\n    </VCol>\n  </VRow>\n\n  <VRow>\n    <VCol\n      cols=\"2\"\n      sm=\"1\"\n      class=\"d-flex align-end\"\n    >\n      <VCheckbox v-model=\"isInputEnabled\" />\n    </VCol>\n\n    <VCol\n      cols=\"10\"\n      sm=\"11\"\n    >\n      <AppTextField\n        :disabled=\"!isInputEnabled\"\n        label=\"I only work if you check the box\"\n      />\n    </VCol>\n  </VRow>\n</template>\n","<script setup>\nconst checkbox = ref(false)\n</script>\n\n<template>\n  <VCheckbox v-model=\"checkbox\">\n    <template #label>\n      <div>\n        I agree that\n        <VTooltip location=\"bottom\">\n          <template #activator=\"{ props }\">\n            <a\n              href=\"https://vuetifyjs.com/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              v-bind=\"props\"\n              @click.stop\n            >\n              Vuetify\n            </a>\n          </template>\n          Opens in new window\n        </VTooltip>\n        is awesome\n      </div>\n    </template>\n  </VCheckbox>\n</template>\n","<script setup>\nconst toggleCheckbox = ref(true)\nconst toggleIndeterminateCheckbox = ref(true)\nconst disabledCheckbox = ref(true)\nconst toggleOffCheckbox = ref(false)\n</script>\n\n<template>\n  <div class=\"demo-space-x\">\n    <VCheckbox\n      v-model=\"toggleCheckbox\"\n      label=\"On\"\n    />\n\n    <VCheckbox\n      v-model=\"toggleOffCheckbox\"\n      label=\"Off\"\n    />\n\n    <VCheckbox\n      v-model:indeterminate=\"toggleIndeterminateCheckbox\"\n      v-model=\"toggleIndeterminateCheckbox\"\n      label=\"Indeterminate\"\n    />\n\n    <VCheckbox\n      :model-value=\"disabledCheckbox\"\n      disabled\n      label=\"On disabled\"\n    />\n\n    <VCheckbox\n      disabled\n      label=\"Off disabled\"\n    />\n  </div>\n</template>\n","<script setup>\nconst checkbox = ref(1)\nconst checkboxString = ref('Show')\n</script>\n\n<template>\n  <div class=\"demo-space-x\">\n    <VCheckbox\n      v-model=\"checkbox\"\n      :true-value=\"1\"\n      :false-value=\"0\"\n      :label=\"`${checkbox.toString()}`\"\n    />\n\n    <VCheckbox\n      v-model=\"checkboxString\"\n      true-value=\"Show\"\n      false-value=\"Hide\"\n      color=\"success\"\n      :label=\"`${checkboxString.toString()}`\"\n    />\n  </div>\n</template>\n","<script setup>\nconst toggleCheckboxOne = ref(true)\nconst toggleCheckboxTwo = ref(true)\nconst toggleCheckboxThree = ref(true)\n\nconst capitalizedLabel = label => {\n  const convertLabelText = label.toString()\n  \n  return convertLabelText.charAt(0).toUpperCase() + convertLabelText.slice(1)\n}\n</script>\n\n<template>\n  <div class=\"demo-space-x\">\n    <VCheckbox\n      v-model=\"toggleCheckboxOne\"\n      :label=\"capitalizedLabel(toggleCheckboxOne)\"\n      true-icon=\"tabler-check\"\n      false-icon=\"tabler-x\"\n    />\n\n    <VCheckbox\n      v-model=\"toggleCheckboxTwo\"\n      :label=\"capitalizedLabel(toggleCheckboxTwo)\"\n      true-icon=\"tabler-alarm\"\n      false-icon=\"tabler-alarm\"\n      color=\"success\"\n    />\n\n    <VCheckbox\n      v-model=\"toggleCheckboxThree\"\n      :label=\"capitalizedLabel(toggleCheckboxThree)\"\n      true-icon=\"tabler-check\"\n      false-icon=\"tabler-circle-x\"\n      color=\"error\"\n    />\n  </div>\n</template>\n","<script setup>\nconst selected = ref(['John'])\n</script>\n\n<template>\n  <div class=\"demo-space-x\">\n    <VCheckbox\n      v-model=\"selected\"\n      label=\"John\"\n      value=\"John\"\n    />\n\n    <VCheckbox\n      v-model=\"selected\"\n      label=\"Jacob\"\n      color=\"success\"\n      value=\"Jacob\"\n    />\n\n    <VCheckbox\n      v-model=\"selected\"\n      label=\"Johnson\"\n      color=\"info\"\n      value=\"Johnson\"\n    />\n  </div>\n\n  <p class=\"mt-1\">\n    {{ selected }}\n  </p>\n</template>\n","<script setup>\nconst colorCheckbox = ref([\n  'Primary',\n  'Secondary',\n  'Success',\n  'Info',\n  'Warning',\n  'Error',\n])\n\nconst selectedCheckbox = ref([])\n</script>\n\n<template>\n  <div class=\"demo-space-x\">\n    <VCheckbox\n      v-for=\"color in colorCheckbox\"\n      :key=\"color\"\n      v-model=\"selectedCheckbox\"\n      :label=\"color\"\n      :color=\"color.toLowerCase()\"\n      :value=\"color\"\n    />\n  </div>\n</template>\n","<script setup>\nconst checkboxOne = ref(true)\nconst checkboxTwo = ref(false)\n\nconst capitalizedLabel = label => {\n  const convertLabelText = label.toString()\n  \n  return convertLabelText.charAt(0).toUpperCase() + convertLabelText.slice(1)\n}\n</script>\n\n<template>\n  <div class=\"demo-space-x\">\n    <VCheckbox\n      v-model=\"checkboxOne\"\n      density=\"compact\"\n      :label=\"capitalizedLabel(checkboxOne)\"\n    />\n\n    <VCheckbox\n      v-model=\"checkboxTwo\"\n      density=\"compact\"\n      :label=\"capitalizedLabel(checkboxTwo)\"\n    />\n  </div>\n</template>\n","<script setup>\nconst checkboxOne = ref(true)\nconst checkboxTwo = ref(false)\n\nconst capitalizedLabel = label => {\n  const convertLabelText = label.toString()\n  \n  return convertLabelText.charAt(0).toUpperCase() + convertLabelText.slice(1)\n}\n</script>\n\n<template>\n  <div class=\"demo-space-x\">\n    <VCheckbox\n      v-model=\"checkboxOne\"\n      :label=\"capitalizedLabel(checkboxOne)\"\n    />\n\n    <VCheckbox\n      v-model=\"checkboxTwo\"\n      :label=\"capitalizedLabel(checkboxTwo)\"\n    />\n  </div>\n</template>\n","export const basic = { ts: `<script lang=\"ts\" setup>\nconst checkboxOne = ref(true)\nconst checkboxTwo = ref(false)\n\nconst capitalizedLabel = (label: boolean) => {\n  const convertLabelText = label.toString()\n\n  return convertLabelText.charAt(0).toUpperCase() + convertLabelText.slice(1)\n}\n</script>\n\n<template>\n  <div class=\"demo-space-x\">\n    <VCheckbox\n      v-model=\"checkboxOne\"\n      :label=\"capitalizedLabel(checkboxOne)\"\n    />\n\n    <VCheckbox\n      v-model=\"checkboxTwo\"\n      :label=\"capitalizedLabel(checkboxTwo)\"\n    />\n  </div>\n</template>\n`, js: `<script setup>\nconst checkboxOne = ref(true)\nconst checkboxTwo = ref(false)\n\nconst capitalizedLabel = label => {\n  const convertLabelText = label.toString()\n  \n  return convertLabelText.charAt(0).toUpperCase() + convertLabelText.slice(1)\n}\n</script>\n\n<template>\n  <div class=\"demo-space-x\">\n    <VCheckbox\n      v-model=\"checkboxOne\"\n      :label=\"capitalizedLabel(checkboxOne)\"\n    />\n\n    <VCheckbox\n      v-model=\"checkboxTwo\"\n      :label=\"capitalizedLabel(checkboxTwo)\"\n    />\n  </div>\n</template>\n` }\n\nexport const checkboxValue = { ts: `<script lang=\"ts\" setup>\nconst checkbox = ref(1)\nconst checkboxString = ref('Show')\n</script>\n\n<template>\n  <div class=\"demo-space-x\">\n    <VCheckbox\n      v-model=\"checkbox\"\n      :true-value=\"1\"\n      :false-value=\"0\"\n      :label=\"\\`\\${checkbox.toString()}\\`\"\n    />\n\n    <VCheckbox\n      v-model=\"checkboxString\"\n      true-value=\"Show\"\n      false-value=\"Hide\"\n      color=\"success\"\n      :label=\"\\`\\${checkboxString.toString()}\\`\"\n    />\n  </div>\n</template>\n`, js: `<script setup>\nconst checkbox = ref(1)\nconst checkboxString = ref('Show')\n</script>\n\n<template>\n  <div class=\"demo-space-x\">\n    <VCheckbox\n      v-model=\"checkbox\"\n      :true-value=\"1\"\n      :false-value=\"0\"\n      :label=\"\\`\\${checkbox.toString()}\\`\"\n    />\n\n    <VCheckbox\n      v-model=\"checkboxString\"\n      true-value=\"Show\"\n      false-value=\"Hide\"\n      color=\"success\"\n      :label=\"\\`\\${checkboxString.toString()}\\`\"\n    />\n  </div>\n</template>\n` }\n\nexport const colors = { ts: `<script lang=\"ts\" setup>\nconst colorCheckbox = ref(['Primary', 'Secondary', 'Success', 'Info', 'Warning', 'Error'])\nconst selectedCheckbox = ref([])\n</script>\n\n<template>\n  <div class=\"demo-space-x\">\n    <VCheckbox\n      v-for=\"color in colorCheckbox\"\n      :key=\"color\"\n      v-model=\"selectedCheckbox\"\n      :label=\"color\"\n      :color=\"color.toLowerCase()\"\n      :value=\"color\"\n    />\n  </div>\n</template>\n`, js: `<script setup>\nconst colorCheckbox = ref([\n  'Primary',\n  'Secondary',\n  'Success',\n  'Info',\n  'Warning',\n  'Error',\n])\n\nconst selectedCheckbox = ref([])\n</script>\n\n<template>\n  <div class=\"demo-space-x\">\n    <VCheckbox\n      v-for=\"color in colorCheckbox\"\n      :key=\"color\"\n      v-model=\"selectedCheckbox\"\n      :label=\"color\"\n      :color=\"color.toLowerCase()\"\n      :value=\"color\"\n    />\n  </div>\n</template>\n` }\n\nexport const density = { ts: `<script lang=\"ts\" setup>\nconst checkboxOne = ref(true)\nconst checkboxTwo = ref(false)\n\nconst capitalizedLabel = (label: boolean) => {\n  const convertLabelText = label.toString()\n\n  return convertLabelText.charAt(0).toUpperCase() + convertLabelText.slice(1)\n}\n</script>\n\n<template>\n  <div class=\"demo-space-x\">\n    <VCheckbox\n      v-model=\"checkboxOne\"\n      density=\"compact\"\n      :label=\"capitalizedLabel(checkboxOne)\"\n    />\n\n    <VCheckbox\n      v-model=\"checkboxTwo\"\n      density=\"compact\"\n      :label=\"capitalizedLabel(checkboxTwo)\"\n    />\n  </div>\n</template>\n`, js: `<script setup>\nconst checkboxOne = ref(true)\nconst checkboxTwo = ref(false)\n\nconst capitalizedLabel = label => {\n  const convertLabelText = label.toString()\n  \n  return convertLabelText.charAt(0).toUpperCase() + convertLabelText.slice(1)\n}\n</script>\n\n<template>\n  <div class=\"demo-space-x\">\n    <VCheckbox\n      v-model=\"checkboxOne\"\n      density=\"compact\"\n      :label=\"capitalizedLabel(checkboxOne)\"\n    />\n\n    <VCheckbox\n      v-model=\"checkboxTwo\"\n      density=\"compact\"\n      :label=\"capitalizedLabel(checkboxTwo)\"\n    />\n  </div>\n</template>\n` }\n\nexport const icon = { ts: `<script lang=\"ts\" setup>\nconst toggleCheckboxOne = ref(true)\nconst toggleCheckboxTwo = ref(true)\nconst toggleCheckboxThree = ref(true)\n\nconst capitalizedLabel = (label: boolean) => {\n  const convertLabelText = label.toString()\n\n  return convertLabelText.charAt(0).toUpperCase() + convertLabelText.slice(1)\n}\n</script>\n\n<template>\n  <div class=\"demo-space-x\">\n    <VCheckbox\n      v-model=\"toggleCheckboxOne\"\n      :label=\"capitalizedLabel(toggleCheckboxOne)\"\n      true-icon=\"tabler-check\"\n      false-icon=\"tabler-x\"\n    />\n\n    <VCheckbox\n      v-model=\"toggleCheckboxTwo\"\n      :label=\"capitalizedLabel(toggleCheckboxTwo)\"\n      true-icon=\"tabler-alarm\"\n      false-icon=\"tabler-alarm\"\n      color=\"success\"\n    />\n\n    <VCheckbox\n      v-model=\"toggleCheckboxThree\"\n      :label=\"capitalizedLabel(toggleCheckboxThree)\"\n      true-icon=\"tabler-check\"\n      false-icon=\"tabler-circle-x\"\n      color=\"error\"\n    />\n  </div>\n</template>\n`, js: `<script setup>\nconst toggleCheckboxOne = ref(true)\nconst toggleCheckboxTwo = ref(true)\nconst toggleCheckboxThree = ref(true)\n\nconst capitalizedLabel = label => {\n  const convertLabelText = label.toString()\n  \n  return convertLabelText.charAt(0).toUpperCase() + convertLabelText.slice(1)\n}\n</script>\n\n<template>\n  <div class=\"demo-space-x\">\n    <VCheckbox\n      v-model=\"toggleCheckboxOne\"\n      :label=\"capitalizedLabel(toggleCheckboxOne)\"\n      true-icon=\"tabler-check\"\n      false-icon=\"tabler-x\"\n    />\n\n    <VCheckbox\n      v-model=\"toggleCheckboxTwo\"\n      :label=\"capitalizedLabel(toggleCheckboxTwo)\"\n      true-icon=\"tabler-alarm\"\n      false-icon=\"tabler-alarm\"\n      color=\"success\"\n    />\n\n    <VCheckbox\n      v-model=\"toggleCheckboxThree\"\n      :label=\"capitalizedLabel(toggleCheckboxThree)\"\n      true-icon=\"tabler-check\"\n      false-icon=\"tabler-circle-x\"\n      color=\"error\"\n    />\n  </div>\n</template>\n` }\n\nexport const inlineTextField = { ts: `<script lang=\"ts\" setup>\nconst includeFiles = ref(true)\nconst isInputEnabled = ref(false)\n</script>\n\n<template>\n  <VRow>\n    <VCol\n      sm=\"1\"\n      cols=\"2\"\n      class=\"d-flex align-end\"\n    >\n      <VCheckbox v-model=\"includeFiles\" />\n    </VCol>\n\n    <VCol\n      sm=\"11\"\n      cols=\"10\"\n    >\n      <AppTextField label=\"Include files\" />\n    </VCol>\n  </VRow>\n\n  <VRow>\n    <VCol\n      cols=\"2\"\n      sm=\"1\"\n      class=\"d-flex align-end\"\n    >\n      <VCheckbox v-model=\"isInputEnabled\" />\n    </VCol>\n\n    <VCol\n      cols=\"10\"\n      sm=\"11\"\n    >\n      <AppTextField\n        :disabled=\"!isInputEnabled\"\n        label=\"I only work if you check the box\"\n      />\n    </VCol>\n  </VRow>\n</template>\n`, js: `<script setup>\nconst includeFiles = ref(true)\nconst isInputEnabled = ref(false)\n</script>\n\n<template>\n  <VRow>\n    <VCol\n      sm=\"1\"\n      cols=\"2\"\n      class=\"d-flex align-end\"\n    >\n      <VCheckbox v-model=\"includeFiles\" />\n    </VCol>\n\n    <VCol\n      sm=\"11\"\n      cols=\"10\"\n    >\n      <AppTextField label=\"Include files\" />\n    </VCol>\n  </VRow>\n\n  <VRow>\n    <VCol\n      cols=\"2\"\n      sm=\"1\"\n      class=\"d-flex align-end\"\n    >\n      <VCheckbox v-model=\"isInputEnabled\" />\n    </VCol>\n\n    <VCol\n      cols=\"10\"\n      sm=\"11\"\n    >\n      <AppTextField\n        :disabled=\"!isInputEnabled\"\n        label=\"I only work if you check the box\"\n      />\n    </VCol>\n  </VRow>\n</template>\n` }\n\nexport const labelSlot = { ts: `<script lang=\"ts\" setup>\nconst checkbox = ref(false)\n</script>\n\n<template>\n  <VCheckbox v-model=\"checkbox\">\n    <template #label>\n      <div>\n        I agree that\n        <VTooltip location=\"bottom\">\n          <template #activator=\"{ props }\">\n            <a\n              href=\"https://vuetifyjs.com/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              v-bind=\"props\"\n              @click.stop\n            >\n              Vuetify\n            </a>\n          </template>\n          Opens in new window\n        </VTooltip>\n        is awesome\n      </div>\n    </template>\n  </VCheckbox>\n</template>\n`, js: `<script setup>\nconst checkbox = ref(false)\n</script>\n\n<template>\n  <VCheckbox v-model=\"checkbox\">\n    <template #label>\n      <div>\n        I agree that\n        <VTooltip location=\"bottom\">\n          <template #activator=\"{ props }\">\n            <a\n              href=\"https://vuetifyjs.com/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              v-bind=\"props\"\n              @click.stop\n            >\n              Vuetify\n            </a>\n          </template>\n          Opens in new window\n        </VTooltip>\n        is awesome\n      </div>\n    </template>\n  </VCheckbox>\n</template>\n` }\n\nexport const modelAsArray = { ts: `<script lang=\"ts\" setup>\nconst selected = ref(['John'])\n</script>\n\n<template>\n  <div class=\"demo-space-x\">\n    <VCheckbox\n      v-model=\"selected\"\n      label=\"John\"\n      value=\"John\"\n    />\n\n    <VCheckbox\n      v-model=\"selected\"\n      label=\"Jacob\"\n      color=\"success\"\n      value=\"Jacob\"\n    />\n\n    <VCheckbox\n      v-model=\"selected\"\n      label=\"Johnson\"\n      color=\"info\"\n      value=\"Johnson\"\n    />\n  </div>\n\n  <p class=\"mt-1\">\n    {{ selected }}\n  </p>\n</template>\n`, js: `<script setup>\nconst selected = ref(['John'])\n</script>\n\n<template>\n  <div class=\"demo-space-x\">\n    <VCheckbox\n      v-model=\"selected\"\n      label=\"John\"\n      value=\"John\"\n    />\n\n    <VCheckbox\n      v-model=\"selected\"\n      label=\"Jacob\"\n      color=\"success\"\n      value=\"Jacob\"\n    />\n\n    <VCheckbox\n      v-model=\"selected\"\n      label=\"Johnson\"\n      color=\"info\"\n      value=\"Johnson\"\n    />\n  </div>\n\n  <p class=\"mt-1\">\n    {{ selected }}\n  </p>\n</template>\n` }\n\nexport const states = { ts: `<script setup lang=\"ts\">\nconst toggleCheckbox = ref(true)\nconst toggleIndeterminateCheckbox = ref(true)\nconst disabledCheckbox = ref(true)\nconst toggleOffCheckbox = ref(false)\n</script>\n\n<template>\n  <div class=\"demo-space-x\">\n    <VCheckbox\n      v-model=\"toggleCheckbox\"\n      label=\"On\"\n    />\n\n    <VCheckbox\n      v-model=\"toggleOffCheckbox\"\n      label=\"Off\"\n    />\n\n    <VCheckbox\n      v-model:indeterminate=\"toggleIndeterminateCheckbox\"\n      v-model=\"toggleIndeterminateCheckbox\"\n      label=\"Indeterminate\"\n    />\n\n    <VCheckbox\n      :model-value=\"disabledCheckbox\"\n      disabled\n      label=\"On disabled\"\n    />\n\n    <VCheckbox\n      disabled\n      label=\"Off disabled\"\n    />\n  </div>\n</template>\n`, js: `<script setup>\nconst toggleCheckbox = ref(true)\nconst toggleIndeterminateCheckbox = ref(true)\nconst disabledCheckbox = ref(true)\nconst toggleOffCheckbox = ref(false)\n</script>\n\n<template>\n  <div class=\"demo-space-x\">\n    <VCheckbox\n      v-model=\"toggleCheckbox\"\n      label=\"On\"\n    />\n\n    <VCheckbox\n      v-model=\"toggleOffCheckbox\"\n      label=\"Off\"\n    />\n\n    <VCheckbox\n      v-model:indeterminate=\"toggleIndeterminateCheckbox\"\n      v-model=\"toggleIndeterminateCheckbox\"\n      label=\"Indeterminate\"\n    />\n\n    <VCheckbox\n      :model-value=\"disabledCheckbox\"\n      disabled\n      label=\"On disabled\"\n    />\n\n    <VCheckbox\n      disabled\n      label=\"Off disabled\"\n    />\n  </div>\n</template>\n` }\n\n"],"names":["includeFiles","ref","isInputEnabled","checkbox","toggleCheckbox","toggleIndeterminateCheckbox","disabledCheckbox","toggleOffCheckbox","checkboxString","toggleCheckboxOne","toggleCheckboxTwo","toggleCheckboxThree","capitalizedLabel","label","convertLabelText","selected","colorCheckbox","selectedCheckbox","checkboxOne","checkboxTwo","basic","checkboxValue","colors","density","icon","inlineTextField","labelSlot","modelAsArray","states"],"mappings":"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"}