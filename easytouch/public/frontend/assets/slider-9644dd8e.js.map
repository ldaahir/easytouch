{"version":3,"file":"slider-9644dd8e.js","sources":["../../../../frontend/src/views/demos/forms/form-elements/slider/DemoSliderAppendAndPrepend.vue","../../../../frontend/src/views/demos/forms/form-elements/slider/DemoSliderAppendTextField.vue","../../../../frontend/src/views/demos/forms/form-elements/slider/DemoSliderVertical.vue","../../../../frontend/src/views/demos/forms/form-elements/slider/DemoSliderTicks.vue","../../../../frontend/src/views/demos/forms/form-elements/slider/DemoSliderThumb.vue","../../../../frontend/src/views/demos/forms/form-elements/slider/DemoSliderSize.vue","../../../../frontend/src/views/demos/forms/form-elements/slider/DemoSliderMinAndMax.vue","../../../../frontend/src/views/demos/forms/form-elements/slider/DemoSliderValidation.vue","../../../../frontend/src/views/demos/forms/form-elements/slider/DemoSliderStep.vue","../../../../frontend/src/views/demos/forms/form-elements/slider/DemoSliderIcons.vue","../../../../frontend/src/views/demos/forms/form-elements/slider/DemoSliderColors.vue","../../../../frontend/src/views/demos/forms/form-elements/slider/DemoSliderDisabledAndReadonly.vue","../../../../frontend/src/views/demos/forms/form-elements/slider/DemoSliderBasic.vue","../../../../frontend/src/views/demos/forms/form-elements/slider/demoCodeSlider.js"],"sourcesContent":["<script setup>\nconst bpm = ref(40)\nconst min = 40\nconst max = 218\nconst isPlaying = ref(false)\n\nconst color = computed(() => {\n  if (bpm.value < 100)\n    return 'primary'\n  if (bpm.value < 125)\n    return 'success'\n  if (bpm.value < 140)\n    return 'info'\n  if (bpm.value < 175)\n    return 'warning'\n  \n  return 'error'\n})\n\nconst animationDuration = computed(() => {\n  return `${ 60 / bpm.value }s`\n})\n\nconst decrement = () => {\n  if (bpm.value > min)\n    bpm.value -= 1\n}\n\nconst increment = () => {\n  if (bpm.value < max)\n    bpm.value += 1\n}\n</script>\n\n<template>\n  <div class=\"d-flex justify-space-between ma-4\">\n    <div>\n      <span\n        class=\"text-6xl font-weight-light\"\n        v-text=\"bpm\"\n      />\n      <span class=\"subheading font-weight-light me-1\">BPM</span>\n\n      <VFadeTransition>\n        <VAvatar\n          v-if=\"isPlaying\"\n          :color=\"color\"\n          :style=\"{\n            animationDuration,\n          }\"\n          class=\"mb-1 v-avatar--metronome\"\n          size=\"12\"\n        />\n      </VFadeTransition>\n    </div>\n\n    <div>\n      <VBtn\n        :color=\"color\"\n        icon\n        elevation=\"0\"\n        @click=\"isPlaying = !isPlaying\"\n      >\n        <VIcon\n          size=\"large\"\n          :icon=\"isPlaying ? 'tabler-pause' : 'tabler-play'\"\n        />\n      </VBtn>\n    </div>\n  </div>\n\n  <VSlider\n    v-model=\"bpm\"\n    :color=\"color\"\n    :step=\"1\"\n    :min=\"min\"\n    :max=\"max\"\n    track-color=\"secondary\"\n  >\n    <template #prepend>\n      <VBtn\n        size=\"small\"\n        variant=\"text\"\n        icon=\"tabler-minus\"\n        :color=\"color\"\n        @click=\"decrement\"\n      />\n    </template>\n\n    <template #append>\n      <VBtn\n        size=\"small\"\n        variant=\"text\"\n        icon=\"tabler-plus\"\n        :color=\"color\"\n        @click=\"increment\"\n      />\n    </template>\n  </VSlider>\n</template>\n\n<style lang=\"scss\" scoped>\n  @keyframes metronome-example {\n    from {\n      transform: scale(0.5);\n    }\n\n    to {\n      transform: scale(1);\n    }\n  }\n\n  .v-avatar--metronome {\n    animation-direction: alternate;\n    animation-iteration-count: infinite;\n    animation-name: metronome-example;\n  }\n</style>\n","<script setup>\nconst redColorValue = ref(161)\nconst greenColorValue = ref(105)\nconst blueColorValue = ref(255)\n</script>\n\n<template>\n  <VResponsive\n    :style=\"{ background: `rgb(${redColorValue}, ${greenColorValue}, ${blueColorValue})` }\"\n    height=\"150px\"\n  />\n\n  <VRow class=\"mt-5\">\n    <VCol cols=\"12\">\n      <!-- R -->\n      <VSlider\n        v-model=\"redColorValue\"\n        :max=\"255\"\n        :step=\"1\"\n        prepend-icon=\"tabler-letter-r\"\n      >\n        <template #append>\n          <div style=\"inline-size: 7rem;\">\n            <AppTextField\n              v-model=\"redColorValue\"\n              type=\"number\"\n              variant=\"underlined\"\n              :max=\"255\"\n            />\n          </div>\n        </template>\n      </VSlider>\n    </VCol>\n\n    <VCol cols=\"12\">\n      <!-- G -->\n      <VSlider\n        v-model=\"greenColorValue\"\n        :max=\"255\"\n        :step=\"1\"\n        prepend-icon=\"tabler-letter-g\"\n      >\n        <template #append>\n          <div style=\"inline-size: 7rem;\">\n            <AppTextField\n              v-model=\"greenColorValue\"\n              type=\"number\"\n              :max=\"255\"\n            />\n          </div>\n        </template>\n      </VSlider>\n    </VCol>\n\n    <VCol cols=\"12\">\n      <!-- B -->\n      <VSlider\n        v-model=\"blueColorValue\"\n        :max=\"255\"\n        :step=\"1\"\n        prepend-icon=\"tabler-letter-b\"\n      >\n        <template #append>\n          <div style=\"inline-size: 7rem;\">\n            <AppTextField\n              v-model=\"blueColorValue\"\n              type=\"number\"\n              variant=\"underlined\"\n              :max=\"255\"\n            />\n          </div>\n        </template>\n      </VSlider>\n    </VCol>\n  </VRow>\n</template>\n","<script setup>\nconst value = ref(10)\n</script>\n\n<template>\n  <VSlider\n    v-model=\"value\"\n    direction=\"vertical\"\n  />\n</template>\n","<script setup>\nconst value = ref(0)\nconst fruits = ref(1)\n\nconst ticksLabels = {\n  0: 'Figs',\n  1: 'Lemon',\n  2: 'Pear',\n  3: 'Apple',\n}\n</script>\n\n<template>\n  <VRow>\n    <VCol cols=\"12\">\n      <div class=\"text-caption\">\n        Show ticks when using slider\n      </div>\n      <VSlider\n        v-model=\"value\"\n        :step=\"10\"\n        show-ticks\n      />\n    </VCol>\n\n    <VCol cols=\"12\">\n      <div class=\"text-caption\">\n        Always show ticks\n      </div>\n      <VSlider\n        v-model=\"value\"\n        :step=\"10\"\n        show-ticks=\"always\"\n      />\n    </VCol>\n\n    <VCol cols=\"12\">\n      <div class=\"text-caption\">\n        Tick size\n      </div>\n      <VSlider\n        v-model=\"value\"\n        :step=\"10\"\n        show-ticks=\"always\"\n        tick-size=\"4\"\n      />\n    </VCol>\n\n    <VCol cols=\"12\">\n      <div class=\"text-caption\">\n        Tick labels\n      </div>\n      <VSlider\n        v-model=\"fruits\"\n        :ticks=\"ticksLabels\"\n        :max=\"3\"\n        step=\"1\"\n        show-ticks=\"always\"\n        tick-size=\"4\"\n      />\n    </VCol>\n  </VRow>\n</template>\n","<script setup>\nconst satisfactionEmojis = [\n  'üò≠',\n  'üò¢',\n  '‚òπÔ∏è',\n  'üôÅ',\n  'üòê',\n  'üôÇ',\n  'üòä',\n  'üòÅ',\n  'üòÑ',\n  'üòç',\n]\n\nconst slider = ref(45)\n</script>\n\n<template>\n  <VRow>\n    <VCol cols=\"12\">\n      <div class=\"text-caption\">\n        Show thumb when using slider\n      </div>\n      <VSlider\n        v-model=\"slider\"\n        thumb-label\n      />\n    </VCol>\n\n    <VCol cols=\"12\">\n      <div class=\"text-caption\">\n        Always show thumb label\n      </div>\n      <VSlider\n        v-model=\"slider\"\n        thumb-label=\"always\"\n      />\n    </VCol>\n\n    <VCol cols=\"12\">\n      <div class=\"text-caption\">\n        Custom thumb size\n      </div>\n      <VSlider\n        v-model=\"slider\"\n        :thumb-size=\"30\"\n        thumb-label=\"always\"\n      />\n    </VCol>\n\n    <VCol cols=\"12\">\n      <div class=\"text-caption\">\n        Custom thumb label\n      </div>\n      <VSlider\n        v-model=\"slider\"\n        thumb-label=\"always\"\n      >\n        <template #thumb-label=\"{ modelValue }\">\n          {{ satisfactionEmojis[Math.min(Math.floor(modelValue / 10), 9)] }}\n        </template>\n      </VSlider>\n    </VCol>\n  </VRow>\n</template>\n","<template>\n  <VSlider\n    :step=\"10\"\n    show-ticks\n    :thumb-size=\"18\"\n    :tick-size=\"3\"\n    :track-size=\"2\"\n  />\n</template>\n","<script setup>\nconst min = ref(-50)\nconst max = ref(90)\nconst slider = ref(40)\n</script>\n\n<template>\n  <VSlider\n    v-model=\"slider\"\n    :max=\"max\"\n    :min=\"min\"\n    :step=\"1\"\n  >\n    <template #append>\n      <AppTextField\n        v-model=\"slider\"\n        type=\"number\"\n        style=\"inline-size: 100px;\"\n      />\n    </template>\n  </VSlider>\n</template>\n","<script setup>\nconst value = ref(30)\nconst rules = [v => v <= 40 || 'Only 40 in stock']\n</script>\n\n<template>\n  <VSlider\n    v-model=\"value\"\n    :error=\"value > 40\"\n    :rules=\"rules\"\n    :step=\"10\"\n    thumb-label=\"always\"\n    show-ticks\n  />\n</template>\n","<script setup>\nconst value = ref(0)\n</script>\n\n<template>\n  <VSlider\n    v-model=\"value\"\n    :min=\"0\"\n    :max=\"1\"\n    :step=\"0.2\"\n    thumb-label\n  />\n</template>\n","<script setup>\nconst mediaSlider = ref(0)\nconst alarmSlider = ref(0)\nconst zoomInOut = ref(10)\n</script>\n\n<template>\n  <VRow>\n    <VCol cols=\"12\">\n      <VSlider\n        v-model=\"mediaSlider\"\n        prepend-icon=\"tabler-volume\"\n      />\n    </VCol>\n\n    <VCol cols=\"12\">\n      <VSlider\n        v-model=\"alarmSlider\"\n        append-icon=\"tabler-alarm\"\n      />\n    </VCol>\n\n    <VCol cols=\"12\">\n      <VSlider\n        v-model=\"zoomInOut\"\n        append-icon=\"tabler-minus\"\n        prepend-icon=\"tabler-plus\"\n      />\n    </VCol>\n  </VRow>\n</template>\n","<script setup>\nconst sliderColorValue = ref(25)\nconst sliderTrackColorValue = ref(75)\nconst sliderThumbColorValue = ref(50)\n</script>\n\n<template>\n  <VRow>\n    <VCol cols=\"12\">\n      <div class=\"text-caption\">\n        color\n      </div>\n      <VSlider\n        v-model=\"sliderColorValue\"\n        color=\"error\"\n      />\n    </VCol>\n\n    <VCol cols=\"12\">\n      <div class=\"text-caption\">\n        track-color\n      </div>\n      <VSlider\n        v-model=\"sliderTrackColorValue\"\n        track-color=\"error\"\n      />\n    </VCol>\n\n    <VCol cols=\"12\">\n      <div class=\"text-caption\">\n        thumb-color\n      </div>\n      <VSlider\n        v-model=\"sliderThumbColorValue\"\n        thumb-color=\"error\"\n        thumb-label=\"always\"\n      />\n    </VCol>\n  </VRow>\n</template>\n","<template>\n  <VRow>\n    <VCol cols=\"12\">\n      <div class=\"text-caption\">\n        Disabled\n      </div>\n      <VSlider\n        disabled\n        label=\"Disabled\"\n        :model-value=\"30\"\n      />\n    </VCol>\n\n    <VCol cols=\"12\">\n      <div class=\"text-caption\">\n        Readonly\n      </div>\n      <VSlider\n        readonly\n        label=\"Readonly\"\n        :model-value=\"30\"\n      />\n    </VCol>\n  </VRow>\n</template>\n","<script setup>\nconst sliderValue = ref(30)\n</script>\n\n<template>\n  <VRow>\n    <VCol cols=\"12\">\n      <VSlider />\n    </VCol>\n\n    <VCol cols=\"12\">\n      <VSlider v-model=\"sliderValue\" />\n    </VCol>\n  </VRow>\n</template>\n","export const appendAndPrepend = { ts: `<script lang=\"ts\" setup>\nconst bpm = ref(40)\nconst min = 40\nconst max = 218\nconst isPlaying = ref(false)\n\nconst color = computed(() => {\n  if (bpm.value < 100)\n    return 'primary'\n  if (bpm.value < 125)\n    return 'success'\n  if (bpm.value < 140)\n    return 'info'\n  if (bpm.value < 175)\n    return 'warning'\n\n  return 'error'\n})\n\nconst animationDuration = computed(() => {\n  return \\`\\${60 / bpm.value}s\\`\n})\n\nconst decrement = () => {\n  if (bpm.value > min)\n    bpm.value -= 1\n}\n\nconst increment = () => {\n  if (bpm.value < max)\n    bpm.value += 1\n}\n</script>\n\n<template>\n  <div class=\"d-flex justify-space-between ma-4\">\n    <div>\n      <span\n        class=\"text-6xl font-weight-light\"\n        v-text=\"bpm\"\n      />\n      <span class=\"subheading font-weight-light me-1\">BPM</span>\n\n      <VFadeTransition>\n        <VAvatar\n          v-if=\"isPlaying\"\n          :color=\"color\"\n          :style=\"{\n            animationDuration,\n          }\"\n          class=\"mb-1 v-avatar--metronome\"\n          size=\"12\"\n        />\n      </VFadeTransition>\n    </div>\n\n    <div>\n      <VBtn\n        :color=\"color\"\n        icon\n        elevation=\"0\"\n        @click=\"isPlaying = !isPlaying\"\n      >\n        <VIcon\n          size=\"large\"\n          :icon=\"isPlaying ? 'tabler-pause' : 'tabler-play'\"\n        />\n      </VBtn>\n    </div>\n  </div>\n\n  <VSlider\n    v-model=\"bpm\"\n    :color=\"color\"\n    :step=\"1\"\n    :min=\"min\"\n    :max=\"max\"\n    track-color=\"secondary\"\n  >\n    <template #prepend>\n      <VBtn\n        size=\"small\"\n        variant=\"text\"\n        icon=\"tabler-minus\"\n        :color=\"color\"\n        @click=\"decrement\"\n      />\n    </template>\n\n    <template #append>\n      <VBtn\n        size=\"small\"\n        variant=\"text\"\n        icon=\"tabler-plus\"\n        :color=\"color\"\n        @click=\"increment\"\n      />\n    </template>\n  </VSlider>\n</template>\n\n<style lang=\"scss\" scoped>\n  @keyframes metronome-example {\n    from {\n      transform: scale(0.5);\n    }\n\n    to {\n      transform: scale(1);\n    }\n  }\n\n  .v-avatar--metronome {\n    animation-direction: alternate;\n    animation-iteration-count: infinite;\n    animation-name: metronome-example;\n  }\n</style>\n`, js: `<script setup>\nconst bpm = ref(40)\nconst min = 40\nconst max = 218\nconst isPlaying = ref(false)\n\nconst color = computed(() => {\n  if (bpm.value < 100)\n    return 'primary'\n  if (bpm.value < 125)\n    return 'success'\n  if (bpm.value < 140)\n    return 'info'\n  if (bpm.value < 175)\n    return 'warning'\n  \n  return 'error'\n})\n\nconst animationDuration = computed(() => {\n  return \\`\\${ 60 / bpm.value }s\\`\n})\n\nconst decrement = () => {\n  if (bpm.value > min)\n    bpm.value -= 1\n}\n\nconst increment = () => {\n  if (bpm.value < max)\n    bpm.value += 1\n}\n</script>\n\n<template>\n  <div class=\"d-flex justify-space-between ma-4\">\n    <div>\n      <span\n        class=\"text-6xl font-weight-light\"\n        v-text=\"bpm\"\n      />\n      <span class=\"subheading font-weight-light me-1\">BPM</span>\n\n      <VFadeTransition>\n        <VAvatar\n          v-if=\"isPlaying\"\n          :color=\"color\"\n          :style=\"{\n            animationDuration,\n          }\"\n          class=\"mb-1 v-avatar--metronome\"\n          size=\"12\"\n        />\n      </VFadeTransition>\n    </div>\n\n    <div>\n      <VBtn\n        :color=\"color\"\n        icon\n        elevation=\"0\"\n        @click=\"isPlaying = !isPlaying\"\n      >\n        <VIcon\n          size=\"large\"\n          :icon=\"isPlaying ? 'tabler-pause' : 'tabler-play'\"\n        />\n      </VBtn>\n    </div>\n  </div>\n\n  <VSlider\n    v-model=\"bpm\"\n    :color=\"color\"\n    :step=\"1\"\n    :min=\"min\"\n    :max=\"max\"\n    track-color=\"secondary\"\n  >\n    <template #prepend>\n      <VBtn\n        size=\"small\"\n        variant=\"text\"\n        icon=\"tabler-minus\"\n        :color=\"color\"\n        @click=\"decrement\"\n      />\n    </template>\n\n    <template #append>\n      <VBtn\n        size=\"small\"\n        variant=\"text\"\n        icon=\"tabler-plus\"\n        :color=\"color\"\n        @click=\"increment\"\n      />\n    </template>\n  </VSlider>\n</template>\n\n<style lang=\"scss\" scoped>\n  @keyframes metronome-example {\n    from {\n      transform: scale(0.5);\n    }\n\n    to {\n      transform: scale(1);\n    }\n  }\n\n  .v-avatar--metronome {\n    animation-direction: alternate;\n    animation-iteration-count: infinite;\n    animation-name: metronome-example;\n  }\n</style>\n` }\n\nexport const appendTextField = { ts: `<script lang=\"ts\" setup>\nconst redColorValue = ref(161)\nconst greenColorValue = ref(105)\nconst blueColorValue = ref(255)\n</script>\n\n<template>\n  <VResponsive\n    :style=\"{ background: \\`rgb(\\${redColorValue}, \\${greenColorValue}, \\${blueColorValue})\\` }\"\n    height=\"150px\"\n  />\n\n  <VRow class=\"mt-5\">\n    <VCol cols=\"12\">\n      <!-- R -->\n      <VSlider\n        v-model=\"redColorValue\"\n        :max=\"255\"\n        :step=\"1\"\n        prepend-icon=\"tabler-letter-r\"\n      >\n        <template #append>\n          <div style=\"inline-size: 7rem;\">\n            <AppTextField\n              v-model=\"redColorValue\"\n              type=\"number\"\n              variant=\"underlined\"\n              :max=\"255\"\n            />\n          </div>\n        </template>\n      </VSlider>\n    </VCol>\n\n    <VCol cols=\"12\">\n      <!-- G -->\n      <VSlider\n        v-model=\"greenColorValue\"\n        :max=\"255\"\n        :step=\"1\"\n        prepend-icon=\"tabler-letter-g\"\n      >\n        <template #append>\n          <div style=\"inline-size: 7rem;\">\n            <AppTextField\n              v-model=\"greenColorValue\"\n              type=\"number\"\n              :max=\"255\"\n            />\n          </div>\n        </template>\n      </VSlider>\n    </VCol>\n\n    <VCol cols=\"12\">\n      <!-- B -->\n      <VSlider\n        v-model=\"blueColorValue\"\n        :max=\"255\"\n        :step=\"1\"\n        prepend-icon=\"tabler-letter-b\"\n      >\n        <template #append>\n          <div style=\"inline-size: 7rem;\">\n            <AppTextField\n              v-model=\"blueColorValue\"\n              type=\"number\"\n              variant=\"underlined\"\n              :max=\"255\"\n            />\n          </div>\n        </template>\n      </VSlider>\n    </VCol>\n  </VRow>\n</template>\n`, js: `<script setup>\nconst redColorValue = ref(161)\nconst greenColorValue = ref(105)\nconst blueColorValue = ref(255)\n</script>\n\n<template>\n  <VResponsive\n    :style=\"{ background: \\`rgb(\\${redColorValue}, \\${greenColorValue}, \\${blueColorValue})\\` }\"\n    height=\"150px\"\n  />\n\n  <VRow class=\"mt-5\">\n    <VCol cols=\"12\">\n      <!-- R -->\n      <VSlider\n        v-model=\"redColorValue\"\n        :max=\"255\"\n        :step=\"1\"\n        prepend-icon=\"tabler-letter-r\"\n      >\n        <template #append>\n          <div style=\"inline-size: 7rem;\">\n            <AppTextField\n              v-model=\"redColorValue\"\n              type=\"number\"\n              variant=\"underlined\"\n              :max=\"255\"\n            />\n          </div>\n        </template>\n      </VSlider>\n    </VCol>\n\n    <VCol cols=\"12\">\n      <!-- G -->\n      <VSlider\n        v-model=\"greenColorValue\"\n        :max=\"255\"\n        :step=\"1\"\n        prepend-icon=\"tabler-letter-g\"\n      >\n        <template #append>\n          <div style=\"inline-size: 7rem;\">\n            <AppTextField\n              v-model=\"greenColorValue\"\n              type=\"number\"\n              :max=\"255\"\n            />\n          </div>\n        </template>\n      </VSlider>\n    </VCol>\n\n    <VCol cols=\"12\">\n      <!-- B -->\n      <VSlider\n        v-model=\"blueColorValue\"\n        :max=\"255\"\n        :step=\"1\"\n        prepend-icon=\"tabler-letter-b\"\n      >\n        <template #append>\n          <div style=\"inline-size: 7rem;\">\n            <AppTextField\n              v-model=\"blueColorValue\"\n              type=\"number\"\n              variant=\"underlined\"\n              :max=\"255\"\n            />\n          </div>\n        </template>\n      </VSlider>\n    </VCol>\n  </VRow>\n</template>\n` }\n\nexport const basic = { ts: `<script setup lang=\"ts\">\nconst sliderValue = ref(30)\n</script>\n\n<template>\n  <VRow>\n    <VCol cols=\"12\">\n      <VSlider />\n    </VCol>\n\n    <VCol cols=\"12\">\n      <VSlider v-model=\"sliderValue\" />\n    </VCol>\n  </VRow>\n</template>\n`, js: `<script setup>\nconst sliderValue = ref(30)\n</script>\n\n<template>\n  <VRow>\n    <VCol cols=\"12\">\n      <VSlider />\n    </VCol>\n\n    <VCol cols=\"12\">\n      <VSlider v-model=\"sliderValue\" />\n    </VCol>\n  </VRow>\n</template>\n` }\n\nexport const colors = { ts: `<script lang=\"ts\" setup>\nconst sliderColorValue = ref(25)\nconst sliderTrackColorValue = ref(75)\nconst sliderThumbColorValue = ref(50)\n</script>\n\n<template>\n  <VRow>\n    <VCol cols=\"12\">\n      <div class=\"text-caption\">\n        color\n      </div>\n      <VSlider\n        v-model=\"sliderColorValue\"\n        color=\"error\"\n      />\n    </VCol>\n\n    <VCol cols=\"12\">\n      <div class=\"text-caption\">\n        track-color\n      </div>\n      <VSlider\n        v-model=\"sliderTrackColorValue\"\n        track-color=\"error\"\n      />\n    </VCol>\n\n    <VCol cols=\"12\">\n      <div class=\"text-caption\">\n        thumb-color\n      </div>\n      <VSlider\n        v-model=\"sliderThumbColorValue\"\n        thumb-color=\"error\"\n        thumb-label=\"always\"\n      />\n    </VCol>\n  </VRow>\n</template>\n`, js: `<script setup>\nconst sliderColorValue = ref(25)\nconst sliderTrackColorValue = ref(75)\nconst sliderThumbColorValue = ref(50)\n</script>\n\n<template>\n  <VRow>\n    <VCol cols=\"12\">\n      <div class=\"text-caption\">\n        color\n      </div>\n      <VSlider\n        v-model=\"sliderColorValue\"\n        color=\"error\"\n      />\n    </VCol>\n\n    <VCol cols=\"12\">\n      <div class=\"text-caption\">\n        track-color\n      </div>\n      <VSlider\n        v-model=\"sliderTrackColorValue\"\n        track-color=\"error\"\n      />\n    </VCol>\n\n    <VCol cols=\"12\">\n      <div class=\"text-caption\">\n        thumb-color\n      </div>\n      <VSlider\n        v-model=\"sliderThumbColorValue\"\n        thumb-color=\"error\"\n        thumb-label=\"always\"\n      />\n    </VCol>\n  </VRow>\n</template>\n` }\n\nexport const disabledAndReadonly = { ts: `<template>\n  <VRow>\n    <VCol cols=\"12\">\n      <div class=\"text-caption\">\n        Disabled\n      </div>\n      <VSlider\n        disabled\n        label=\"Disabled\"\n        :model-value=\"30\"\n      />\n    </VCol>\n\n    <VCol cols=\"12\">\n      <div class=\"text-caption\">\n        Readonly\n      </div>\n      <VSlider\n        readonly\n        label=\"Readonly\"\n        :model-value=\"30\"\n      />\n    </VCol>\n  </VRow>\n</template>\n`, js: `<template>\n  <VRow>\n    <VCol cols=\"12\">\n      <div class=\"text-caption\">\n        Disabled\n      </div>\n      <VSlider\n        disabled\n        label=\"Disabled\"\n        :model-value=\"30\"\n      />\n    </VCol>\n\n    <VCol cols=\"12\">\n      <div class=\"text-caption\">\n        Readonly\n      </div>\n      <VSlider\n        readonly\n        label=\"Readonly\"\n        :model-value=\"30\"\n      />\n    </VCol>\n  </VRow>\n</template>\n` }\n\nexport const icons = { ts: `<script lang=\"ts\" setup>\nconst mediaSlider = ref(0)\nconst alarmSlider = ref(0)\nconst zoomInOut = ref(10)\n</script>\n\n<template>\n  <VRow>\n    <VCol cols=\"12\">\n      <VSlider\n        v-model=\"mediaSlider\"\n        prepend-icon=\"tabler-volume\"\n      />\n    </VCol>\n\n    <VCol cols=\"12\">\n      <VSlider\n        v-model=\"alarmSlider\"\n        append-icon=\"tabler-alarm\"\n      />\n    </VCol>\n\n    <VCol cols=\"12\">\n      <VSlider\n        v-model=\"zoomInOut\"\n        append-icon=\"tabler-minus\"\n        prepend-icon=\"tabler-plus\"\n      />\n    </VCol>\n  </VRow>\n</template>\n`, js: `<script setup>\nconst mediaSlider = ref(0)\nconst alarmSlider = ref(0)\nconst zoomInOut = ref(10)\n</script>\n\n<template>\n  <VRow>\n    <VCol cols=\"12\">\n      <VSlider\n        v-model=\"mediaSlider\"\n        prepend-icon=\"tabler-volume\"\n      />\n    </VCol>\n\n    <VCol cols=\"12\">\n      <VSlider\n        v-model=\"alarmSlider\"\n        append-icon=\"tabler-alarm\"\n      />\n    </VCol>\n\n    <VCol cols=\"12\">\n      <VSlider\n        v-model=\"zoomInOut\"\n        append-icon=\"tabler-minus\"\n        prepend-icon=\"tabler-plus\"\n      />\n    </VCol>\n  </VRow>\n</template>\n` }\n\nexport const minAndMax = { ts: `<script lang=\"ts\" setup>\nconst min = ref(-50)\nconst max = ref(90)\nconst slider = ref(40)\n</script>\n\n<template>\n  <VSlider\n    v-model=\"slider\"\n    :max=\"max\"\n    :min=\"min\"\n    :step=\"1\"\n  >\n    <template #append>\n      <AppTextField\n        v-model=\"slider\"\n        type=\"number\"\n        style=\"inline-size: 100px;\"\n      />\n    </template>\n  </VSlider>\n</template>\n`, js: `<script setup>\nconst min = ref(-50)\nconst max = ref(90)\nconst slider = ref(40)\n</script>\n\n<template>\n  <VSlider\n    v-model=\"slider\"\n    :max=\"max\"\n    :min=\"min\"\n    :step=\"1\"\n  >\n    <template #append>\n      <AppTextField\n        v-model=\"slider\"\n        type=\"number\"\n        style=\"inline-size: 100px;\"\n      />\n    </template>\n  </VSlider>\n</template>\n` }\n\nexport const size = { ts: `<template>\n  <VSlider\n    :step=\"10\"\n    show-ticks\n    :thumb-size=\"18\"\n    :tick-size=\"3\"\n    :track-size=\"2\"\n  />\n</template>\n`, js: `<template>\n  <VSlider\n    :step=\"10\"\n    show-ticks\n    :thumb-size=\"18\"\n    :tick-size=\"3\"\n    :track-size=\"2\"\n  />\n</template>\n` }\n\nexport const step = { ts: `<script lang=\"ts\" setup>\nconst value = ref(0)\n</script>\n\n<template>\n  <VSlider\n    v-model=\"value\"\n    :min=\"0\"\n    :max=\"1\"\n    :step=\"0.2\"\n    thumb-label\n  />\n</template>\n`, js: `<script setup>\nconst value = ref(0)\n</script>\n\n<template>\n  <VSlider\n    v-model=\"value\"\n    :min=\"0\"\n    :max=\"1\"\n    :step=\"0.2\"\n    thumb-label\n  />\n</template>\n` }\n\nexport const thumb = { ts: `<script lang=\"ts\" setup>\nconst satisfactionEmojis = ['üò≠', 'üò¢', '‚òπÔ∏è', 'üôÅ', 'üòê', 'üôÇ', 'üòä', 'üòÅ', 'üòÑ', 'üòç']\nconst slider = ref(45)\n</script>\n\n<template>\n  <VRow>\n    <VCol cols=\"12\">\n      <div class=\"text-caption\">\n        Show thumb when using slider\n      </div>\n      <VSlider\n        v-model=\"slider\"\n        thumb-label\n      />\n    </VCol>\n\n    <VCol cols=\"12\">\n      <div class=\"text-caption\">\n        Always show thumb label\n      </div>\n      <VSlider\n        v-model=\"slider\"\n        thumb-label=\"always\"\n      />\n    </VCol>\n\n    <VCol cols=\"12\">\n      <div class=\"text-caption\">\n        Custom thumb size\n      </div>\n      <VSlider\n        v-model=\"slider\"\n        :thumb-size=\"30\"\n        thumb-label=\"always\"\n      />\n    </VCol>\n\n    <VCol cols=\"12\">\n      <div class=\"text-caption\">\n        Custom thumb label\n      </div>\n      <VSlider\n        v-model=\"slider\"\n        thumb-label=\"always\"\n      >\n        <template #thumb-label=\"{ modelValue }\">\n          {{ satisfactionEmojis[Math.min(Math.floor(modelValue / 10), 9)] }}\n        </template>\n      </VSlider>\n    </VCol>\n  </VRow>\n</template>\n`, js: `<script setup>\nconst satisfactionEmojis = [\n  'üò≠',\n  'üò¢',\n  '‚òπÔ∏è',\n  'üôÅ',\n  'üòê',\n  'üôÇ',\n  'üòä',\n  'üòÅ',\n  'üòÑ',\n  'üòç',\n]\n\nconst slider = ref(45)\n</script>\n\n<template>\n  <VRow>\n    <VCol cols=\"12\">\n      <div class=\"text-caption\">\n        Show thumb when using slider\n      </div>\n      <VSlider\n        v-model=\"slider\"\n        thumb-label\n      />\n    </VCol>\n\n    <VCol cols=\"12\">\n      <div class=\"text-caption\">\n        Always show thumb label\n      </div>\n      <VSlider\n        v-model=\"slider\"\n        thumb-label=\"always\"\n      />\n    </VCol>\n\n    <VCol cols=\"12\">\n      <div class=\"text-caption\">\n        Custom thumb size\n      </div>\n      <VSlider\n        v-model=\"slider\"\n        :thumb-size=\"30\"\n        thumb-label=\"always\"\n      />\n    </VCol>\n\n    <VCol cols=\"12\">\n      <div class=\"text-caption\">\n        Custom thumb label\n      </div>\n      <VSlider\n        v-model=\"slider\"\n        thumb-label=\"always\"\n      >\n        <template #thumb-label=\"{ modelValue }\">\n          {{ satisfactionEmojis[Math.min(Math.floor(modelValue / 10), 9)] }}\n        </template>\n      </VSlider>\n    </VCol>\n  </VRow>\n</template>\n` }\n\nexport const ticks = { ts: `<script lang=\"ts\" setup>\nconst value = ref(0)\nconst fruits = ref(1)\nconst ticksLabels = { 0: 'Figs', 1: 'Lemon', 2: 'Pear', 3: 'Apple' }\n</script>\n\n<template>\n  <VRow>\n    <VCol cols=\"12\">\n      <div class=\"text-caption\">\n        Show ticks when using slider\n      </div>\n      <VSlider\n        v-model=\"value\"\n        :step=\"10\"\n        show-ticks\n      />\n    </VCol>\n\n    <VCol cols=\"12\">\n      <div class=\"text-caption\">\n        Always show ticks\n      </div>\n      <VSlider\n        v-model=\"value\"\n        :step=\"10\"\n        show-ticks=\"always\"\n      />\n    </VCol>\n\n    <VCol cols=\"12\">\n      <div class=\"text-caption\">\n        Tick size\n      </div>\n      <VSlider\n        v-model=\"value\"\n        :step=\"10\"\n        show-ticks=\"always\"\n        tick-size=\"4\"\n      />\n    </VCol>\n\n    <VCol cols=\"12\">\n      <div class=\"text-caption\">\n        Tick labels\n      </div>\n      <VSlider\n        v-model=\"fruits\"\n        :ticks=\"ticksLabels\"\n        :max=\"3\"\n        step=\"1\"\n        show-ticks=\"always\"\n        tick-size=\"4\"\n      />\n    </VCol>\n  </VRow>\n</template>\n`, js: `<script setup>\nconst value = ref(0)\nconst fruits = ref(1)\n\nconst ticksLabels = {\n  0: 'Figs',\n  1: 'Lemon',\n  2: 'Pear',\n  3: 'Apple',\n}\n</script>\n\n<template>\n  <VRow>\n    <VCol cols=\"12\">\n      <div class=\"text-caption\">\n        Show ticks when using slider\n      </div>\n      <VSlider\n        v-model=\"value\"\n        :step=\"10\"\n        show-ticks\n      />\n    </VCol>\n\n    <VCol cols=\"12\">\n      <div class=\"text-caption\">\n        Always show ticks\n      </div>\n      <VSlider\n        v-model=\"value\"\n        :step=\"10\"\n        show-ticks=\"always\"\n      />\n    </VCol>\n\n    <VCol cols=\"12\">\n      <div class=\"text-caption\">\n        Tick size\n      </div>\n      <VSlider\n        v-model=\"value\"\n        :step=\"10\"\n        show-ticks=\"always\"\n        tick-size=\"4\"\n      />\n    </VCol>\n\n    <VCol cols=\"12\">\n      <div class=\"text-caption\">\n        Tick labels\n      </div>\n      <VSlider\n        v-model=\"fruits\"\n        :ticks=\"ticksLabels\"\n        :max=\"3\"\n        step=\"1\"\n        show-ticks=\"always\"\n        tick-size=\"4\"\n      />\n    </VCol>\n  </VRow>\n</template>\n` }\n\nexport const validation = { ts: `<script lang=\"ts\" setup>\nconst value = ref(30)\nconst rules = [(v: number) => v <= 40 || 'Only 40 in stock']\n</script>\n\n<template>\n  <VSlider\n    v-model=\"value\"\n    :error=\"value > 40\"\n    :rules=\"rules\"\n    :step=\"10\"\n    thumb-label=\"always\"\n    show-ticks\n  />\n</template>\n`, js: `<script setup>\nconst value = ref(30)\nconst rules = [v => v <= 40 || 'Only 40 in stock']\n</script>\n\n<template>\n  <VSlider\n    v-model=\"value\"\n    :error=\"value > 40\"\n    :rules=\"rules\"\n    :step=\"10\"\n    thumb-label=\"always\"\n    show-ticks\n  />\n</template>\n` }\n\nexport const vertical = { ts: `<script lang=\"ts\" setup>\nconst value = ref(10)\n</script>\n\n<template>\n  <VSlider\n    v-model=\"value\"\n    direction=\"vertical\"\n  />\n</template>\n`, js: `<script setup>\nconst value = ref(10)\n</script>\n\n<template>\n  <VSlider\n    v-model=\"value\"\n    direction=\"vertical\"\n  />\n</template>\n` }\n\n"],"names":["bpm","ref","min","max","isPlaying","color","computed","animationDuration","decrement","increment","redColorValue","greenColorValue","blueColorValue","value","fruits","ticksLabels","satisfactionEmojis","slider","_openBlock","_createBlock","_component_VSlider","rules","v","mediaSlider","alarmSlider","zoomInOut","sliderColorValue","sliderTrackColorValue","sliderThumbColorValue","_hoisted_1","_createElementVNode","_createVNode","sliderValue","appendAndPrepend","appendTextField","basic","colors","disabledAndReadonly","icons","minAndMax","size","step","thumb","ticks","validation","vertical"],"mappings":"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"}