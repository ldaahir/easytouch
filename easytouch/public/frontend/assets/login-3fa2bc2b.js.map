{"version":3,"file":"login-3fa2bc2b.js","sources":["../../../../frontend/src/pages/login.vue"],"sourcesContent":["<script setup>\nimport { VForm } from 'vuetify/components/VForm'\nimport { useAppAbility } from '@/plugins/casl/useAppAbility'\nimport AuthProvider from '@/views/pages/authentication/AuthProvider.vue'\nimport axios from '@axios'\nimport { useGenerateImageVariant } from '@core/composable/useGenerateImageVariant'\nimport authV2LoginIllustrationBorderedDark from '@images/pages/auth-v2-login-illustration-bordered-dark.png'\nimport authV2LoginIllustrationBorderedLight from '@images/pages/auth-v2-login-illustration-bordered-light.png'\nimport authV2LoginIllustrationDark from '@images/pages/auth-v2-login-illustration-dark.png'\nimport authV2LoginIllustrationLight from '@images/pages/auth-v2-login-illustration-light.png'\nimport authV2MaskDark from '@images/pages/misc-mask-dark.png'\nimport authV2MaskLight from '@images/pages/misc-mask-light.png'\nimport { VNodeRenderer } from '@layouts/components/VNodeRenderer'\nimport { themeConfig } from '@themeConfig'\nimport { createListResource } from 'frappe-ui'\n\nimport {\n  emailValidator,\n  requiredValidator,\n} from '@validators'\n\nconst authThemeImg = useGenerateImageVariant(authV2LoginIllustrationLight, authV2LoginIllustrationDark, authV2LoginIllustrationBorderedLight, authV2LoginIllustrationBorderedDark, true)\nconst authThemeMask = useGenerateImageVariant(authV2MaskLight, authV2MaskDark)\nconst isPasswordVisible = ref(false)\nconst route = useRoute()\nconst router = useRouter()\nconst ability = useAppAbility()\n\nconst errors = ref({\n  email: undefined,\n  password: undefined,\n})\n\nconst refVForm = ref()\nconst email = ref('administrator')\nconst password = ref('1234')\nconst rememberMe = ref(false)\n\n// const login = () => {\n//   axios.post('/auth/login', {\n//     email: email.value,\n//     password: password.value,\n//   }).then(async r => {\n//     const { accessToken, userData, userAbilities } = r.data\n//     console.log(userAbilities)\n//     localStorage.setItem('userAbilities', JSON.stringify(userAbilities))\n//     ability.update(userAbilities)\n//     localStorage.setItem('userData', JSON.stringify(userData))\n//     localStorage.setItem('accessToken', JSON.stringify(accessToken))\n\n//     // Redirect to `to` query if exist or redirect to index route\n//     const m= await router.replace(route.query.to ? String(route.query.to) : '/')\n//     console.log(\"m waa : \",m)\n//   }).catch(e => {\n//     const { errors: formErrors } = e.response.data\n\n//     errors.value = formErrors\n//     console.error(e.response.data)\n//   })\n// }\nconst change_dic_name=(colName,data)=>{\n  let dict={}\n  let i=0;\n  for(let key in data[0]){\n    dict[colName[i]]=data[0][key]\n    i++;\n  }\n  return dict\n\n}\nconst get_Data=async (api,fields,filters)=>{\n  const response=await axios.get(api,{\n    params:{\n      filters: JSON.stringify(filters),\n      fields:JSON.stringify(fields)\n    }\n\n  });\n  return response.data.data\n}\n\n\n\nconst login = async () => {\n  \n    axios\n    .post('/api/method/login', {\n      usr: email.value,\n      pwd: password.value\n    }).then(async response => {\n      if (response!==undefined){\n        console.log('Login successful:', response);\n        const xog=await get_Data(\"/api/resource/User\",\n      ['name','full_name','username','email','user_image','role_profile_name'],\n      {'username':email.value}\n      )\n      const userAbilities= [\n      {\n        \"action\": \"manage\",\n        \"subject\": \"all\"\n      }\n    ]\n    const UserData=change_dic_name([\"id\",\"fullName\",\"username\",\"email\",\"avatar\",\"role\"],xog)\n\n      localStorage.setItem('userAbilities', JSON.stringify(userAbilities))\n      ability.update(userAbilities)\n      const accessToken=\"40d9ab79d28e107.74b1cf4d358d2cb\"\n      localStorage.setItem('accessToken', JSON.stringify(accessToken))\n     \n\n      localStorage.setItem('userData', JSON.stringify(UserData))\n      router.replace(route.query.to ? String(route.query.to) : '/')\n      \n      }\n      else{\n        errors.value ={email:\"email or password is invalid\",password:\"\"} \n\n      }\n      \n    })\n    .catch(e => {\n      // const { errors: formErrors } = e.response.data\n      errors.value ={email:\"email or password is invalid\",password:\"\"} \n      console,log(errors)\n      // console.error(e.response.data)\n    });\n\n};\n\nconst onSubmit = () => {\n  refVForm.value?.validate().then(({ valid: isValid }) => {\n    if (isValid)\n      login()\n  })\n}\n</script>\n\n<template>\n  <VRow\n    no-gutters\n    class=\"auth-wrapper bg-surface\"\n  >\n    <VCol\n      lg=\"8\"\n      class=\"d-none d-lg-flex\"\n    >\n      <div class=\"position-relative bg-background rounded-lg w-100 ma-8 me-0\">\n        <div class=\"d-flex align-center justify-center w-100 h-100\">\n          <VImg\n            max-width=\"505\"\n            :src=\"authThemeImg\"\n            class=\"auth-illustration mt-16 mb-2\"\n          />\n        </div>\n\n        <VImg\n          :src=\"authThemeMask\"\n          class=\"auth-footer-mask\"\n        />\n      </div>\n    </VCol>\n\n    <VCol\n      cols=\"12\"\n      lg=\"4\"\n      class=\"auth-card-v2 d-flex align-center justify-center\"\n    >\n      <VCard\n        flat\n        :max-width=\"500\"\n        class=\"mt-12 mt-sm-0 pa-4\"\n      >\n        <VCardText>\n          <VNodeRenderer\n            :nodes=\"themeConfig.app.logo\"\n            class=\"mb-6\"\n          />\n\n          <h5 class=\"text-h5 mb-1\">\n            Welcome to <span class=\"text-capitalize\"> {{ themeConfig.app.title }} </span>! üëãüèª\n          </h5>\n          <p class=\"mb-0\">\n            Please sign-in to your account and start the adventure\n          </p>\n        </VCardText>\n        <VCardText>\n          <VAlert\n            color=\"primary\"\n            variant=\"tonal\"\n          >\n            <p class=\"text-caption mb-2\">\n              Admin Email: <strong>admin@demo.com</strong> / Pass: <strong>admin</strong>\n            </p>\n            <p class=\"text-caption mb-0\">\n              Client Email: <strong>client@demo.com</strong> / Pass: <strong>client</strong>\n            </p>\n          </VAlert>\n        </VCardText>\n        <VCardText>\n          <VForm\n            ref=\"refVForm\"\n            @submit.prevent=\"onSubmit\"\n          >\n            <VRow>\n              <!-- email -->\n              <VCol cols=\"12\">\n                <AppTextField\n                  v-model=\"email\"\n                  label=\"Email\"\n                  type=\"text\"\n                  autofocus\n                  :rules=\"[requiredValidator]\"\n                  :error-messages=\"errors.email\"\n                />\n              </VCol>\n\n              <!-- password -->\n              <VCol cols=\"12\">\n                <AppTextField\n                  v-model=\"password\"\n                  label=\"Password\"\n                  :rules=\"[requiredValidator]\"\n                  :type=\"isPasswordVisible ? 'text' : 'password'\"\n                  :error-messages=\"errors.password\"\n                  :append-inner-icon=\"isPasswordVisible ? 'tabler-eye-off' : 'tabler-eye'\"\n                  @click:append-inner=\"isPasswordVisible = !isPasswordVisible\"\n                />\n\n                <div class=\"d-flex align-center flex-wrap justify-space-between mt-2 mb-4\">\n                  <VCheckbox\n                    v-model=\"rememberMe\"\n                    label=\"Remember me\"\n                  />\n                  <RouterLink\n                    class=\"text-primary ms-2 mb-1\"\n                    :to=\"{ name: 'forgot-password' }\"\n                  >\n                    Forgot Password?\n                  </RouterLink>\n                </div>\n\n                <VBtn\n                  block\n                  type=\"submit\"\n                >\n                  Login\n                </VBtn>\n              </VCol>\n\n              <!-- create account -->\n              <VCol\n                cols=\"12\"\n                class=\"text-center\"\n              >\n                <span>New on our platform?</span>\n                <RouterLink\n                  class=\"text-primary ms-2\"\n                  :to=\"{ name: 'register' }\"\n                >\n                  Create an account\n                </RouterLink>\n              </VCol>\n              <VCol\n                cols=\"12\"\n                class=\"d-flex align-center\"\n              >\n                <VDivider />\n                <span class=\"mx-4\">or</span>\n                <VDivider />\n              </VCol>\n\n              <!-- auth providers -->\n              <VCol\n                cols=\"12\"\n                class=\"text-center\"\n              >\n                <AuthProvider />\n              </VCol>\n            </VRow>\n          </VForm>\n        </VCardText>\n      </VCard>\n    </VCol>\n  </VRow>\n</template>\n\n<style lang=\"scss\">\n@use \"@core/scss/template/pages/page-auth.scss\";\n</style>\n\n<route lang=\"yaml\">\nmeta:\n  layout: blank\n  action: read\n  subject: Auth\n  redirectIfLoggedIn: true\n</route>\n"],"names":["authThemeImg","useGenerateImageVariant","authV2LoginIllustrationLight","authV2LoginIllustrationDark","authV2LoginIllustrationBorderedLight","authV2LoginIllustrationBorderedDark","authThemeMask","authV2MaskLight","authV2MaskDark","isPasswordVisible","ref","route","useRoute","router","useRouter","ability","useAppAbility","errors","refVForm","email","password","rememberMe","change_dic_name","colName","data","dict","i","key","get_Data","api","fields","filters","__async","axios","login","response","xog","userAbilities","UserData","accessToken","e","onSubmit","_a","isValid"],"mappings":"6tEAqBA,MAAAA,EAAAC,EAAAC,GAAAC,EAAAC,EAAAC,EAAA,EAAA,EACAC,EAAAL,EAAAM,GAAAC,EAAA,EACAC,EAAAC,EAAA,EAAA,EACAC,EAAAC,EAAA,EACAC,EAAAC,EAAA,EACAC,EAAAC,EAAA,EAEAC,EAAAP,EAAA,CACA,MAAA,OACA,SAAA,MACA,CAAA,EAEAQ,EAAAR,EAAA,EACAS,EAAAT,EAAA,eAAA,EACAU,EAAAV,EAAA,MAAA,EACAW,EAAAX,EAAA,EAAA,EAwBAY,EAAA,CAAAC,EAAAC,IAAA,CACA,IAAAC,EAAA,CAAA,EACAC,EAAA,EACA,QAAAC,KAAAH,EAAA,CAAA,EACAC,EAAAF,EAAAG,CAAA,CAAA,EAAAF,EAAA,CAAA,EAAAG,CAAA,EACAD,IAEA,OAAAD,CAEA,EACAG,EAAA,CAAAC,EAAAC,EAAAC,IAAAC,EAAA,sBAQA,OAPA,MAAAC,EAAA,IAAAJ,EAAA,CACA,OAAA,CACA,QAAA,KAAA,UAAAE,CAAA,EACA,OAAA,KAAA,UAAAD,CAAA,CACA,CAEA,CAAA,GACA,KAAA,IACA,GAIAI,EAAA,IAAAF,EAAA,sBAEAC,EACA,KAAA,oBAAA,CACA,IAAAd,EAAA,MACA,IAAAC,EAAA,KACA,CAAA,EAAA,KAAAe,GAAAH,EAAA,sBACA,GAAAG,IAAA,OAAA,CACA,QAAA,IAAA,oBAAAA,CAAA,EACA,MAAAC,EAAA,MAAAR,EAAA,qBACA,CAAA,OAAA,YAAA,WAAA,QAAA,aAAA,mBAAA,EACA,CAAA,SAAAT,EAAA,KAAA,CACA,EACAkB,EAAA,CACA,CACA,OAAA,SACA,QAAA,KACA,CACA,EACAC,EAAAhB,EAAA,CAAA,KAAA,WAAA,WAAA,QAAA,SAAA,MAAA,EAAAc,CAAA,EAEA,aAAA,QAAA,gBAAA,KAAA,UAAAC,CAAA,CAAA,EACAtB,EAAA,OAAAsB,CAAA,EACA,MAAAE,EAAA,kCACA,aAAA,QAAA,cAAA,KAAA,UAAAA,CAAA,CAAA,EAGA,aAAA,QAAA,WAAA,KAAA,UAAAD,CAAA,CAAA,EACAzB,EAAA,QAAAF,EAAA,MAAA,GAAA,OAAAA,EAAA,MAAA,EAAA,EAAA,GAAA,CAEA,MAEAM,EAAA,MAAA,CAAA,MAAA,+BAAA,SAAA,EAAA,CAIA,EAAA,EACA,MAAAuB,GAAA,CAEAvB,EAAA,MAAA,CAAA,MAAA,+BAAA,SAAA,EAAA,EACA,IAAAA,CAAA,CAEA,CAAA,CAEA,GAEAwB,EAAA,IAAA,QACAC,EAAAxB,EAAA,QAAA,MAAAwB,EAAA,WAAA,KAAA,CAAA,CAAA,MAAAC,KAAA,CACAA,GACAT,EAAA,CACA,EACA"}