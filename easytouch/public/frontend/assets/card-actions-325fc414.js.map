{"version":3,"file":"card-actions-325fc414.js","sources":["../../../../frontend/src/@core/components/cards/AppCardActions.vue","../../../../frontend/src/pages/pages/cards/card-actions.vue"],"sourcesContent":["<script setup>\nconst props = defineProps({\n  collapsed: {\n    type: Boolean,\n    required: false,\n    default: false,\n  },\n  noActions: {\n    type: Boolean,\n    required: false,\n    default: false,\n  },\n  actionCollapsed: {\n    type: Boolean,\n    required: false,\n    default: false,\n  },\n  actionRefresh: {\n    type: Boolean,\n    required: false,\n    default: false,\n  },\n  actionRemove: {\n    type: Boolean,\n    required: false,\n    default: false,\n  },\n  title: {\n    type: String,\n    required: false,\n    default: undefined,\n  },\n})\n\nconst emit = defineEmits([\n  'collapsed',\n  'refresh',\n  'trash',\n])\n\ndefineOptions({ inheritAttrs: false })\n\nconst isContentCollapsed = ref(props.collapsed)\nconst isCardRemoved = ref(false)\nconst isOverlayVisible = ref(false)\n\n// hiding overlay\nconst hideOverlay = () => {\n  isOverlayVisible.value = false\n}\n\n// trigger collapse\nconst triggerCollapse = () => {\n  isContentCollapsed.value = !isContentCollapsed.value\n  emit('collapsed', isContentCollapsed.value)\n}\n\n// trigger refresh\nconst triggerRefresh = () => {\n  isOverlayVisible.value = true\n  emit('refresh', hideOverlay)\n}\n\n// trigger removal\nconst triggeredRemove = () => {\n  isCardRemoved.value = true\n  emit('trash')\n}\n</script>\n\n<template>\n  <VExpandTransition>\n    <!-- TODO remove div when transition work with v-card components: https://github.com/vuetifyjs/vuetify/issues/15111 -->\n    <div v-if=\"!isCardRemoved\">\n      <VCard v-bind=\"$attrs\">\n        <VCardItem>\n          <VCardTitle v-if=\"props.title || $slots.title\">\n            <!-- ðŸ‘‰ Title slot and prop -->\n            <slot name=\"title\">\n              {{ props.title }}\n            </slot>\n          </VCardTitle>\n\n          <template #append>\n            <!-- ðŸ‘‰ Before actions slot -->\n            <div>\n              <slot name=\"before-actions\" />\n\n              <!-- SECTION Actions buttons -->\n\n              <!-- ðŸ‘‰ Collapse button -->\n              <IconBtn\n                v-if=\"(!(actionRemove || actionRefresh) || actionCollapsed) && !noActions\"\n                @click=\"triggerCollapse\"\n              >\n                <VIcon\n                  size=\"20\"\n                  icon=\"tabler-chevron-up\"\n                  :style=\"{ transform: isContentCollapsed ? 'rotate(-180deg)' : null }\"\n                  style=\"transition-duration: 0.28s;\"\n                />\n              </IconBtn>\n\n              <!-- ðŸ‘‰ Overlay button -->\n              <IconBtn\n                v-if=\"(!(actionRemove || actionCollapsed) || actionRefresh) && !noActions\"\n                @click=\"triggerRefresh\"\n              >\n                <VIcon\n                  size=\"20\"\n                  icon=\"tabler-refresh\"\n                />\n              </IconBtn>\n\n              <!-- ðŸ‘‰ Close button -->\n              <IconBtn\n                v-if=\"(!(actionRefresh || actionCollapsed) || actionRemove) && !noActions\"\n                @click=\"triggeredRemove\"\n              >\n                <VIcon\n                  size=\"20\"\n                  icon=\"tabler-x\"\n                />\n              </IconBtn>\n            </div>\n          <!-- !SECTION -->\n          </template>\n        </VCardItem>\n\n        <!-- ðŸ‘‰ card content -->\n        <VExpandTransition>\n          <div\n            v-show=\"!isContentCollapsed\"\n            class=\"v-card-content\"\n          >\n            <slot />\n          </div>\n        </VExpandTransition>\n\n        <!-- ðŸ‘‰ Overlay -->\n        <VOverlay\n          v-model=\"isOverlayVisible\"\n          contained\n          persistent\n          class=\"align-center justify-center\"\n        >\n          <VProgressCircular indeterminate />\n        </VOverlay>\n      </VCard>\n    </div>\n  </VExpandTransition>\n</template>\n\n<style lang=\"scss\">\n.v-card-item {\n  +.v-card-content {\n    .v-card-text:first-child {\n      padding-block-start: 0;\n    }\n  }\n}\n</style>\n","<script setup>\nconst tableData = [\n  {\n    action: 'Collapse',\n    icon: 'tabler-chevron-up',\n    details: 'Collapse card content using collapse action.',\n  },\n  {\n    action: 'Refresh Content',\n    icon: 'tabler-refresh',\n    details: 'Refresh your card content using refresh action.',\n  },\n  {\n    action: 'Remove Card',\n    icon: 'tabler-x',\n    details: 'Remove card from page using remove card action',\n  },\n]\n\nconst refetchData = hideOverlay => {\n  setTimeout(hideOverlay, 3000)\n}\n</script>\n\n<template>\n  <VRow>\n    <VCol cols=\"12\">\n      <!-- ðŸ‘‰ Main Card  -->\n      <AppCardActions\n        title=\"Cards Actions\"\n        @refresh=\"refetchData\"\n      >\n        <VCardText>\n          <VTable>\n            <thead>\n              <tr>\n                <th scope=\"col\">\n                  ACTION\n                </th>\n                <th scope=\"col\">\n                  ICON\n                </th>\n                <th scope=\"col\">\n                  DETAILS\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr\n                v-for=\"data in tableData\"\n                :key=\"data.icon\"\n              >\n                <td>\n                  {{ data.action }}\n                </td>\n                <td>\n                  <VIcon\n                    size=\"20\"\n                    :icon=\"data.icon\"\n                  />\n                </td>\n                <td>\n                  {{ data.details }}\n                </td>\n              </tr>\n            </tbody>\n          </VTable>\n        </VCardText>\n      </AppCardActions>\n    </VCol>\n\n    <VCol\n      cols=\"12\"\n      md=\"6\"\n    >\n      <!-- ðŸ‘‰ Collapsible -->\n      <AppCardActions\n        action-collapsed\n        title=\"Collapsible\"\n      >\n        <VCardText>\n          <p>You can specifically add collapsible action using <code>actionCollapse</code> prop</p>\n          <span>Click on <VIcon\n            size=\"20\"\n            icon=\"tabler-chevron-up\"\n          /> icon to see it in action</span>\n        </VCardText>\n      </AppCardActions>\n    </VCol>\n\n    <VCol\n      cols=\"12\"\n      md=\"6\"\n    >\n      <!-- ðŸ‘‰ Refresh Content -->\n      <AppCardActions\n        title=\"Refresh Content\"\n        action-refresh\n        @refresh=\"refetchData\"\n      >\n        <VCardText>\n          <p>You can specifically add refresh action using <code>actionRefresh</code> prop</p>\n          <span>Click on <VIcon\n            size=\"20\"\n            icon=\"tabler-refresh\"\n          /> icon to see it in action</span>\n        </VCardText>\n      </AppCardActions>\n    </VCol>\n\n    <VCol\n      cols=\"12\"\n      md=\"6\"\n    >\n      <!-- ðŸ‘‰ Remove Card -->\n      <AppCardActions\n        title=\"Remove Card\"\n        action-remove\n      >\n        <VCardText>\n          <p>You can specifically add remove action using <code>actionRemove</code> prop</p>\n          <span>Click on <VIcon\n            size=\"20\"\n            icon=\"tabler-x\"\n          /> icon to see it in action</span>\n        </VCardText>\n      </AppCardActions>\n    </VCol>\n\n    <VCol\n      cols=\"12\"\n      md=\"6\"\n    >\n      <!-- ðŸ‘‰ Slots -->\n      <AppCardActions\n        title=\"Slots\"\n        @refresh=\"refetchData\"\n      >\n        <template #before-actions>\n          <VChip\n            class=\"me-3\"\n            color=\"primary\"\n            size=\"small\"\n          >\n            3 Updates\n          </VChip>\n        </template>\n\n        <VCardText>\n          <p><code>app-card-actions</code> also provides <code>before-actions</code> and <code>after-actions</code> slot</p>\n          <span>You can find more details in our documentation</span>\n        </VCardText>\n      </AppCardActions>\n    </VCol>\n  </VRow>\n</template>\n"],"names":["isContentCollapsed","ref","props","isCardRemoved","isOverlayVisible","hideOverlay","triggerCollapse","emit","triggerRefresh","triggeredRemove","tableData","refetchData"],"mappings":"8kCA0CAA,EAAAC,EAAAC,EAAA,SAAA,EACAC,EAAAF,EAAA,EAAA,EACAG,EAAAH,EAAA,EAAA,EAGAI,EAAA,IAAA,CACAD,EAAA,MAAA,EACA,EAGAE,EAAA,IAAA,CACAN,EAAA,MAAA,CAAAA,EAAA,MACAO,EAAA,YAAAP,EAAA,KAAA,CACA,EAGAQ,EAAA,IAAA,CACAJ,EAAA,MAAA,GACAG,EAAA,UAAAF,CAAA,CACA,EAGAI,EAAA,IAAA,CACAN,EAAA,MAAA,GACAI,EAAA,OAAA,CACA,y+DClEA,MAAAG,EAAA,CACA,CACA,OAAA,WACA,KAAA,oBACA,QAAA,8CACA,EACA,CACA,OAAA,kBACA,KAAA,iBACA,QAAA,iDACA,EACA,CACA,OAAA,cACA,KAAA,WACA,QAAA,gDACA,CACA,EAEAC,EAAAN,GAAA,CACA,WAAAA,EAAA,GAAA,CACA"}