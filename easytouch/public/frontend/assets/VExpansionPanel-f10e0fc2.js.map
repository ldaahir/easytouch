{"version":3,"file":"VExpansionPanel-f10e0fc2.js","sources":["../../../../frontend/node_modules/vuetify/lib/components/VExpansionPanel/VExpansionPanels.mjs","../../../../frontend/node_modules/vuetify/lib/components/VExpansionPanel/VExpansionPanelTitle.mjs","../../../../frontend/node_modules/vuetify/lib/components/VExpansionPanel/VExpansionPanelText.mjs","../../../../frontend/node_modules/vuetify/lib/components/VExpansionPanel/VExpansionPanel.mjs"],"sourcesContent":["import { createVNode as _createVNode, resolveDirective as _resolveDirective } from \"vue\";\n// Styles\nimport \"./VExpansionPanel.css\";\n\n// Composables\nimport { makeComponentProps } from \"../../composables/component.mjs\";\nimport { makeGroupProps, useGroup } from \"../../composables/group.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\";\nimport { provideDefaults } from \"../../composables/defaults.mjs\"; // Utilities\nimport { computed, toRef } from 'vue';\nimport { genericComponent, useRender } from \"../../util/index.mjs\"; // Types\nexport const VExpansionPanelSymbol = Symbol.for('vuetify:v-expansion-panel');\nconst allowedVariants = ['default', 'accordion', 'inset', 'popout'];\nexport const VExpansionPanels = genericComponent()({\n  name: 'VExpansionPanels',\n  props: {\n    color: String,\n    variant: {\n      type: String,\n      default: 'default',\n      validator: v => allowedVariants.includes(v)\n    },\n    readonly: Boolean,\n    ...makeComponentProps(),\n    ...makeGroupProps(),\n    ...makeTagProps(),\n    ...makeThemeProps()\n  },\n  emits: {\n    'update:modelValue': val => true\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    useGroup(props, VExpansionPanelSymbol);\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const variantClass = computed(() => props.variant && `v-expansion-panels--variant-${props.variant}`);\n    provideDefaults({\n      VExpansionPanel: {\n        color: toRef(props, 'color')\n      },\n      VExpansionPanelTitle: {\n        readonly: toRef(props, 'readonly')\n      }\n    });\n    useRender(() => _createVNode(props.tag, {\n      \"class\": ['v-expansion-panels', themeClasses.value, variantClass.value, props.class],\n      \"style\": props.style\n    }, slots));\n    return {};\n  }\n});\n//# sourceMappingURL=VExpansionPanels.mjs.map","import { withDirectives as _withDirectives, resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\";\n// Components\nimport { VExpansionPanelSymbol } from \"./VExpansionPanels.mjs\";\nimport { VIcon } from \"../VIcon/index.mjs\"; // Directives\nimport { Ripple } from \"../../directives/ripple/index.mjs\"; // Composables\nimport { makeComponentProps } from \"../../composables/component.mjs\";\nimport { IconValue } from \"../../composables/icons.mjs\";\nimport { useBackgroundColor } from \"../../composables/color.mjs\"; // Utilities\nimport { computed, inject } from 'vue';\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.mjs\";\nexport const makeVExpansionPanelTitleProps = propsFactory({\n  color: String,\n  expandIcon: {\n    type: IconValue,\n    default: '$expand'\n  },\n  collapseIcon: {\n    type: IconValue,\n    default: '$collapse'\n  },\n  hideActions: Boolean,\n  ripple: {\n    type: [Boolean, Object],\n    default: false\n  },\n  readonly: Boolean\n}, 'v-expansion-panel-title');\nexport const VExpansionPanelTitle = genericComponent()({\n  name: 'VExpansionPanelTitle',\n  directives: {\n    Ripple\n  },\n  props: {\n    ...makeComponentProps(),\n    ...makeVExpansionPanelTitleProps()\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const expansionPanel = inject(VExpansionPanelSymbol);\n    if (!expansionPanel) throw new Error('[Vuetify] v-expansion-panel-title needs to be placed inside v-expansion-panel');\n    const {\n      backgroundColorClasses,\n      backgroundColorStyles\n    } = useBackgroundColor(props, 'color');\n    const slotProps = computed(() => ({\n      collapseIcon: props.collapseIcon,\n      disabled: expansionPanel.disabled.value,\n      expanded: expansionPanel.isSelected.value,\n      expandIcon: props.expandIcon,\n      readonly: props.readonly\n    }));\n    useRender(() => _withDirectives(_createVNode(\"button\", {\n      \"class\": ['v-expansion-panel-title', {\n        'v-expansion-panel-title--active': expansionPanel.isSelected.value\n      }, backgroundColorClasses.value, props.class],\n      \"style\": [backgroundColorStyles.value, props.style],\n      \"type\": \"button\",\n      \"tabindex\": expansionPanel.disabled.value ? -1 : undefined,\n      \"disabled\": expansionPanel.disabled.value,\n      \"aria-expanded\": expansionPanel.isSelected.value,\n      \"onClick\": !props.readonly ? expansionPanel.toggle : undefined\n    }, [_createVNode(\"span\", {\n      \"class\": \"v-expansion-panel-title__overlay\"\n    }, null), slots.default?.(slotProps.value), !props.hideActions && _createVNode(\"span\", {\n      \"class\": \"v-expansion-panel-title__icon\"\n    }, [slots.actions ? slots.actions(slotProps.value) : _createVNode(VIcon, {\n      \"icon\": expansionPanel.isSelected.value ? props.collapseIcon : props.expandIcon\n    }, null)])]), [[_resolveDirective(\"ripple\"), props.ripple]]));\n    return {};\n  }\n});\n//# sourceMappingURL=VExpansionPanelTitle.mjs.map","import { withDirectives as _withDirectives, vShow as _vShow, createVNode as _createVNode } from \"vue\";\n// Components\nimport { VExpandTransition } from \"../transitions/index.mjs\";\nimport { VExpansionPanelSymbol } from \"./VExpansionPanels.mjs\"; // Composables\nimport { makeComponentProps } from \"../../composables/component.mjs\";\nimport { makeLazyProps, useLazy } from \"../../composables/lazy.mjs\"; // Utilities\nimport { inject } from 'vue';\nimport { genericComponent, useRender } from \"../../util/index.mjs\";\nexport const VExpansionPanelText = genericComponent()({\n  name: 'VExpansionPanelText',\n  props: {\n    ...makeComponentProps(),\n    ...makeLazyProps()\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const expansionPanel = inject(VExpansionPanelSymbol);\n    if (!expansionPanel) throw new Error('[Vuetify] v-expansion-panel-text needs to be placed inside v-expansion-panel');\n    const {\n      hasContent,\n      onAfterLeave\n    } = useLazy(props, expansionPanel.isSelected);\n    useRender(() => _createVNode(VExpandTransition, {\n      \"onAfterLeave\": onAfterLeave\n    }, {\n      default: () => [_withDirectives(_createVNode(\"div\", {\n        \"class\": ['v-expansion-panel-text', props.class],\n        \"style\": props.style\n      }, [slots.default && hasContent.value && _createVNode(\"div\", {\n        \"class\": \"v-expansion-panel-text__wrapper\"\n      }, [slots.default?.()])]), [[_vShow, expansionPanel.isSelected.value]])]\n    }));\n    return {};\n  }\n});\n//# sourceMappingURL=VExpansionPanelText.mjs.map","import { createVNode as _createVNode } from \"vue\";\n// Components\nimport { makeVExpansionPanelTitleProps, VExpansionPanelTitle } from \"./VExpansionPanelTitle.mjs\";\nimport { VExpansionPanelSymbol } from \"./VExpansionPanels.mjs\";\nimport { VExpansionPanelText } from \"./VExpansionPanelText.mjs\"; // Composables\nimport { makeComponentProps } from \"../../composables/component.mjs\";\nimport { makeElevationProps, useElevation } from \"../../composables/elevation.mjs\";\nimport { makeGroupItemProps, useGroupItem } from \"../../composables/group.mjs\";\nimport { makeLazyProps } from \"../../composables/lazy.mjs\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { useBackgroundColor } from \"../../composables/color.mjs\"; // Utilities\nimport { computed, provide } from 'vue';\nimport { genericComponent, useRender } from \"../../util/index.mjs\";\nexport const VExpansionPanel = genericComponent()({\n  name: 'VExpansionPanel',\n  props: {\n    title: String,\n    text: String,\n    bgColor: String,\n    ...makeComponentProps(),\n    ...makeElevationProps(),\n    ...makeGroupItemProps(),\n    ...makeLazyProps(),\n    ...makeRoundedProps(),\n    ...makeTagProps(),\n    ...makeVExpansionPanelTitleProps()\n  },\n  emits: {\n    'group:selected': val => true\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const groupItem = useGroupItem(props, VExpansionPanelSymbol);\n    const {\n      backgroundColorClasses,\n      backgroundColorStyles\n    } = useBackgroundColor(props, 'bgColor');\n    const {\n      elevationClasses\n    } = useElevation(props);\n    const {\n      roundedClasses\n    } = useRounded(props);\n    const isDisabled = computed(() => groupItem?.disabled.value || props.disabled);\n    const selectedIndices = computed(() => groupItem.group.items.value.reduce((arr, item, index) => {\n      if (groupItem.group.selected.value.includes(item.id)) arr.push(index);\n      return arr;\n    }, []));\n    const isBeforeSelected = computed(() => {\n      const index = groupItem.group.items.value.findIndex(item => item.id === groupItem.id);\n      return !groupItem.isSelected.value && selectedIndices.value.some(selectedIndex => selectedIndex - index === 1);\n    });\n    const isAfterSelected = computed(() => {\n      const index = groupItem.group.items.value.findIndex(item => item.id === groupItem.id);\n      return !groupItem.isSelected.value && selectedIndices.value.some(selectedIndex => selectedIndex - index === -1);\n    });\n    provide(VExpansionPanelSymbol, groupItem);\n    useRender(() => {\n      const hasText = !!(slots.text || props.text);\n      const hasTitle = !!(slots.title || props.title);\n      return _createVNode(props.tag, {\n        \"class\": ['v-expansion-panel', {\n          'v-expansion-panel--active': groupItem.isSelected.value,\n          'v-expansion-panel--before-active': isBeforeSelected.value,\n          'v-expansion-panel--after-active': isAfterSelected.value,\n          'v-expansion-panel--disabled': isDisabled.value\n        }, roundedClasses.value, backgroundColorClasses.value, props.class],\n        \"style\": [backgroundColorStyles.value, props.style],\n        \"aria-expanded\": groupItem.isSelected.value\n      }, {\n        default: () => [_createVNode(\"div\", {\n          \"class\": ['v-expansion-panel__shadow', ...elevationClasses.value]\n        }, null), hasTitle && _createVNode(VExpansionPanelTitle, {\n          \"key\": \"title\",\n          \"collapseIcon\": props.collapseIcon,\n          \"color\": props.color,\n          \"expandIcon\": props.expandIcon,\n          \"hideActions\": props.hideActions,\n          \"ripple\": props.ripple\n        }, {\n          default: () => [slots.title ? slots.title() : props.title]\n        }), hasText && _createVNode(VExpansionPanelText, {\n          \"key\": \"text\",\n          \"eager\": props.eager\n        }, {\n          default: () => [slots.text ? slots.text() : props.text]\n        }), slots.default?.()]\n      });\n    });\n    return {};\n  }\n});\n//# sourceMappingURL=VExpansionPanel.mjs.map"],"names":["VExpansionPanelSymbol","allowedVariants","VExpansionPanels","genericComponent","__spreadValues","v","makeComponentProps","makeGroupProps","makeTagProps","makeThemeProps","val","props","_ref","slots","useGroup","themeClasses","provideTheme","variantClass","computed","provideDefaults","toRef","useRender","_createVNode","makeVExpansionPanelTitleProps","propsFactory","IconValue","VExpansionPanelTitle","Ripple","expansionPanel","inject","backgroundColorClasses","backgroundColorStyles","useBackgroundColor","slotProps","_withDirectives","_a","VIcon","_resolveDirective","VExpansionPanelText","makeLazyProps","hasContent","onAfterLeave","useLazy","VExpandTransition","_vShow","VExpansionPanel","makeElevationProps","makeGroupItemProps","makeRoundedProps","groupItem","useGroupItem","elevationClasses","useElevation","roundedClasses","useRounded","isDisabled","selectedIndices","arr","item","index","isBeforeSelected","selectedIndex","isAfterSelected","provide","hasText","hasTitle"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}