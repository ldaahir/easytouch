{"version":3,"file":"NavBarNotifications-41c2b618.js","sources":["../../../../frontend/src/@core/components/Notifications.vue","../../../../frontend/src/assets/images/svg/paypal.svg","../../../../frontend/src/layouts/components/NavBarNotifications.vue"],"sourcesContent":["<script setup>\nimport { PerfectScrollbar } from 'vue3-perfect-scrollbar'\nimport { avatarText } from '@core/utils/formatters'\n\nconst props = defineProps({\n  notifications: {\n    type: Array,\n    required: true,\n  },\n  badgeProps: {\n    type: null,\n    required: false,\n    default: undefined,\n  },\n  location: {\n    type: null,\n    required: false,\n    default: 'bottom end',\n  },\n})\n\nconst emit = defineEmits([\n  'read',\n  'unread',\n  'remove',\n  'click:notification',\n])\n\nconst isAllMarkRead = computed(() => props.notifications.some(item => item.isSeen === false))\n\nconst markAllReadOrUnread = () => {\n  const allNotificationsIds = props.notifications.map(item => item.id)\n  if (!isAllMarkRead.value)\n    emit('unread', allNotificationsIds)\n  else\n    emit('read', allNotificationsIds)\n}\n\nconst totalUnseenNotifications = computed(() => {\n  return props.notifications.filter(item => item.isSeen === false).length\n})\n</script>\n\n<template>\n  <IconBtn id=\"notification-btn\">\n    <VBadge\n      v-bind=\"props.badgeProps\"\n      :model-value=\"props.notifications.some(n => !n.isSeen)\"\n      color=\"error\"\n      :content=\"totalUnseenNotifications\"\n      class=\"notification-badge\"\n    >\n      <VIcon\n        size=\"26\"\n        icon=\"tabler-bell\"\n      />\n    </VBadge>\n\n    <VMenu\n      activator=\"parent\"\n      width=\"380px\"\n      :location=\"props.location\"\n      offset=\"14px\"\n      :close-on-content-click=\"false\"\n    >\n      <VCard class=\"d-flex flex-column\">\n        <!-- 👉 Header -->\n        <VCardItem class=\"notification-section\">\n          <VCardTitle class=\"text-lg\">\n            Notifications\n          </VCardTitle>\n\n          <template #append>\n            <IconBtn\n              v-show=\"props.notifications.length\"\n              @click=\"markAllReadOrUnread\"\n            >\n              <VIcon :icon=\"!isAllMarkRead ? 'tabler-mail' : 'tabler-mail-opened' \" />\n\n              <VTooltip\n                activator=\"parent\"\n                location=\"start\"\n              >\n                {{ !isAllMarkRead ? 'Mark all as unread' : 'Mark all as read' }}\n              </VTooltip>\n            </IconBtn>\n          </template>\n        </VCardItem>\n\n        <VDivider />\n\n        <!-- 👉 Notifications list -->\n        <PerfectScrollbar\n          :options=\"{ wheelPropagation: false }\"\n          style=\"max-block-size: 23.75rem;\"\n        >\n          <VList class=\"notification-list rounded-0 py-0\">\n            <template\n              v-for=\"(notification, index) in props.notifications\"\n              :key=\"notification.title\"\n            >\n              <VDivider v-if=\"index > 0\" />\n              <VListItem\n                link\n                lines=\"one\"\n                min-height=\"66px\"\n                class=\"list-item-hover-class\"\n                @click=\"$emit('click:notification', notification)\"\n              >\n                <!-- Slot: Prepend -->\n                <!-- Handles Avatar: Image, Icon, Text -->\n                <template #prepend>\n                  <VListItemAction start>\n                    <VAvatar\n                      size=\"40\"\n                      :color=\"notification.color && notification.icon ? notification.color : undefined\"\n                      :image=\"notification.img || undefined\"\n                      :icon=\"notification.icon || undefined\"\n                      :variant=\"notification.img ? undefined : 'tonal' \"\n                    >\n                      <span v-if=\"notification.text\">{{ avatarText(notification.text) }}</span>\n                    </VAvatar>\n                  </VListItemAction>\n                </template>\n\n                <VListItemTitle>{{ notification.title }}</VListItemTitle>\n                <VListItemSubtitle>{{ notification.subtitle }}</VListItemSubtitle>\n                <span class=\"text-xs text-disabled\">{{ notification.time }}</span>\n\n                <!-- Slot: Append -->\n                <template #append>\n                  <div class=\"d-flex flex-column align-center gap-4\">\n                    <VBadge\n                      dot\n                      :color=\"!notification.isSeen ? 'primary' : '#a8aaae'\"\n                      :class=\"`${notification.isSeen ? 'visible-in-hover' : ''} ms-1`\"\n                      @click.stop=\"$emit(notification.isSeen ? 'unread' : 'read', [notification.id])\"\n                    />\n\n                    <div style=\"block-size: 28px; inline-size: 28px;\">\n                      <IconBtn\n                        size=\"small\"\n                        class=\"visible-in-hover\"\n                        @click=\"$emit('remove', notification.id)\"\n                      >\n                        <VIcon\n                          size=\"20\"\n                          icon=\"tabler-x\"\n                        />\n                      </IconBtn>\n                    </div>\n                  </div>\n                </template>\n              </VListItem>\n            </template>\n\n            <VListItem\n              v-show=\"!props.notifications.length\"\n              class=\"text-center text-medium-emphasis\"\n              style=\"block-size: 56px;\"\n            >\n              <VListItemTitle>No Notification Found!</VListItemTitle>\n            </VListItem>\n          </VList>\n        </PerfectScrollbar>\n\n        <VDivider />\n\n        <!-- 👉 Footer -->\n        <VCardActions\n          v-show=\"props.notifications.length\"\n          class=\"notification-footer\"\n        >\n          <VBtn block>\n            View All Notifications\n          </VBtn>\n        </VCardActions>\n      </VCard>\n    </VMenu>\n  </IconBtn>\n</template>\n\n<style lang=\"scss\">\n.notification-section {\n  padding: 14px !important;\n}\n\n.notification-footer {\n  padding: 6px !important;\n}\n\n.list-item-hover-class {\n  .visible-in-hover {\n    display: none;\n  }\n\n  &:hover {\n    .visible-in-hover {\n      display: block;\n    }\n  }\n}\n\n.notification-list.v-list {\n  .v-list-item {\n    border-radius: 0 !important;\n    margin: 0 !important;\n  }\n}\n\n// Badge Style Override for Notification Badge\n.notification-badge {\n  .v-badge__badge {\n    /* stylelint-disable-next-line liberty/use-logical-spec */\n    min-width: 18px;\n    padding: 0;\n    block-size: 18px;\n  }\n}\n</style>\n","export default \"__VITE_ASSET__955f072d__\"","<script setup>\nimport avatar3 from '@images/avatars/avatar-3.png'\nimport avatar4 from '@images/avatars/avatar-4.png'\nimport avatar5 from '@images/avatars/avatar-5.png'\nimport paypal from '@images/svg/paypal.svg'\n\nconst notifications = ref([\n  {\n    id: 1,\n    img: avatar4,\n    title: 'Congratulation Flora! 🎉',\n    subtitle: 'Won the monthly best seller badge',\n    time: 'Today',\n    isSeen: true,\n  },\n  {\n    id: 2,\n    text: 'Tom Holland',\n    title: 'New user registered.',\n    subtitle: '5 hours ago',\n    time: 'Yesterday',\n    isSeen: false,\n  },\n  {\n    id: 3,\n    img: avatar5,\n    title: 'New message received 👋🏻',\n    subtitle: 'You have 10 unread messages',\n    time: '11 Aug',\n    isSeen: true,\n  },\n  {\n    id: 4,\n    img: paypal,\n    title: 'Paypal',\n    subtitle: 'Received Payment',\n    time: '25 May',\n    isSeen: false,\n    color: 'error',\n  },\n  {\n    id: 5,\n    img: avatar3,\n    title: 'Received Order 📦',\n    subtitle: 'New order received from john',\n    time: '19 Mar',\n    isSeen: true,\n  },\n])\n\nconst removeNotification = notificationId => {\n  notifications.value.forEach((item, index) => {\n    if (notificationId === item.id)\n      notifications.value.splice(index, 1)\n  })\n}\n\nconst markRead = notificationId => {\n  notifications.value.forEach(item => {\n    notificationId.forEach(id => {\n      if (id === item.id)\n        item.isSeen = true\n    })\n  })\n}\n\nconst markUnRead = notificationId => {\n  notifications.value.forEach(item => {\n    notificationId.forEach(id => {\n      if (id === item.id)\n        item.isSeen = false\n    })\n  })\n}\n\nconst handleNotificationClick = notification => {\n  if (!notification.isSeen)\n    markRead([notification.id])\n}\n</script>\n\n<template>\n  <Notifications\n    :notifications=\"notifications\"\n    @remove=\"removeNotification\"\n    @read=\"markRead\"\n    @unread=\"markUnRead\"\n    @click:notification=\"handleNotificationClick\"\n  />\n</template>\n"],"names":["isAllMarkRead","computed","props","item","markAllReadOrUnread","allNotificationsIds","emit","totalUnseenNotifications","paypal","notifications","ref","avatar4","avatar5","avatar3","removeNotification","notificationId","index","markRead","id","markUnRead","handleNotificationClick","notification"],"mappings":"81CA4BAA,EAAAC,EAAA,IAAAC,EAAA,cAAA,KAAAC,GAAAA,EAAA,SAAA,EAAA,CAAA,EAEAC,EAAA,IAAA,CACA,MAAAC,EAAAH,EAAA,cAAA,IAAAC,GAAAA,EAAA,EAAA,EACAH,EAAA,MAGAM,EAAA,OAAAD,CAAA,EAFAC,EAAA,SAAAD,CAAA,CAGA,EAEAE,EAAAN,EAAA,IACAC,EAAA,cAAA,OAAAC,GAAAA,EAAA,SAAA,EAAA,EAAA,MACA,8/ECxCeK,GAAA,kGCMf,MAAAC,EAAAC,EAAA,CACA,CACA,GAAA,EACA,IAAAC,EACA,MAAA,2BACA,SAAA,oCACA,KAAA,QACA,OAAA,EACA,EACA,CACA,GAAA,EACA,KAAA,cACA,MAAA,uBACA,SAAA,cACA,KAAA,YACA,OAAA,EACA,EACA,CACA,GAAA,EACA,IAAAC,EACA,MAAA,4BACA,SAAA,8BACA,KAAA,SACA,OAAA,EACA,EACA,CACA,GAAA,EACA,IAAAJ,GACA,MAAA,SACA,SAAA,mBACA,KAAA,SACA,OAAA,GACA,MAAA,OACA,EACA,CACA,GAAA,EACA,IAAAK,EACA,MAAA,oBACA,SAAA,+BACA,KAAA,SACA,OAAA,EACA,CACA,CAAA,EAEAC,EAAAC,GAAA,CACAN,EAAA,MAAA,QAAA,CAAAN,EAAAa,IAAA,CACAD,IAAAZ,EAAA,IACAM,EAAA,MAAA,OAAAO,EAAA,CAAA,CACA,CAAA,CACA,EAEAC,EAAAF,GAAA,CACAN,EAAA,MAAA,QAAAN,GAAA,CACAY,EAAA,QAAAG,GAAA,CACAA,IAAAf,EAAA,KACAA,EAAA,OAAA,GACA,CAAA,CACA,CAAA,CACA,EAEAgB,EAAAJ,GAAA,CACAN,EAAA,MAAA,QAAAN,GAAA,CACAY,EAAA,QAAAG,GAAA,CACAA,IAAAf,EAAA,KACAA,EAAA,OAAA,GACA,CAAA,CACA,CAAA,CACA,EAEAiB,EAAAC,GAAA,CACAA,EAAA,QACAJ,EAAA,CAAAI,EAAA,EAAA,CAAA,CACA"}