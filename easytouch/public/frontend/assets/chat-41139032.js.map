{"version":3,"file":"chat-41139032.js","sources":["../../../../frontend/src/views/apps/chat/useChat.js","../../../../frontend/src/views/apps/chat/useChatStore.js","../../../../frontend/src/views/apps/chat/ChatActiveChatUserProfileSidebarContent.vue","../../../../frontend/src/views/apps/chat/ChatContact.vue","../../../../frontend/src/views/apps/chat/ChatLeftSidebarContent.vue","../../../../frontend/src/views/apps/chat/ChatLog.vue","../../../../frontend/src/views/apps/chat/ChatUserProfileSidebarContent.vue","../../../../frontend/src/pages/apps/chat.vue"],"sourcesContent":["export const useChat = () => {\n  const resolveAvatarBadgeVariant = status => {\n    if (status === 'online')\n      return 'success'\n    if (status === 'busy')\n      return 'error'\n    if (status === 'away')\n      return 'warning'\n    \n    return 'secondary'\n  }\n\n  return {\n    resolveAvatarBadgeVariant,\n  }\n}\n","import axios from '@axios'\n\nexport const useChatStore = defineStore('chat', {\n  // ℹ️ arrow function recommended for full type inference\n  state: () => ({\n    contacts: [],\n    chatsContacts: [],\n    profileUser: undefined,\n    activeChat: null,\n  }),\n  actions: {\n    async fetchChatsAndContacts(q) {\n      const { data } = await axios.get('/apps/chat/chats-and-contacts', {\n        params: { q },\n      })\n\n      const { chatsContacts, contacts, profileUser } = data\n\n      this.chatsContacts = chatsContacts\n      this.contacts = contacts\n      this.profileUser = profileUser\n    },\n    async getChat(userId) {\n      const { data } = await axios.get(`/apps/chat/chats/${userId}`)\n\n      this.activeChat = data\n    },\n    async sendMsg(message) {\n      const senderId = this.profileUser?.id\n      const { data } = await axios.post(`/apps/chat/chats/${this.activeChat?.contact.id}`, { message, senderId })\n      const { msg, chat } = data\n\n      // ? If it's not undefined => New chat is created (Contact is not in list of chats)\n      if (chat !== undefined) {\n        const activeChat = this.activeChat\n\n        this.chatsContacts.push({\n          ...activeChat.contact,\n          chat: {\n            id: chat.id,\n            lastMessage: [],\n            unseenMsgs: 0,\n            messages: [msg],\n          },\n        })\n        if (this.activeChat) {\n          this.activeChat.chat = {\n            id: chat.id,\n            messages: [msg],\n            unseenMsgs: 0,\n            userId: this.activeChat?.contact.id,\n          }\n        }\n      }\n      else {\n        this.activeChat?.chat?.messages.push(msg)\n      }\n\n      // Set Last Message for active contact\n      const contact = this.chatsContacts.find(c => {\n        if (this.activeChat)\n          return c.id === this.activeChat.contact.id\n        \n        return false\n      })\n\n      contact.chat.lastMessage = msg\n    },\n  },\n})\n","<script setup>\nimport { PerfectScrollbar } from 'vue3-perfect-scrollbar'\nimport { useChat } from './useChat'\nimport { useChatStore } from '@/views/apps/chat/useChatStore'\nimport { avatarText } from '@core/utils/formatters'\n\nconst emit = defineEmits(['close'])\n\nconst store = useChatStore()\nconst { resolveAvatarBadgeVariant } = useChat()\n</script>\n\n<template>\n  <template v-if=\"store.activeChat\">\n    <!-- Close Button -->\n    <div\n      class=\"pt-2 me-2\"\n      :class=\"$vuetify.locale.isRtl ? 'text-left' : 'text-right'\"\n    >\n      <IconBtn @click=\"$emit('close')\">\n        <VIcon\n          icon=\"tabler-x\"\n          color=\"disabled\"\n          class=\"text-medium-emphasis\"\n        />\n      </IconBtn>\n    </div>\n\n    <!-- User Avatar + Name + Role -->\n    <div class=\"text-center px-6\">\n      <VBadge\n        location=\"bottom right\"\n        offset-x=\"7\"\n        offset-y=\"4\"\n        bordered\n        :color=\"resolveAvatarBadgeVariant(store.activeChat.contact.status)\"\n        class=\"chat-user-profile-badge mb-5\"\n      >\n        <VAvatar\n          size=\"80\"\n          :variant=\"!store.activeChat.contact.avatar ? 'tonal' : undefined\"\n          :color=\"!store.activeChat.contact.avatar ? resolveAvatarBadgeVariant(store.activeChat.contact.status) : undefined\"\n        >\n          <VImg\n            v-if=\"store.activeChat.contact.avatar\"\n            :src=\"store.activeChat.contact.avatar\"\n          />\n          <span\n            v-else\n            class=\"text-3xl\"\n          >{{ avatarText(store.activeChat.contact.fullName) }}</span>\n        </VAvatar>\n      </VBadge>\n      <h5 class=\"text-h5\">\n        {{ store.activeChat.contact.fullName }}\n      </h5>\n      <p class=\"text-capitalize text-medium-emphasis\">\n        {{ store.activeChat.contact.role }}\n      </p>\n    </div>\n\n    <!-- User Data -->\n    <PerfectScrollbar\n      class=\"ps-chat-user-profile-sidebar-content text-medium-emphasis pb-5 px-5\"\n      :options=\"{ wheelPropagation: false }\"\n    >\n      <!-- About -->\n      <div class=\"my-8\">\n        <span class=\"text-sm text-disabled\">ABOUT</span>\n        <p class=\"mt-2\">\n          {{ store.activeChat.contact.about }}\n        </p>\n      </div>\n\n      <!-- Personal Information -->\n      <div class=\"mb-8\">\n        <span class=\"d-block text-sm text-disabled mb-3\">PERSONAL INFORMATION</span>\n        <div class=\"d-flex align-center\">\n          <VIcon\n            class=\"me-2\"\n            icon=\"tabler-mail\"\n            size=\"24\"\n          />\n          <span>lucifer@email.com</span>\n        </div>\n        <div class=\"d-flex align-center my-3\">\n          <VIcon\n            class=\"me-2\"\n            icon=\"tabler-phone-call\"\n            size=\"24\"\n          />\n          <span>+1(123) 456 - 7890</span>\n        </div>\n        <div class=\"d-flex align-center\">\n          <VIcon\n            class=\"me-2\"\n            icon=\"tabler-clock\"\n            size=\"24\"\n          />\n          <span>Mon - Fri 10AM - 8PM</span>\n        </div>\n      </div>\n\n      <!-- Options -->\n      <div>\n        <span class=\"d-block text-sm text-disabled mb-3\">OPTIONS</span>\n        <div class=\"d-flex align-center\">\n          <VIcon\n            class=\"me-2\"\n            icon=\"tabler-badge\"\n            size=\"24\"\n          />\n          <span>Add Tag</span>\n        </div>\n        <div class=\"d-flex align-center my-3\">\n          <VIcon\n            class=\"me-2\"\n            icon=\"tabler-star\"\n            size=\"24\"\n          />\n          <span>Important Contact</span>\n        </div>\n        <div class=\"d-flex align-center mb-3\">\n          <VIcon\n            class=\"me-2\"\n            icon=\"tabler-photo\"\n            size=\"24\"\n          />\n          <span>Shared Media</span>\n        </div>\n        <div class=\"d-flex align-center mb-3\">\n          <VIcon\n            class=\"me-2\"\n            icon=\"tabler-trash\"\n            size=\"24\"\n          />\n          <span>Delete Contact</span>\n        </div>\n        <div class=\"d-flex align-center\">\n          <VIcon\n            class=\"me-2 ms-1\"\n            size=\"18\"\n            icon=\"tabler-ban\"\n          />\n          <span>Block Contact</span>\n        </div>\n      </div>\n    </PerfectScrollbar>\n  </template>\n</template>\n","<script setup>\nimport { useChat } from '@/views/apps/chat/useChat'\nimport { useChatStore } from '@/views/apps/chat/useChatStore'\nimport {\n  avatarText,\n  formatDateToMonthShort,\n} from '@core/utils/formatters'\n\nconst props = defineProps({\n  isChatContact: {\n    type: Boolean,\n    required: false,\n    default: false,\n  },\n  user: {\n    type: null,\n    required: true,\n  },\n})\n\nconst store = useChatStore()\nconst { resolveAvatarBadgeVariant } = useChat()\n\nconst isChatContactActive = computed(() => {\n  const isActive = store.activeChat?.contact.id === props.user.id\n  if (!props.isChatContact)\n    return !store.activeChat?.chat && isActive\n  \n  return isActive\n})\n</script>\n\n<template>\n  <li\n    :key=\"store.chatsContacts.length\"\n    class=\"chat-contact cursor-pointer d-flex align-center\"\n    :class=\"{ 'chat-contact-active': isChatContactActive }\"\n  >\n    <VBadge\n      dot\n      location=\"bottom right\"\n      offset-x=\"3\"\n      offset-y=\"0\"\n      :color=\"resolveAvatarBadgeVariant(props.user.status)\"\n      bordered\n      :model-value=\"props.isChatContact\"\n    >\n      <VAvatar\n        size=\"38\"\n        :variant=\"!props.user.avatar ? 'tonal' : undefined\"\n        :color=\"!props.user.avatar ? resolveAvatarBadgeVariant(props.user.status) : undefined\"\n      >\n        <VImg\n          v-if=\"props.user.avatar\"\n          :src=\"props.user.avatar\"\n          alt=\"John Doe\"\n        />\n        <span v-else>{{ avatarText(user.fullName) }}</span>\n      </VAvatar>\n    </VBadge>\n    <div class=\"flex-grow-1 ms-4 overflow-hidden\">\n      <p class=\"text-h6 mb-0\">\n        {{ props.user.fullName }}\n      </p>\n      <p class=\"mb-0 text-truncate text-disabled\">\n        {{ props.isChatContact && 'chat' in props.user ? props.user.chat.lastMessage.message : props.user.about }}\n      </p>\n    </div>\n    <div\n      v-if=\"props.isChatContact && 'chat' in props.user\"\n      class=\"d-flex flex-column align-self-start\"\n    >\n      <span class=\"d-block text-sm text-disabled whitespace-no-wrap\">{{ formatDateToMonthShort(props.user.chat.lastMessage.time) }}</span>\n      <VBadge\n        v-if=\"props.user.chat.unseenMsgs\"\n        color=\"error\"\n        inline\n        :content=\"props.user.chat.unseenMsgs\"\n        class=\"ms-auto\"\n      />\n    </div>\n  </li>\n</template>\n\n<style lang=\"scss\">\n@use \"@styles/variables/_vuetify.scss\";\n@use \"@core/scss/base/mixins\";\n@use \"vuetify/lib/styles/tools/states\" as vuetifyStates;\n\n.chat-contact {\n  border-radius: vuetify.$border-radius-root;\n  padding-block: 8px;\n  padding-inline: 12px;\n\n  @include mixins.before-pseudo;\n  @include vuetifyStates.states($active: false);\n\n  &.chat-contact-active {\n    background: linear-gradient(72.47deg, rgb(var(--v-theme-primary)) 0%, #fff 300%);\n    color: #fff;\n\n    --v-theme-on-background: #fff;\n\n    .v-avatar {\n      background: #fff;\n      outline: 2px solid #fff;\n    }\n  }\n\n  .v-badge--bordered .v-badge__badge::after {\n    color: #fff;\n  }\n}\n</style>\n","<script setup>\nimport { PerfectScrollbar } from 'vue3-perfect-scrollbar'\nimport { useChat } from './useChat'\nimport ChatContact from '@/views/apps/chat/ChatContact.vue'\nimport { useChatStore } from '@/views/apps/chat/useChatStore'\n\nconst props = defineProps({\n  search: {\n    type: String,\n    required: true,\n  },\n  isDrawerOpen: {\n    type: Boolean,\n    required: true,\n  },\n})\n\nconst emit = defineEmits([\n  'openChatOfContact',\n  'showUserProfile',\n  'close',\n])\n\nconst { resolveAvatarBadgeVariant } = useChat()\nconst search = useVModel(props, 'search')\nconst store = useChatStore()\n</script>\n\n<template>\n  <!-- 👉 Chat list header -->\n  <div\n    v-if=\"store.profileUser\"\n    class=\"chat-list-header\"\n  >\n    <VBadge\n      dot\n      location=\"bottom right\"\n      offset-x=\"3\"\n      offset-y=\"3\"\n      :color=\"resolveAvatarBadgeVariant(store.profileUser.status)\"\n      bordered\n    >\n      <VAvatar\n        size=\"38\"\n        class=\"cursor-pointer\"\n        @click=\"$emit('showUserProfile')\"\n      >\n        <VImg\n          :src=\"store.profileUser.avatar\"\n          alt=\"John Doe\"\n        />\n      </VAvatar>\n    </VBadge>\n\n    <AppTextField\n      v-model=\"search\"\n      placeholder=\"Search...\"\n      class=\"ms-4 me-1 chat-list-search\"\n    >\n      <template #prepend-inner>\n        <VIcon\n          size=\"22\"\n          icon=\"tabler-search\"\n        />\n      </template>\n    </AppTextField>\n\n    <IconBtn\n      v-if=\"$vuetify.display.smAndDown\"\n      @click=\"$emit('close')\"\n    >\n      <VIcon\n        icon=\"tabler-x\"\n        class=\"text-medium-emphasis\"\n      />\n    </IconBtn>\n  </div>\n  <VDivider />\n\n  <PerfectScrollbar\n    tag=\"ul\"\n    class=\"d-flex flex-column gap-y-1 chat-contacts-list px-3 list-none\"\n    :options=\"{ wheelPropagation: false }\"\n  >\n    <li>\n      <span class=\"chat-contact-header d-block text-primary text-xl font-weight-medium\">Chats</span>\n    </li>\n\n    <ChatContact\n      v-for=\"contact in store.chatsContacts\"\n      :key=\"`chat-${contact.id}`\"\n      :user=\"contact\"\n      is-chat-contact\n      @click=\"$emit('openChatOfContact', contact.id)\"\n    />\n\n    <span\n      v-show=\"!store.chatsContacts.length\"\n      class=\"no-chat-items-text text-disabled\"\n    >No chats found</span>\n\n    <li>\n      <span class=\"chat-contact-header d-block text-primary text-xl font-weight-medium\">Contacts</span>\n    </li>\n\n    <ChatContact\n      v-for=\"contact in store.contacts\"\n      :key=\"`chat-${contact.id}`\"\n      :user=\"contact\"\n      @click=\"$emit('openChatOfContact', contact.id)\"\n    />\n\n    <span\n      v-show=\"!store.contacts.length\"\n      class=\"no-chat-items-text text-disabled\"\n    >No contacts found</span>\n  </PerfectScrollbar>\n</template>\n\n<style lang=\"scss\">\n.chat-contacts-list {\n  --chat-content-spacing-x: 16px;\n\n  padding-block-end: 0.75rem;\n\n  .chat-contact-header {\n    margin-block-end: 0.625rem;\n    margin-block-start: 1.25rem;\n  }\n\n  .chat-contact-header,\n  .no-chat-items-text {\n    margin-inline: var(--chat-content-spacing-x);\n  }\n}\n\n.chat-list-search {\n  .v-field--focused {\n    box-shadow: none !important;\n  }\n}\n</style>\n","<script setup>\nimport { useChatStore } from '@/views/apps/chat/useChatStore'\nimport { formatDate } from '@core/utils/formatters'\n\nconst store = useChatStore()\n\nconst contact = computed(() => ({\n  id: store.activeChat?.contact.id,\n  avatar: store.activeChat?.contact.avatar,\n}))\n\nconst resolveFeedbackIcon = feedback => {\n  if (feedback.isSeen)\n    return {\n      icon: 'tabler-checks',\n      color: 'success',\n    }\n  else if (feedback.isDelivered)\n    return {\n      icon: 'tabler-checks',\n      color: undefined,\n    }\n  else\n    return {\n      icon: 'tabler-check',\n      color: undefined,\n    }\n}\n\nconst msgGroups = computed(() => {\n  let messages = []\n  const _msgGroups = []\n  if (store.activeChat.chat) {\n    messages = store.activeChat.chat.messages\n    let msgSenderId = messages[0].senderId\n    let msgGroup = {\n      senderId: msgSenderId,\n      messages: [],\n    }\n    messages.forEach((msg, index) => {\n      if (msgSenderId === msg.senderId) {\n        msgGroup.messages.push({\n          message: msg.message,\n          time: msg.time,\n          feedback: msg.feedback,\n        })\n      } else {\n        msgSenderId = msg.senderId\n        _msgGroups.push(msgGroup)\n        msgGroup = {\n          senderId: msg.senderId,\n          messages: [{\n            message: msg.message,\n            time: msg.time,\n            feedback: msg.feedback,\n          }],\n        }\n      }\n      if (index === messages.length - 1)\n        _msgGroups.push(msgGroup)\n    })\n  }\n  \n  return _msgGroups\n})\n</script>\n\n<template>\n  <div class=\"chat-log pa-5\">\n    <div\n      v-for=\"(msgGrp, index) in msgGroups\"\n      :key=\"msgGrp.senderId + String(index)\"\n      class=\"chat-group d-flex align-start\"\n      :class=\"[{\n        'flex-row-reverse': msgGrp.senderId !== contact.id,\n        'mb-4': msgGroups.length - 1 !== index,\n      }]\"\n    >\n      <div\n        class=\"chat-avatar\"\n        :class=\"msgGrp.senderId !== contact.id ? 'ms-4' : 'me-4'\"\n      >\n        <VAvatar size=\"32\">\n          <VImg :src=\"msgGrp.senderId === contact.id ? contact.avatar : store.profileUser?.avatar\" />\n        </VAvatar>\n      </div>\n      <div\n        class=\"chat-body d-inline-flex flex-column\"\n        :class=\"msgGrp.senderId !== contact.id ? 'align-end' : 'align-start'\"\n      >\n        <p\n          v-for=\"(msgData, msgIndex) in msgGrp.messages\"\n          :key=\"msgData.time\"\n          class=\"chat-content py-2 px-4 elevation-1\"\n          style=\"background-color: rgb(var(--v-theme-surface));\"\n          :class=\"[\n            msgGrp.senderId === contact.id ? 'chat-left' : 'bg-primary text-white chat-right',\n            msgGrp.messages.length - 1 !== msgIndex ? 'mb-3' : 'mb-1',\n          ]\"\n        >\n          {{ msgData.message }}\n        </p>\n        <div :class=\"{ 'text-right': msgGrp.senderId !== contact.id }\">\n          <VIcon\n            v-if=\"msgGrp.senderId !== contact.id\"\n            size=\"18\"\n            :color=\"resolveFeedbackIcon(msgGrp.messages[msgGrp.messages.length - 1].feedback).color\"\n          >\n            {{ resolveFeedbackIcon(msgGrp.messages[msgGrp.messages.length - 1].feedback).icon }}\n          </VIcon>\n          <span class=\"text-sm ms-1 text-disabled\">{{ formatDate(msgGrp.messages[msgGrp.messages.length - 1].time, { hour: 'numeric', minute: 'numeric' }) }}</span>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style lang=scss>\n.chat-log {\n  .chat-content {\n    border-end-end-radius: 6px;\n    border-end-start-radius: 6px;\n\n    &.chat-left {\n      border-start-end-radius: 6px;\n    }\n\n    &.chat-right {\n      border-start-start-radius: 6px;\n    }\n  }\n}\n</style>\n","<script setup>\nimport { PerfectScrollbar } from 'vue3-perfect-scrollbar'\nimport { useChat } from './useChat'\nimport { useChatStore } from '@/views/apps/chat/useChatStore'\nimport { avatarText } from '@core/utils/formatters'\n\nconst emit = defineEmits(['close'])\n\n\n// composables\nconst store = useChatStore()\nconst { resolveAvatarBadgeVariant } = useChat()\n\nconst userStatusRadioOptions = [\n  {\n    title: 'Online',\n    value: 'online',\n    color: 'success',\n  },\n  {\n    title: 'Away',\n    value: 'away',\n    color: 'warning',\n  },\n  {\n    title: 'Do not disturb',\n    value: 'busy',\n    color: 'error',\n  },\n  {\n    title: 'Offline',\n    value: 'offline',\n    color: 'secondary',\n  },\n]\n</script>\n\n<template>\n  <template v-if=\"store.profileUser\">\n    <!-- Close Button -->\n    <div class=\"pt-2 me-2 text-end\">\n      <IconBtn @click=\"$emit('close')\">\n        <VIcon\n          class=\"text-medium-emphasis\"\n          color=\"disabled\"\n          icon=\"tabler-x\"\n        />\n      </IconBtn>\n    </div>\n\n    <!-- User Avatar + Name + Role -->\n    <div class=\"text-center px-6\">\n      <VBadge\n        location=\"bottom right\"\n        offset-x=\"7\"\n        offset-y=\"4\"\n        bordered\n        :color=\"resolveAvatarBadgeVariant(store.profileUser.status)\"\n        class=\"chat-user-profile-badge mb-3\"\n      >\n        <VAvatar\n          size=\"84\"\n          :variant=\"!store.profileUser.avatar ? 'tonal' : undefined\"\n          :color=\"!store.profileUser.avatar ? resolveAvatarBadgeVariant(store.profileUser.status) : undefined\"\n        >\n          <VImg\n            v-if=\"store.profileUser.avatar\"\n            :src=\"store.profileUser.avatar\"\n          />\n          <span\n            v-else\n            class=\"text-3xl\"\n          >{{ avatarText(store.profileUser.fullName) }}</span>\n        </VAvatar>\n      </VBadge>\n      <h5 class=\"text-h5\">\n        {{ store.profileUser.fullName }}\n      </h5>\n      <p class=\"text-capitalize text-medium-emphasis\">\n        {{ store.profileUser.role }}\n      </p>\n    </div>\n\n    <!-- User Data -->\n    <PerfectScrollbar\n      class=\"ps-chat-user-profile-sidebar-content pb-5 px-5\"\n      :options=\"{ wheelPropagation: false }\"\n    >\n      <!-- About -->\n      <div class=\"my-5 text-medium-emphasis\">\n        <span\n          for=\"textarea-user-about\"\n          class=\"text-sm text-disabled\"\n        >ABOUT</span>\n        <AppTextarea\n          id=\"textarea-user-about\"\n          v-model=\"store.profileUser.about\"\n          auto-grow\n          class=\"mt-1\"\n          rows=\"4\"\n        />\n      </div>\n\n      <!-- Status -->\n      <div class=\"mb-5\">\n        <span class=\"text-sm text-disabled\">STATUS</span>\n        <VRadioGroup\n          v-model=\"store.profileUser.status\"\n          class=\"mt-1\"\n        >\n          <VRadio\n            v-for=\"radioOption in userStatusRadioOptions\"\n            :key=\"radioOption.title\"\n            :label=\"radioOption.title\"\n            :value=\"radioOption.value\"\n            :color=\"radioOption.color\"\n          />\n        </VRadioGroup>\n      </div>\n\n      <!-- Settings -->\n      <div class=\"text-medium-emphasis\">\n        <span class=\"text-sm text-disabled\">SETTINGS</span>\n\n        <div class=\"d-flex align-center my-3\">\n          <VIcon\n            class=\"me-2\"\n            icon=\"tabler-message-dots\"\n            size=\"22\"\n          />\n          <span class=\"text-high-emphasis\">Two-step Verification</span>\n        </div>\n        <div class=\"d-flex align-center mb-3\">\n          <VIcon\n            class=\"me-2\"\n            icon=\"tabler-bell\"\n            size=\"22\"\n          />\n          <span class=\"text-high-emphasis\">Notification</span>\n        </div>\n        <div class=\"d-flex align-center mb-3\">\n          <VIcon\n            class=\"me-2\"\n            icon=\"tabler-user-plus\"\n            size=\"22\"\n          />\n          <span class=\"text-high-emphasis\">Invite Friends</span>\n        </div>\n        <div class=\"d-flex align-center\">\n          <VIcon\n            class=\"me-2\"\n            icon=\"tabler-trash\"\n            size=\"22\"\n          />\n          <span class=\"text-high-emphasis\">Delete Account</span>\n        </div>\n      </div>\n\n      <!-- Logout Button -->\n      <VBtn\n        color=\"primary\"\n        class=\"mt-11\"\n      >\n        Logout\n      </VBtn>\n    </PerfectScrollbar>\n  </template>\n</template>\n","<script setup>\nimport { PerfectScrollbar } from 'vue3-perfect-scrollbar'\nimport {\n  useDisplay,\n  useTheme,\n} from 'vuetify'\nimport vuetifyInitialThemes from '@/plugins/vuetify/theme'\nimport ChatActiveChatUserProfileSidebarContent from '@/views/apps/chat/ChatActiveChatUserProfileSidebarContent.vue'\nimport ChatLeftSidebarContent from '@/views/apps/chat/ChatLeftSidebarContent.vue'\nimport ChatLog from '@/views/apps/chat/ChatLog.vue'\nimport ChatUserProfileSidebarContent from '@/views/apps/chat/ChatUserProfileSidebarContent.vue'\nimport { useChat } from '@/views/apps/chat/useChat'\nimport { useChatStore } from '@/views/apps/chat/useChatStore'\nimport { useResponsiveLeftSidebar } from '@core/composable/useResponsiveSidebar'\nimport { avatarText } from '@core/utils/formatters'\n\nconst vuetifyDisplays = useDisplay()\nconst store = useChatStore()\nconst { isLeftSidebarOpen } = useResponsiveLeftSidebar(vuetifyDisplays.smAndDown)\nconst { resolveAvatarBadgeVariant } = useChat()\n\n// Perfect scrollbar\nconst chatLogPS = ref()\n\nconst scrollToBottomInChatLog = () => {\n  const scrollEl = chatLogPS.value.$el || chatLogPS.value\n\n  scrollEl.scrollTop = scrollEl.scrollHeight\n}\n\n// Search query\nconst q = ref('')\n\nwatch(q, val => store.fetchChatsAndContacts(val), { immediate: true })\n\n// Open Sidebar in smAndDown when \"start conversation\" is clicked\nconst startConversation = () => {\n  if (vuetifyDisplays.mdAndUp.value)\n    return\n  isLeftSidebarOpen.value = true\n}\n\n// Chat message\nconst msg = ref('')\n\nconst sendMessage = async () => {\n  if (!msg.value)\n    return\n  await store.sendMsg(msg.value)\n\n  // Reset message input\n  msg.value = ''\n\n  // Scroll to bottom\n  nextTick(() => {\n    scrollToBottomInChatLog()\n  })\n}\n\nconst openChatOfContact = async userId => {\n  await store.getChat(userId)\n\n  // Reset message input\n  msg.value = ''\n\n  // Set unseenMsgs to 0\n  const contact = store.chatsContacts.find(c => c.id === userId)\n  if (contact)\n    contact.chat.unseenMsgs = 0\n\n  // if smAndDown =>  Close Chat & Contacts left sidebar\n  if (vuetifyDisplays.smAndDown.value)\n    isLeftSidebarOpen.value = false\n\n  // Scroll to bottom\n  nextTick(() => {\n    scrollToBottomInChatLog()\n  })\n}\n\n// User profile sidebar\nconst isUserProfileSidebarOpen = ref(false)\n\n// Active chat user profile sidebar\nconst isActiveChatUserProfileSidebarOpen = ref(false)\n\n// file input\nconst refInputEl = ref()\n\nconst moreList = [\n  {\n    title: 'View Contact',\n    value: 'View Contact',\n  },\n  {\n    title: 'Mute Notifications',\n    value: 'Mute Notifications',\n  },\n  {\n    title: 'Block Contact',\n    value: 'Block Contact',\n  },\n  {\n    title: 'Clear Chat',\n    value: 'Clear Chat',\n  },\n  {\n    title: 'Report',\n    value: 'Report',\n  },\n]\n\nconst { name } = useTheme()\n\nconst chatContentContainerBg = computed(() => {\n  let color = 'transparent'\n  if (vuetifyInitialThemes)\n    color = vuetifyInitialThemes.themes?.[name.value].colors?.background\n  \n  return color\n})\n</script>\n\n<template>\n  <VLayout class=\"chat-app-layout\">\n    <!-- 👉 user profile sidebar -->\n    <VNavigationDrawer\n      v-model=\"isUserProfileSidebarOpen\"\n      temporary\n      touchless\n      absolute\n      class=\"user-profile-sidebar\"\n      location=\"start\"\n      width=\"370\"\n    >\n      <ChatUserProfileSidebarContent @close=\"isUserProfileSidebarOpen = false\" />\n    </VNavigationDrawer>\n\n    <!-- 👉 Active Chat sidebar -->\n    <VNavigationDrawer\n      v-model=\"isActiveChatUserProfileSidebarOpen\"\n      width=\"374\"\n      absolute\n      temporary\n      location=\"end\"\n      touchless\n      class=\"active-chat-user-profile-sidebar\"\n    >\n      <ChatActiveChatUserProfileSidebarContent @close=\"isActiveChatUserProfileSidebarOpen = false\" />\n    </VNavigationDrawer>\n\n    <!-- 👉 Left sidebar   -->\n    <VNavigationDrawer\n      v-model=\"isLeftSidebarOpen\"\n      absolute\n      touchless\n      location=\"start\"\n      width=\"370\"\n      :temporary=\"$vuetify.display.smAndDown\"\n      class=\"chat-list-sidebar\"\n      :permanent=\"$vuetify.display.mdAndUp\"\n    >\n      <ChatLeftSidebarContent\n        v-model:isDrawerOpen=\"isLeftSidebarOpen\"\n        v-model:search=\"q\"\n        @open-chat-of-contact=\"openChatOfContact\"\n        @show-user-profile=\"isUserProfileSidebarOpen = true\"\n        @close=\"isLeftSidebarOpen = false\"\n      />\n    </VNavigationDrawer>\n\n    <!-- 👉 Chat content -->\n    <VMain class=\"chat-content-container\">\n      <!-- 👉 Right content: Active Chat -->\n      <div\n        v-if=\"store.activeChat\"\n        class=\"d-flex flex-column h-100\"\n      >\n        <!-- 👉 Active chat header -->\n        <div class=\"active-chat-header d-flex align-center text-medium-emphasis bg-surface\">\n          <!-- Sidebar toggler -->\n          <IconBtn\n            class=\"d-md-none me-3\"\n            @click=\"isLeftSidebarOpen = true\"\n          >\n            <VIcon icon=\"tabler-menu-2\" />\n          </IconBtn>\n\n          <!-- avatar -->\n          <div\n            class=\"d-flex align-center cursor-pointer\"\n            @click=\"isActiveChatUserProfileSidebarOpen = true\"\n          >\n            <VBadge\n              dot\n              location=\"bottom right\"\n              offset-x=\"3\"\n              offset-y=\"0\"\n              :color=\"resolveAvatarBadgeVariant(store.activeChat.contact.status)\"\n              bordered\n            >\n              <VAvatar\n                size=\"38\"\n                :variant=\"!store.activeChat.contact.avatar ? 'tonal' : undefined\"\n                :color=\"!store.activeChat.contact.avatar ? resolveAvatarBadgeVariant(store.activeChat.contact.status) : undefined\"\n                class=\"cursor-pointer\"\n              >\n                <VImg\n                  v-if=\"store.activeChat.contact.avatar\"\n                  :src=\"store.activeChat.contact.avatar\"\n                  :alt=\"store.activeChat.contact.fullName\"\n                />\n                <span v-else>{{ avatarText(store.activeChat.contact.fullName) }}</span>\n              </VAvatar>\n            </VBadge>\n\n            <div class=\"flex-grow-1 ms-4 overflow-hidden\">\n              <p class=\"text-h6 mb-0\">\n                {{ store.activeChat.contact.fullName }}\n              </p>\n              <p class=\"text-truncate mb-0 text-disabled\">\n                {{ store.activeChat.contact.role }}\n              </p>\n            </div>\n          </div>\n\n          <VSpacer />\n\n          <!-- Header right content -->\n          <div class=\"d-sm-flex align-center d-none\">\n            <IconBtn>\n              <VIcon icon=\"tabler-phone-call\" />\n            </IconBtn>\n            <IconBtn>\n              <VIcon icon=\"tabler-video\" />\n            </IconBtn>\n            <IconBtn>\n              <VIcon icon=\"tabler-search\" />\n            </IconBtn>\n          </div>\n\n          <MoreBtn\n            :menu-list=\"moreList\"\n            density=\"comfortable\"\n            color=\"undefined\"\n          />\n        </div>\n\n        <VDivider />\n\n        <!-- Chat log -->\n        <PerfectScrollbar\n          ref=\"chatLogPS\"\n          tag=\"ul\"\n          :options=\"{ wheelPropagation: false }\"\n          class=\"flex-grow-1\"\n        >\n          <ChatLog />\n        </PerfectScrollbar>\n\n        <!-- Message form -->\n        <VForm\n          class=\"chat-log-message-form mb-5 mx-5\"\n          @submit.prevent=\"sendMessage\"\n        >\n          <VTextField\n            :key=\"store.activeChat?.contact.id\"\n            v-model=\"msg\"\n            variant=\"solo\"\n            class=\"chat-message-input\"\n            placeholder=\"Type your message...\"\n            density=\"default\"\n            autofocus\n          >\n            <template #append-inner>\n              <IconBtn>\n                <VIcon icon=\"tabler-microphone\" />\n              </IconBtn>\n\n              <IconBtn\n                class=\"me-2\"\n                @click=\"refInputEl?.click()\"\n              >\n                <VIcon icon=\"tabler-photo\" />\n              </IconBtn>\n\n              <VBtn @click=\"sendMessage\">\n                Send\n              </VBtn>\n            </template>\n          </VTextField>\n\n          <input\n            ref=\"refInputEl\"\n            type=\"file\"\n            name=\"file\"\n            accept=\".jpeg,.png,.jpg,GIF\"\n            hidden\n          >\n        </VForm>\n      </div>\n\n      <!-- 👉 Start conversation -->\n      <div\n        v-else\n        class=\"d-flex h-100 align-center justify-center flex-column\"\n      >\n        <VAvatar\n          size=\"109\"\n          class=\"elevation-3 mb-6 bg-surface\"\n        >\n          <VIcon\n            size=\"50\"\n            class=\"rounded-0 text-high-emphasis\"\n            icon=\"tabler-message\"\n          />\n        </VAvatar>\n        <p\n          class=\"mb-0 px-6 py-1 font-weight-medium text-lg elevation-3 rounded-xl text-high-emphasis bg-surface\"\n          :class=\"[{ 'cursor-pointer': $vuetify.display.smAndDown }]\"\n          @click=\"startConversation\"\n        >\n          Start Conversation\n        </p>\n      </div>\n    </VMain>\n  </VLayout>\n</template>\n\n<route lang=\"yaml\">\nmeta:\n  layoutWrapperClasses: layout-content-height-fixed\n</route>\n\n<style lang=\"scss\">\n@use \"@styles/variables/_vuetify.scss\";\n@use \"@core/scss/base/_mixins.scss\";\n@use \"@layouts/styles/mixins\" as layoutsMixins;\n\n// Variables\n$chat-app-header-height: 62px;\n\n// Placeholders\n%chat-header {\n  display: flex;\n  align-items: center;\n  min-block-size: $chat-app-header-height;\n  padding-inline: 1rem;\n}\n\n.chat-app-layout {\n  border-radius: vuetify.$card-border-radius;\n\n  @include mixins.elevation(vuetify.$card-elevation);\n\n  $sel-chat-app-layout: &;\n\n  @at-root {\n    .skin--bordered {\n      @include mixins.bordered-skin($sel-chat-app-layout);\n    }\n  }\n\n  .active-chat-user-profile-sidebar,\n  .user-profile-sidebar {\n    .v-navigation-drawer__content {\n      display: flex;\n      flex-direction: column;\n    }\n  }\n\n  .chat-list-header,\n  .active-chat-header {\n    @extend %chat-header;\n  }\n\n  .chat-list-search {\n    .v-field__outline__start {\n      flex-basis: 20px !important;\n      border-radius: 28px 0 0 28px !important;\n    }\n\n    .v-field__outline__end {\n      border-radius: 0 28px 28px 0 !important;\n    }\n\n    @include layoutsMixins.rtl {\n      .v-field__outline__start {\n        flex-basis: 20px !important;\n        border-radius: 0 28px 28px 0 !important;\n      }\n\n      .v-field__outline__end {\n        border-radius: 28px 0 0 28px !important;\n      }\n    }\n  }\n\n  .chat-list-sidebar {\n    .v-navigation-drawer__content {\n      display: flex;\n      flex-direction: column;\n    }\n  }\n}\n\n.chat-content-container {\n  /* stylelint-disable-next-line value-keyword-case */\n  background-color: v-bind(chatContentContainerBg);\n\n  // Adjust the padding so text field height stays 48px\n  .chat-message-input {\n    .v-field__append-inner {\n      align-items: center;\n      padding-block-start: 0;\n    }\n\n    .v-field--appended {\n      padding-inline-end: 9px;\n    }\n  }\n}\n\n.chat-user-profile-badge {\n  .v-badge__badge {\n    /* stylelint-disable liberty/use-logical-spec */\n    min-width: 12px !important;\n    height: 0.75rem;\n    /* stylelint-enable liberty/use-logical-spec */\n  }\n}\n</style>\n"],"names":["useChat","status","useChatStore","defineStore","q","__async","data","axios","chatsContacts","contacts","profileUser","userId","message","senderId","_a","_b","msg","chat","activeChat","__spreadProps","__spreadValues","_c","_e","_d","contact","c","store","resolveAvatarBadgeVariant","isChatContactActive","computed","isActive","props","search","useVModel","resolveFeedbackIcon","feedback","msgGroups","messages","_msgGroups","msgSenderId","msgGroup","index","userStatusRadioOptions","vuetifyDisplays","useDisplay","isLeftSidebarOpen","useResponsiveLeftSidebar","chatLogPS","ref","scrollToBottomInChatLog","scrollEl","watch","val","startConversation","sendMessage","nextTick","openChatOfContact","isUserProfileSidebarOpen","isActiveChatUserProfileSidebarOpen","refInputEl","moreList","name","useTheme","chatContentContainerBg","color","vuetifyInitialThemes"],"mappings":"knEAAO,MAAMA,EAAU,KAYd,CACL,0BAZgCC,GAC5BA,IAAW,SACN,UACLA,IAAW,OACN,QACLA,IAAW,OACN,UAEF,WAKR,GCZHC,EAAAC,GAAA,OAAA,CAEA,MAAA,KAAA,CACA,SAAA,CAAA,EACA,cAAA,CAAA,EACA,YAAA,OACA,WAAA,IACA,GACA,QAAA,CACA,sBAAAC,EAAA,QAAAC,EAAA,sBACA,KAAA,CAAA,KAAAC,CAAA,EAAA,MAAAC,EAAA,IAAA,gCAAA,CACA,OAAA,CAAA,EAAAH,CAAA,CACA,CAAA,EAEA,CAAA,cAAAI,EAAA,SAAAC,EAAA,YAAAC,CAAA,EAAAJ,EAEA,KAAA,cAAAE,EACA,KAAA,SAAAC,EACA,KAAA,YAAAC,CACA,IACA,QAAAC,EAAA,QAAAN,EAAA,sBACA,KAAA,CAAA,KAAAC,CAAA,EAAA,MAAAC,EAAA,IAAA,oBAAAI,CAAA,EAAA,EAEA,KAAA,WAAAL,CACA,IACA,QAAAM,EAAA,QAAAP,EAAA,oCACA,MAAAQ,GAAAC,EAAA,KAAA,cAAA,YAAAA,EAAA,GACA,CAAA,KAAAR,CAAA,EAAA,MAAAC,EAAA,KAAA,qBAAAQ,EAAA,KAAA,aAAA,YAAAA,EAAA,QAAA,EAAA,GAAA,CAAA,QAAAH,EAAA,SAAAC,CAAA,CAAA,EACA,CAAA,IAAAG,EAAA,KAAAC,CAAA,EAAAX,EAGA,GAAAW,IAAA,OAAA,CACA,MAAAC,EAAA,KAAA,WAEA,KAAA,cAAA,KAAAC,EAAAC,EAAA,GACAF,EAAA,SADA,CAEA,KAAA,CACA,GAAAD,EAAA,GACA,YAAA,CAAA,EACA,WAAA,EACA,SAAA,CAAAD,CAAA,CACA,CACA,EAAA,EACA,KAAA,aACA,KAAA,WAAA,KAAA,CACA,GAAAC,EAAA,GACA,SAAA,CAAAD,CAAA,EACA,WAAA,EACA,QAAAK,EAAA,KAAA,aAAA,YAAAA,EAAA,QAAA,EACA,EAEA,MAEAC,GAAAC,EAAA,KAAA,aAAA,YAAAA,EAAA,OAAA,MAAAD,EAAA,SAAA,KAAAN,GAIA,MAAAQ,EAAA,KAAA,cAAA,KAAAC,GACA,KAAA,WACAA,EAAA,KAAA,KAAA,WAAA,QAAA,GAEA,EACA,EAEAD,EAAA,KAAA,YAAAR,CACA,GACA,CACA,CAAA,qjCC7DA,MAAAU,EAAAxB,EAAA,EACA,CAAA,0BAAAyB,CAAA,EAAA3B,EAAA,8lECWA0B,EAAAxB,EAAA,EACA,CAAA,0BAAAyB,CAAA,EAAA3B,EAAA,EAEA4B,EAAAC,EAAA,IAAA,SACA,MAAAC,IAAAhB,EAAAY,EAAA,aAAA,YAAAZ,EAAA,QAAA,MAAAiB,EAAA,KAAA,GACA,OAAAA,EAAA,eACA,GAAAhB,EAAAW,EAAA,aAAA,MAAAX,EAAA,QAAAe,CAGA,CAAA,4iDCNA,CAAA,0BAAAH,CAAA,EAAA3B,EAAA,EACAgC,EAAAC,GAAAF,EAAA,QAAA,EACAL,EAAAxB,EAAA,siDCrBA,MAAAwB,EAAAxB,EAAA,EAEAsB,EAAAK,EAAA,IAAA,SAAA,OACA,IAAAf,EAAAY,EAAA,aAAA,YAAAZ,EAAA,QAAA,GACA,QAAAC,EAAAW,EAAA,aAAA,YAAAX,EAAA,QAAA,MACA,EAAA,EAEAmB,EAAAC,GACAA,EAAA,OACA,CACA,KAAA,gBACA,MAAA,SACA,EACAA,EAAA,YACA,CACA,KAAA,gBACA,MAAA,MACA,EAEA,CACA,KAAA,eACA,MAAA,MACA,EAGAC,EAAAP,EAAA,IAAA,CACA,IAAAQ,EAAA,CAAA,EACA,MAAAC,EAAA,CAAA,EACA,GAAAZ,EAAA,WAAA,KAAA,CACAW,EAAAX,EAAA,WAAA,KAAA,SACA,IAAAa,EAAAF,EAAA,CAAA,EAAA,SACAG,EAAA,CACA,SAAAD,EACA,SAAA,CAAA,CACA,EACAF,EAAA,QAAA,CAAArB,EAAAyB,IAAA,CACAF,IAAAvB,EAAA,SACAwB,EAAA,SAAA,KAAA,CACA,QAAAxB,EAAA,QACA,KAAAA,EAAA,KACA,SAAAA,EAAA,QACA,CAAA,GAEAuB,EAAAvB,EAAA,SACAsB,EAAA,KAAAE,CAAA,EACAA,EAAA,CACA,SAAAxB,EAAA,SACA,SAAA,CAAA,CACA,QAAAA,EAAA,QACA,KAAAA,EAAA,KACA,SAAAA,EAAA,QACA,CAAA,CACA,GAEAyB,IAAAJ,EAAA,OAAA,GACAC,EAAA,KAAAE,CAAA,CACA,CAAA,CACA,CAEA,OAAAF,CACA,CAAA,ynECtDA,MAAAZ,EAAAxB,EAAA,EACA,CAAA,0BAAAyB,CAAA,EAAA3B,EAAA,EAEA0C,EAAA,CACA,CACA,MAAA,SACA,MAAA,SACA,MAAA,SACA,EACA,CACA,MAAA,OACA,MAAA,OACA,MAAA,SACA,EACA,CACA,MAAA,iBACA,MAAA,OACA,MAAA,OACA,EACA,CACA,MAAA,UACA,MAAA,UACA,MAAA,WACA,CACA,iuEClBA,MAAAC,EAAAC,GAAA,EACAlB,EAAAxB,EAAA,EACA,CAAA,kBAAA2C,CAAA,EAAAC,GAAAH,EAAA,SAAA,EACA,CAAA,0BAAAhB,CAAA,EAAA3B,EAAA,EAGA+C,EAAAC,EAAA,EAEAC,EAAA,IAAA,CACA,MAAAC,EAAAH,EAAA,MAAA,KAAAA,EAAA,MAEAG,EAAA,UAAAA,EAAA,YACA,EAGA9C,EAAA4C,EAAA,EAAA,EAEAG,GAAA/C,EAAAgD,GAAA1B,EAAA,sBAAA0B,CAAA,EAAA,CAAA,UAAA,GAAA,EAGA,MAAAC,EAAA,IAAA,CACAV,EAAA,QAAA,QAEAE,EAAA,MAAA,GACA,EAGA7B,EAAAgC,EAAA,EAAA,EAEAM,EAAA,IAAAjD,EAAA,sBACAW,EAAA,QAEA,MAAAU,EAAA,QAAAV,EAAA,KAAA,EAGAA,EAAA,MAAA,GAGAuC,GAAA,IAAA,CACAN,EAAA,CACA,CAAA,EACA,GAEAO,EAAA7C,GAAAN,EAAA,sBACA,MAAAqB,EAAA,QAAAf,CAAA,EAGAK,EAAA,MAAA,GAGA,MAAAQ,EAAAE,EAAA,cAAA,KAAAD,GAAAA,EAAA,KAAAd,CAAA,EACAa,IACAA,EAAA,KAAA,WAAA,GAGAmB,EAAA,UAAA,QACAE,EAAA,MAAA,IAGAU,GAAA,IAAA,CACAN,EAAA,CACA,CAAA,CACA,GAGAQ,EAAAT,EAAA,EAAA,EAGAU,EAAAV,EAAA,EAAA,EAGAW,EAAAX,EAAA,EAEAY,GAAA,CACA,CACA,MAAA,eACA,MAAA,cACA,EACA,CACA,MAAA,qBACA,MAAA,oBACA,EACA,CACA,MAAA,gBACA,MAAA,eACA,EACA,CACA,MAAA,aACA,MAAA,YACA,EACA,CACA,MAAA,SACA,MAAA,QACA,CACA,EAEA,CAAA,KAAAC,EAAA,EAAAC,GAAA,EAEAC,GAAAlC,EAAA,IAAA,SACA,IAAAmC,EAAA,cACA,OAAAC,KACAD,GAAAC,GAAAA,EAAAA,GAAA,SAAAA,YAAAA,EAAAJ,GAAA,OAAA,SAAAI,YAAAA,EAAA,YAEAD,CACA,CAAA"}