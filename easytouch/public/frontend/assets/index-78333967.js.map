{"version":3,"file":"index-78333967.js","sources":["../../../../frontend/src/components/dialogs/AddEditRoleDialog.vue","../../../../frontend/src/assets/images/avatars/avatar-10.png","../../../../frontend/src/assets/images/avatars/avatar-9.png","../../../../frontend/src/assets/images/pages/girl-using-mobile.png","../../../../frontend/src/views/apps/roles/RoleCards.vue","../../../../frontend/src/views/apps/roles/UserList.vue"],"sourcesContent":["<script setup>\nimport { VForm } from 'vuetify/components/VForm'\n\nconst props = defineProps({\n  rolePermissions: {\n    type: Object,\n    required: false,\n    default: () => ({\n      name: '',\n      permissions: [],\n    }),\n  },\n  isDialogVisible: {\n    type: Boolean,\n    required: true,\n  },\n})\n\nconst emit = defineEmits([\n  'update:isDialogVisible',\n  'update:rolePermissions',\n])\n\n\n// ðŸ‘‰ Permission List\nconst permissions = ref([\n  {\n    name: 'User Management',\n    read: false,\n    write: false,\n    create: false,\n  },\n  {\n    name: 'Content Management',\n    read: false,\n    write: false,\n    create: false,\n  },\n  {\n    name: 'Disputes Management',\n    read: false,\n    write: false,\n    create: false,\n  },\n  {\n    name: 'Database Management',\n    read: false,\n    write: false,\n    create: false,\n  },\n  {\n    name: 'Financial Management',\n    read: false,\n    write: false,\n    create: false,\n  },\n  {\n    name: 'Reporting',\n    read: false,\n    write: false,\n    create: false,\n  },\n  {\n    name: 'API Control',\n    read: false,\n    write: false,\n    create: false,\n  },\n  {\n    name: 'Repository Management',\n    read: false,\n    write: false,\n    create: false,\n  },\n  {\n    name: 'Payroll',\n    read: false,\n    write: false,\n    create: false,\n  },\n])\n\nconst isSelectAll = ref(false)\nconst role = ref('')\nconst refPermissionForm = ref()\n\nconst checkedCount = computed(() => {\n  let counter = 0\n  permissions.value.forEach(permission => {\n    Object.entries(permission).forEach(([key, value]) => {\n      if (key !== 'name' && value)\n        counter++\n    })\n  })\n  \n  return counter\n})\n\nconst isIndeterminate = computed(() => checkedCount.value > 0 && checkedCount.value < permissions.value.length * 3)\n\n// select all\nwatch(isSelectAll, val => {\n  permissions.value = permissions.value.map(permission => ({\n    ...permission,\n    read: val,\n    write: val,\n    create: val,\n  }))\n})\n\n// if Indeterminate is false, then set isSelectAll to false\nwatch(isIndeterminate, () => {\n  if (!isIndeterminate.value)\n    isSelectAll.value = false\n})\n\n// if all permissions are checked, then set isSelectAll to true\nwatch(permissions, () => {\n  if (checkedCount.value === permissions.value.length * 3)\n    isSelectAll.value = true\n}, { deep: true })\n\n// if rolePermissions is not empty, then set permissions\nwatch(props, () => {\n  if (props.rolePermissions && props.rolePermissions.permissions.length) {\n    role.value = props.rolePermissions.name\n    permissions.value = permissions.value.map(permission => {\n      const rolePermission = props.rolePermissions?.permissions.find(item => item.name === permission.name)\n      if (rolePermission) {\n        return {\n          ...permission,\n          ...rolePermission,\n        }\n      }\n      \n      return permission\n    })\n  }\n})\n\nconst onSubmit = () => {\n  const rolePermissions = {\n    name: role.value,\n    permissions: permissions.value,\n  }\n\n  emit('update:rolePermissions', rolePermissions)\n  emit('update:isDialogVisible', false)\n  isSelectAll.value = false\n  refPermissionForm.value?.reset()\n}\n\nconst onReset = () => {\n  emit('update:isDialogVisible', false)\n  isSelectAll.value = false\n  refPermissionForm.value?.reset()\n}\n</script>\n\n<template>\n  <VDialog\n    :width=\"$vuetify.display.smAndDown ? 'auto' : 900\"\n    :model-value=\"props.isDialogVisible\"\n    @update:model-value=\"onReset\"\n  >\n    <!-- ðŸ‘‰ Dialog close btn -->\n    <DialogCloseBtn @click=\"onReset\" />\n\n    <VCard class=\"pa-sm-8 pa-5\">\n      <!-- ðŸ‘‰ Title -->\n      <VCardItem class=\"text-center\">\n        <VCardTitle class=\"text-h3 mb-3\">\n          {{ props.rolePermissions.name ? 'Edit' : 'Add New' }} Role\n        </VCardTitle>\n        <p class=\"text-base mb-0\">\n          Set Role Permissions\n        </p>\n      </VCardItem>\n\n      <VCardText class=\"mt-6\">\n        <!-- ðŸ‘‰ Form -->\n        <VForm ref=\"refPermissionForm\">\n          <!-- ðŸ‘‰ Role name -->\n          <AppTextField\n            v-model=\"role\"\n            label=\"Role Name\"\n            placeholder=\"Enter Role Name\"\n          />\n\n          <h6 class=\"text-h4 mt-8 mb-3\">\n            Role Permissions\n          </h6>\n\n          <!-- ðŸ‘‰ Role Permissions -->\n\n          <VTable class=\"permission-table text-no-wrap\">\n            <!-- ðŸ‘‰ Admin  -->\n            <tr>\n              <td>\n                Administrator Access\n              </td>\n              <td colspan=\"3\">\n                <div class=\"d-flex justify-end\">\n                  <VCheckbox\n                    v-model=\"isSelectAll\"\n                    v-model:indeterminate=\"isIndeterminate\"\n                    label=\"Select All\"\n                  />\n                </div>\n              </td>\n            </tr>\n\n            <!-- ðŸ‘‰ Other permission loop -->\n            <template\n              v-for=\"permission in permissions\"\n              :key=\"permission.name\"\n            >\n              <tr>\n                <td>{{ permission.name }}</td>\n                <td>\n                  <div class=\"d-flex justify-end\">\n                    <VCheckbox\n                      v-model=\"permission.read\"\n                      label=\"Read\"\n                    />\n                  </div>\n                </td>\n                <td>\n                  <div class=\"d-flex justify-end\">\n                    <VCheckbox\n                      v-model=\"permission.write\"\n                      label=\"Write\"\n                    />\n                  </div>\n                </td>\n                <td>\n                  <div class=\"d-flex justify-end\">\n                    <VCheckbox\n                      v-model=\"permission.create\"\n                      label=\"Create\"\n                    />\n                  </div>\n                </td>\n              </tr>\n            </template>\n          </VTable>\n\n          <!-- ðŸ‘‰ Actions button -->\n          <div class=\"d-flex align-center justify-center gap-3 mt-6\">\n            <VBtn @click=\"onSubmit\">\n              Submit\n            </VBtn>\n\n            <VBtn\n              color=\"secondary\"\n              variant=\"tonal\"\n              @click=\"onReset\"\n            >\n              Cancel\n            </VBtn>\n          </div>\n        </VForm>\n      </VCardText>\n    </VCard>\n  </VDialog>\n</template>\n\n<style lang=\"scss\">\n.permission-table {\n  td {\n    border-block-end: 1px solid rgba(var(--v-border-color), var(--v-border-opacity));\n    padding-block: 0.5rem;\n\n    .v-checkbox {\n      min-inline-size: 4.75rem;\n    }\n\n    &:not(:first-child) {\n      padding-inline: 0.5rem;\n    }\n\n    .v-label {\n      white-space: nowrap;\n    }\n  }\n}\n</style>\n","export default \"__VITE_ASSET__cb505dc5__\"","export default \"__VITE_ASSET__6908ef2b__\"","export default \"__VITE_ASSET__fde0ba89__\"","<script setup>\nimport avatar1 from '@images/avatars/avatar-1.png'\nimport avatar10 from '@images/avatars/avatar-10.png'\nimport avatar2 from '@images/avatars/avatar-2.png'\nimport avatar3 from '@images/avatars/avatar-3.png'\nimport avatar4 from '@images/avatars/avatar-4.png'\nimport avatar5 from '@images/avatars/avatar-5.png'\nimport avatar6 from '@images/avatars/avatar-6.png'\nimport avatar7 from '@images/avatars/avatar-7.png'\nimport avatar8 from '@images/avatars/avatar-8.png'\nimport avatar9 from '@images/avatars/avatar-9.png'\nimport girlUsingMobile from '@images/pages/girl-using-mobile.png'\n\nconst roles = ref([\n  {\n    role: 'Administrator',\n    users: [\n      avatar1,\n      avatar2,\n      avatar3,\n      avatar4,\n    ],\n    details: {\n      name: 'Administrator',\n      permissions: [\n        {\n          name: 'User Management',\n          read: true,\n          write: true,\n          create: true,\n        },\n        {\n          name: 'Disputes Management',\n          read: true,\n          write: true,\n          create: true,\n        },\n        {\n          name: 'API Control',\n          read: true,\n          write: true,\n          create: true,\n        },\n      ],\n    },\n  },\n  {\n    role: 'Manager',\n    users: [\n      avatar1,\n      avatar2,\n      avatar3,\n      avatar4,\n      avatar5,\n      avatar6,\n      avatar7,\n    ],\n    details: {\n      name: 'Manager',\n      permissions: [\n        {\n          name: 'Reporting',\n          read: true,\n          write: true,\n          create: false,\n        },\n        {\n          name: 'Payroll',\n          read: true,\n          write: true,\n          create: true,\n        },\n        {\n          name: 'User Management',\n          read: true,\n          write: true,\n          create: true,\n        },\n      ],\n    },\n  },\n  {\n    role: 'Users',\n    users: [\n      avatar1,\n      avatar2,\n      avatar3,\n      avatar4,\n      avatar5,\n    ],\n    details: {\n      name: 'Users',\n      permissions: [\n        {\n          name: 'User Management',\n          read: true,\n          write: false,\n          create: false,\n        },\n        {\n          name: 'Content Management',\n          read: true,\n          write: false,\n          create: false,\n        },\n        {\n          name: 'Disputes Management',\n          read: true,\n          write: false,\n          create: false,\n        },\n        {\n          name: 'Database Management',\n          read: true,\n          write: false,\n          create: false,\n        },\n      ],\n    },\n  },\n  {\n    role: 'Support',\n    users: [\n      avatar1,\n      avatar2,\n      avatar3,\n      avatar4,\n      avatar5,\n      avatar6,\n    ],\n    details: {\n      name: 'Support',\n      permissions: [\n        {\n          name: 'Repository Management',\n          read: true,\n          write: true,\n          create: false,\n        },\n        {\n          name: 'Content Management',\n          read: true,\n          write: true,\n          create: false,\n        },\n        {\n          name: 'Database Management',\n          read: true,\n          write: true,\n          create: false,\n        },\n      ],\n    },\n  },\n  {\n    role: 'Restricted User',\n    users: [\n      avatar1,\n      avatar2,\n      avatar3,\n      avatar4,\n      avatar5,\n      avatar6,\n      avatar7,\n      avatar8,\n      avatar9,\n      avatar10,\n    ],\n    details: {\n      name: 'Restricted User',\n      permissions: [\n        {\n          name: 'User Management',\n          read: true,\n          write: false,\n          create: false,\n        },\n        {\n          name: 'Content Management',\n          read: true,\n          write: false,\n          create: false,\n        },\n        {\n          name: 'Disputes Management',\n          read: true,\n          write: false,\n          create: false,\n        },\n        {\n          name: 'Database Management',\n          read: true,\n          write: false,\n          create: false,\n        },\n      ],\n    },\n  },\n])\n\nconst isRoleDialogVisible = ref(false)\nconst roleDetail = ref()\nconst isAddRoleDialogVisible = ref(false)\n\nconst editPermission = value => {\n  isRoleDialogVisible.value = true\n  roleDetail.value = value\n}\n</script>\n\n<template>\n  <VRow>\n    <!-- ðŸ‘‰ Roles -->\n    <VCol\n      v-for=\"item in roles\"\n      :key=\"item.role\"\n      cols=\"12\"\n      sm=\"6\"\n      lg=\"4\"\n    >\n      <VCard>\n        <VCardText class=\"d-flex align-center pb-1\">\n          <span>Total {{ item.users.length }} users</span>\n\n          <VSpacer />\n\n          <div class=\"v-avatar-group\">\n            <template\n              v-for=\"(user, index) in item.users\"\n              :key=\"user\"\n            >\n              <VAvatar\n                v-if=\"item.users.length > 4 && item.users.length !== 4 && index < 3\"\n                size=\"36\"\n                :image=\"user\"\n              />\n\n              <VAvatar\n                v-if=\"item.users.length === 4\"\n                size=\"36\"\n                :image=\"user\"\n              />\n            </template>\n            <VAvatar\n              v-if=\"item.users.length > 4\"\n              :color=\"$vuetify.theme.current.dark ? '#4A5072' : '#f6f6f7'\"\n            >\n              <span>\n                +{{ item.users.length - 3 }}\n              </span>\n            </VAvatar>\n          </div>\n        </VCardText>\n\n        <VCardText class=\"pb-5\">\n          <h4 class=\"text-h4\">\n            {{ item.role }}\n          </h4>\n          <div class=\"d-flex align-center\">\n            <a\n              href=\"javascript:void(0)\"\n              @click=\"editPermission(item.details)\"\n            >\n              Edit Role\n            </a>\n\n            <VSpacer />\n            <VBtn\n              icon\n              color=\"disabled\"\n              variant=\"text\"\n              size=\"x-small\"\n            >\n              <VIcon\n                size=\"24\"\n                icon=\"tabler-copy\"\n              />\n            </VBtn>\n          </div>\n        </VCardText>\n      </VCard>\n    </VCol>\n\n    <!-- ðŸ‘‰ Add New Role -->\n    <VCol\n      cols=\"12\"\n      sm=\"6\"\n      lg=\"4\"\n    >\n      <VCard\n        class=\"h-100\"\n        :ripple=\"false\"\n        @click=\"isAddRoleDialogVisible = true\"\n      >\n        <VRow\n          no-gutters\n          class=\"h-100\"\n        >\n          <VCol\n            cols=\"5\"\n            class=\"d-flex flex-column justify-end align-center mt-5\"\n          >\n            <img\n              width=\"85\"\n              :src=\"girlUsingMobile\"\n            >\n          </VCol>\n\n          <VCol cols=\"7\">\n            <VCardText\n              class=\"d-flex flex-column align-end justify-end gap-2 h-100\"\n              style=\"text-align: end;\"\n            >\n              <VBtn>Add New Role</VBtn>\n              <span>Add role, if it doesn't exist.</span>\n            </VCardText>\n          </VCol>\n        </VRow>\n      </VCard>\n      <AddEditRoleDialog v-model:is-dialog-visible=\"isAddRoleDialogVisible\" />\n    </VCol>\n  </VRow>\n\n  <AddEditRoleDialog\n    v-model:is-dialog-visible=\"isRoleDialogVisible\"\n    v-model:role-permissions=\"roleDetail\"\n  />\n</template>\n","<script setup>\nimport { VDataTableServer } from 'vuetify/labs/VDataTable'\nimport { paginationMeta } from '@/@fake-db/utils'\nimport AddNewUserDrawer from '@/views/apps/user/list/AddNewUserDrawer.vue'\nimport { useUserListStore } from '@/views/apps/user/useUserListStore'\nimport { avatarText } from '@core/utils/formatters'\n\nconst userListStore = useUserListStore()\nconst searchQuery = ref('')\nconst selectedRole = ref()\nconst selectedPlan = ref()\nconst selectedStatus = ref()\nconst totalUsers = ref(0)\nconst users = ref([])\n\nconst options = ref({\n  page: 1,\n  itemsPerPage: 10,\n  sortBy: [],\n  groupBy: [],\n  search: undefined,\n})\n\nconst headers = [\n  {\n    title: 'User',\n    key: 'user',\n  },\n  {\n    title: 'Role',\n    key: 'role',\n  },\n  {\n    title: 'Plan',\n    key: 'plan',\n  },\n  {\n    title: 'Billing',\n    key: 'billing',\n  },\n  {\n    title: 'Status',\n    key: 'status',\n  },\n  {\n    title: 'Actions',\n    key: 'actions',\n    sortable: false,\n  },\n]\n\n// ðŸ‘‰ Fetching users\nconst fetchUsers = () => {\n  userListStore.fetchUsers({\n    q: searchQuery.value,\n    status: selectedStatus.value,\n    plan: selectedPlan.value,\n    role: selectedRole.value,\n    options: options.value,\n  }).then(response => {\n    users.value = response.data.users\n    totalUsers.value = response.data.totalUsers\n    options.value.page = response.data.page\n  }).catch(error => {\n    console.error(error)\n  })\n}\n\nwatchEffect(fetchUsers)\n\n// ðŸ‘‰ search filters\nconst roles = [\n  {\n    title: 'Admin',\n    value: 'admin',\n  },\n  {\n    title: 'Author',\n    value: 'author',\n  },\n  {\n    title: 'Editor',\n    value: 'editor',\n  },\n  {\n    title: 'Maintainer',\n    value: 'maintainer',\n  },\n  {\n    title: 'Subscriber',\n    value: 'subscriber',\n  },\n]\n\nconst resolveUserRoleVariant = role => {\n  const roleLowerCase = role.toLowerCase()\n  if (roleLowerCase === 'subscriber')\n    return {\n      color: 'primary',\n      icon: 'tabler-user',\n    }\n  if (roleLowerCase === 'author')\n    return {\n      color: 'warning',\n      icon: 'tabler-settings',\n    }\n  if (roleLowerCase === 'maintainer')\n    return {\n      color: 'success',\n      icon: 'tabler-chart-donut',\n    }\n  if (roleLowerCase === 'editor')\n    return {\n      color: 'info',\n      icon: 'tabler-pencil',\n    }\n  if (roleLowerCase === 'admin')\n    return {\n      color: 'error',\n      icon: 'tabler-device-laptop',\n    }\n  \n  return {\n    color: 'primary',\n    icon: 'tabler-user',\n  }\n}\n\nconst resolveUserStatusVariant = stat => {\n  const statLowerCase = stat.toLowerCase()\n  if (statLowerCase === 'pending')\n    return 'warning'\n  if (statLowerCase === 'active')\n    return 'success'\n  if (statLowerCase === 'inactive')\n    return 'secondary'\n  \n  return 'primary'\n}\n\nconst isAddNewUserDrawerVisible = ref(false)\n\nconst addNewUser = userData => {\n  userListStore.addUser(userData)\n\n  // refetch User\n  fetchUsers()\n}\n\nconst deleteUser = id => {\n  userListStore.deleteUser(id)\n\n  // refetch User\n  fetchUsers()\n}\n</script>\n\n<template>\n  <section>\n    <VCard>\n      <VCardText class=\"d-flex flex-wrap gap-4\">\n        <AppSelect\n          :model-value=\"options.itemsPerPage\"\n          :items=\"[\n            { value: 10, title: '10' },\n            { value: 25, title: '25' },\n            { value: 50, title: '50' },\n            { value: 100, title: '100' },\n            { value: -1, title: 'All' },\n          ]\"\n          style=\"width: 5rem;\"\n          @update:model-value=\"options.itemsPerPage = parseInt($event, 10)\"\n        />\n\n        <VSpacer />\n\n        <div class=\"d-flex align-center flex-wrap gap-4\">\n          <!-- ðŸ‘‰ Search  -->\n          <AppTextField\n            v-model=\"searchQuery\"\n            placeholder=\"Search User\"\n            density=\"compact\"\n            style=\"width: 12.5rem;\"\n          />\n\n          <!-- ðŸ‘‰ Add user button -->\n          <VSelect\n            v-model=\"selectedRole\"\n            label=\"Select Role\"\n            :items=\"roles\"\n            density=\"compact\"\n            clearable\n            clear-icon=\"tabler-x\"\n            style=\"width: 10rem;\"\n          />\n        </div>\n      </VCardText>\n\n      <VDivider />\n\n      <!-- SECTION datatable -->\n      <VDataTableServer\n        v-model:items-per-page=\"options.itemsPerPage\"\n        v-model:page=\"options.page\"\n        :items=\"users\"\n        :items-length=\"totalUsers\"\n        :headers=\"headers\"\n        class=\"text-no-wrap\"\n        @update:options=\"options = $event\"\n      >\n        <!-- User -->\n        <template #item.user=\"{ item }\">\n          <div class=\"d-flex align-center\">\n            <VAvatar\n              size=\"38\"\n              :variant=\"!item.raw.avatar ? 'tonal' : undefined\"\n              :color=\"!item.raw.avatar ? resolveUserRoleVariant(item.raw.role).color : undefined\"\n              class=\"me-3\"\n            >\n              <VImg\n                v-if=\"item.raw.avatar\"\n                :src=\"item.raw.avatar\"\n              />\n              <span v-else>{{ avatarText(item.raw.fullName) }}</span>\n            </VAvatar>\n            <div class=\"d-flex flex-column\">\n              <h6 class=\"text-body-1 font-weight-medium\">\n                <RouterLink\n                  :to=\"{ name: 'apps-user-view-id', params: { id: item.raw.id } }\"\n                  class=\"user-list-name\"\n                >\n                  {{ item.raw.fullName }}\n                </RouterLink>\n              </h6>\n              <span class=\"text-sm text-disabled\">{{ item.raw.email }}</span>\n            </div>\n          </div>\n        </template>\n\n        <!-- Role -->\n        <template #item.role=\"{ item }\">\n          <div class=\"d-flex align-center gap-4\">\n            <VAvatar\n              size=\"30\"\n              variant=\"tonal\"\n              :color=\"resolveUserRoleVariant(item.raw.role).color\"\n            >\n              <VIcon\n                size=\"20\"\n                :icon=\"resolveUserRoleVariant(item.raw.role).icon\"\n              />\n            </VAvatar>\n            <span class=\"text-capitalize\">{{ item.raw.role }}</span>\n          </div>\n        </template>\n\n        <!-- Plan -->\n        <template #item.plan=\"{ item }\">\n          <span class=\"text-capitalize font-weight-medium\">{{ item.raw.currentPlan }}</span>\n        </template>\n\n        <!-- Status -->\n        <template #item.status=\"{ item }\">\n          <VChip\n            label\n            size=\"small\"\n            class=\"text-capitalize\"\n            :color=\"resolveUserStatusVariant(item.raw.status)\"\n          >\n            {{ item.raw.status }}\n          </VChip>\n        </template>\n\n        <template #bottom>\n          <VDivider />\n\n          <div class=\"d-flex align-center justify-sm-space-between justify-center flex-wrap gap-3 pa-5 pt-3\">\n            <p class=\"text-sm text-disabled mb-0\">\n              {{ paginationMeta(options, totalUsers) }}\n            </p>\n\n            <VPagination\n              v-model=\"options.page\"\n              :length=\"Math.ceil(totalUsers / options.itemsPerPage)\"\n              :total-visible=\"$vuetify.display.xs ? 1 : Math.ceil(totalUsers / options.itemsPerPage)\"\n            >\n              <template #prev=\"slotProps\">\n                <VBtn\n                  variant=\"tonal\"\n                  color=\"default\"\n                  v-bind=\"slotProps\"\n                  :icon=\"false\"\n                >\n                  Previous\n                </VBtn>\n              </template>\n\n              <template #next=\"slotProps\">\n                <VBtn\n                  variant=\"tonal\"\n                  color=\"default\"\n                  v-bind=\"slotProps\"\n                  :icon=\"false\"\n                >\n                  Next\n                </VBtn>\n              </template>\n            </VPagination>\n          </div>\n        </template>\n\n        <!-- Actions -->\n        <template #item.actions=\"{ item }\">\n          <IconBtn>\n            <VIcon icon=\"tabler-edit\" />\n          </IconBtn>\n          <IconBtn @click=\"deleteUser(item.raw.id)\">\n            <VIcon icon=\"tabler-trash\" />\n          </IconBtn>\n\n          <VBtn\n            icon\n            color=\"medium-emphasis\"\n            density=\"comfortable\"\n            variant=\"text\"\n          >\n            <VIcon\n              size=\"24\"\n              icon=\"tabler-dots-vertical\"\n            />\n\n            <VMenu activator=\"parent\">\n              <VList>\n                <VListItem :to=\"{ name: 'apps-user-view-id', params: { id: item.raw.id } }\">\n                  <VListItemTitle>View</VListItemTitle>\n                </VListItem>\n                <VListItem link>\n                  <VListItemTitle>Suspend</VListItemTitle>\n                </VListItem>\n              </VList>\n            </VMenu>\n          </VBtn>\n        </template>\n      </VDataTableServer>\n      <!-- SECTION -->\n    </VCard>\n\n    <!-- ðŸ‘‰ Add New User -->\n    <AddNewUserDrawer\n      v-model:isDrawerOpen=\"isAddNewUserDrawerVisible\"\n      @user-data=\"addNewUser\"\n    />\n  </section>\n</template>\n\n<style lang=\"scss\">\n.text-capitalize {\n  text-transform: capitalize;\n}\n\n.user-list-name:not(:hover) {\n  color: rgba(var(--v-theme-on-background), var(--v-medium-emphasis-opacity));\n}\n</style>\n"],"names":["permissions","ref","isSelectAll","role","refPermissionForm","checkedCount","computed","counter","permission","key","value","isIndeterminate","watch","val","__spreadProps","__spreadValues","props","rolePermission","_a","item","onSubmit","rolePermissions","emit","onReset","avatar10","avatar9","girlUsingMobile","roles","avatar1","avatar2","avatar3","avatar4","avatar5","avatar6","avatar7","avatar8","isRoleDialogVisible","roleDetail","isAddRoleDialogVisible","editPermission","userListStore","useUserListStore","searchQuery","selectedRole","selectedPlan","selectedStatus","totalUsers","users","options","headers","fetchUsers","response","error","watchEffect","resolveUserRoleVariant","roleLowerCase","resolveUserStatusVariant","stat","statLowerCase","isAddNewUserDrawerVisible","addNewUser","userData","deleteUser","id"],"mappings":"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CA,EACA,CACA,KAAA,sBACA,KAAA,GACA,MAAA,GACA,OAAA,EACA,EACA,CACA,KAAA,sBACA,KAAA,GACA,MAAA,GACA,OAAA,EACA,CACA,CACA,CACA,EACA,CACA,KAAA,UACA,MAAA,CACAJ,EACAC,EACAC,EACAC,EACAC,EACAC,CACA,EACA,QAAA,CACA,KAAA,UACA,YAAA,CACA,CACA,KAAA,wBACA,KAAA,GACA,MAAA,GACA,OAAA,EACA,EACA,CACA,KAAA,qBACA,KAAA,GACA,MAAA,GACA,OAAA,EACA,EACA,CACA,KAAA,sBACA,KAAA,GACA,MAAA,GACA,OAAA,EACA,CACA,CACA,CACA,EACA,CACA,KAAA,kBACA,MAAA,CACAL,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GACAC,GACAV,GACAD,EACA,EACA,QAAA,CACA,KAAA,kBACA,YAAA,CACA,CACA,KAAA,kBACA,KAAA,GACA,MAAA,GACA,OAAA,EACA,EACA,CACA,KAAA,qBACA,KAAA,GACA,MAAA,GACA,OAAA,EACA,EACA,CACA,KAAA,sBACA,KAAA,GACA,MAAA,GACA,OAAA,EACA,EACA,CACA,KAAA,sBACA,KAAA,GACA,MAAA,GACA,OAAA,EACA,CACA,CACA,CACA,CACA,CAAA,EAEAY,EAAAnC,EAAA,EAAA,EACAoC,EAAApC,EAAA,EACAqC,EAAArC,EAAA,EAAA,EAEAsC,EAAA7B,GAAA,CACA0B,EAAA,MAAA,GACAC,EAAA,MAAA3B,CACA,m8ECxMA,MAAA8B,EAAAC,GAAA,EACAC,EAAAzC,EAAA,EAAA,EACA0C,EAAA1C,EAAA,EACA2C,EAAA3C,EAAA,EACA4C,EAAA5C,EAAA,EACA6C,EAAA7C,EAAA,CAAA,EACA8C,EAAA9C,EAAA,EAAA,EAEA+C,EAAA/C,EAAA,CACA,KAAA,EACA,aAAA,GACA,OAAA,CAAA,EACA,QAAA,CAAA,EACA,OAAA,MACA,CAAA,EAEAgD,EAAA,CACA,CACA,MAAA,OACA,IAAA,MACA,EACA,CACA,MAAA,OACA,IAAA,MACA,EACA,CACA,MAAA,OACA,IAAA,MACA,EACA,CACA,MAAA,UACA,IAAA,SACA,EACA,CACA,MAAA,SACA,IAAA,QACA,EACA,CACA,MAAA,UACA,IAAA,UACA,SAAA,EACA,CACA,EAGAC,EAAA,IAAA,CACAV,EAAA,WAAA,CACA,EAAAE,EAAA,MACA,OAAAG,EAAA,MACA,KAAAD,EAAA,MACA,KAAAD,EAAA,MACA,QAAAK,EAAA,KACA,CAAA,EAAA,KAAAG,GAAA,CACAJ,EAAA,MAAAI,EAAA,KAAA,MACAL,EAAA,MAAAK,EAAA,KAAA,WACAH,EAAA,MAAA,KAAAG,EAAA,KAAA,IACA,CAAA,EAAA,MAAAC,GAAA,CACA,QAAA,MAAAA,CAAA,CACA,CAAA,CACA,EAEAC,GAAAH,CAAA,EAGA,MAAAvB,EAAA,CACA,CACA,MAAA,QACA,MAAA,OACA,EACA,CACA,MAAA,SACA,MAAA,QACA,EACA,CACA,MAAA,SACA,MAAA,QACA,EACA,CACA,MAAA,aACA,MAAA,YACA,EACA,CACA,MAAA,aACA,MAAA,YACA,CACA,EAEA2B,EAAAnD,GAAA,CACA,MAAAoD,EAAApD,EAAA,YAAA,EACA,OAAAoD,IAAA,aACA,CACA,MAAA,UACA,KAAA,aACA,EACAA,IAAA,SACA,CACA,MAAA,UACA,KAAA,iBACA,EACAA,IAAA,aACA,CACA,MAAA,UACA,KAAA,oBACA,EACAA,IAAA,SACA,CACA,MAAA,OACA,KAAA,eACA,EACAA,IAAA,QACA,CACA,MAAA,QACA,KAAA,sBACA,EAEA,CACA,MAAA,UACA,KAAA,aACA,CACA,EAEAC,EAAAC,GAAA,CACA,MAAAC,EAAAD,EAAA,YAAA,EACA,OAAAC,IAAA,UACA,UACAA,IAAA,SACA,UACAA,IAAA,WACA,YAEA,SACA,EAEAC,EAAA1D,EAAA,EAAA,EAEA2D,EAAAC,GAAA,CACArB,EAAA,QAAAqB,CAAA,EAGAX,EAAA,CACA,EAEAY,EAAAC,GAAA,CACAvB,EAAA,WAAAuB,CAAA,EAGAb,EAAA,CACA"}