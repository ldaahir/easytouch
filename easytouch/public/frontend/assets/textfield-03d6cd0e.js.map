{"version":3,"file":"textfield-03d6cd0e.js","sources":["../../../../frontend/src/views/demos/forms/form-elements/textfield/DemoTextfieldIconSlots.vue","../../../../frontend/src/views/demos/forms/form-elements/textfield/DemoTextfieldPasswordInput.vue","../../../../frontend/src/views/demos/forms/form-elements/textfield/DemoTextfieldLabelSlot.vue","../../../../frontend/src/views/demos/forms/form-elements/textfield/DemoTextfieldIconEvents.vue","../../../../frontend/src/views/demos/forms/form-elements/textfield/DemoTextfieldValidation.vue","../../../../frontend/src/views/demos/forms/form-elements/textfield/DemoTextfieldSingleLine.vue","../../../../frontend/src/views/demos/forms/form-elements/textfield/DemoTextfieldPrefixesAndSuffixes.vue","../../../../frontend/src/views/demos/forms/form-elements/textfield/DemoTextfieldIcons.vue","../../../../frontend/src/views/demos/forms/form-elements/textfield/DemoTextfieldCustomColors.vue","../../../../frontend/src/views/demos/forms/form-elements/textfield/DemoTextfieldClearable.vue","../../../../frontend/src/views/demos/forms/form-elements/textfield/DemoTextfieldCounter.vue","../../../../frontend/src/views/demos/forms/form-elements/textfield/DemoTextfieldState.vue","../../../../frontend/src/views/demos/forms/form-elements/textfield/DemoTextfieldVariant.vue","../../../../frontend/src/views/demos/forms/form-elements/textfield/DemoTextfieldDensity.vue","../../../../frontend/src/views/demos/forms/form-elements/textfield/demoCodeTextfield.js"],"sourcesContent":["<script setup>\nimport { VNodeRenderer } from '@layouts/components/VNodeRenderer'\nimport { themeConfig } from '@themeConfig'\n\nconst message = ref('Hey!')\nconst loading = ref(false)\n\nconst clickMe = () => {\n  loading.value = true\n  message.value = 'Wait for it...'\n  setTimeout(() => {\n    loading.value = false\n    message.value = 'You\\'ve clicked me!'\n  }, 2000)\n}\n</script>\n\n<template>\n  <AppTextField\n    v-model=\"message\"\n    clearable\n    label=\"Message\"\n    type=\"text\"\n    class=\"textfield-demo-icon-slot\"\n  >\n    <!-- Prepend -->\n    <template #prepend>\n      <VTooltip location=\"bottom\">\n        <template #activator=\"{ props }\">\n          <VIcon\n            v-bind=\"props\"\n            icon=\"tabler-help\"\n          />\n        </template>\n        I'm a tooltip\n      </VTooltip>\n    </template>\n\n    <!-- AppendInner -->\n    <template #append-inner>\n      <VFadeTransition leave-absolute>\n        <VProgressCircular\n          v-if=\"loading\"\n          color=\"info\"\n          indeterminate\n        />\n\n        <VNodeRenderer\n          v-else\n          class=\"text-2xl\"\n          :nodes=\"themeConfig.app.logo\"\n        />\n      </VFadeTransition>\n    </template>\n\n    <!-- Append -->\n    <template #append>\n      <VBtn\n        :icon=\"$vuetify.display.smAndDown\"\n        @click=\"clickMe\"\n      >\n        <VIcon icon=\"tabler-viewfinder\" />\n        <span\n          v-if=\"$vuetify.display.mdAndUp\"\n          class=\"ms-3\"\n        >Click me</span>\n      </VBtn>\n    </template>\n  </AppTextField>\n</template>\n\n<style lang=\"scss\" scoped>\n.textfield-demo-icon-slot {\n  :deep(.v-input) {\n    align-content: center;\n\n    .v-input__prepend,\n    .v-input__append {\n      padding-block-start: 0 !important;\n    }\n\n    .v-input__prepend {\n      align-items: center;\n    }\n\n    .v-field__append-inner .v-progress-circular svg {\n      block-size: 1.3em;\n      inline-size: 1.3em;\n    }\n\n    .v-field__append-inner svg {\n      margin-block-start: 0.1rem;\n    }\n  }\n}\n</style>\n","<script setup>\nconst show1 = ref(false)\nconst show2 = ref(true)\nconst password = ref('Password')\nconst confirmPassword = ref('wqfasds')\n\nconst rules = {\n  required: value => !!value || 'Required.',\n  min: v => v.length >= 8 || 'Min 8 characters',\n}\n</script>\n\n<template>\n  <VRow>\n    <VCol\n      cols=\"12\"\n      sm=\"6\"\n    >\n      <AppTextField\n        v-model=\"password\"\n        :append-inner-icon=\"show1 ? 'tabler-eye-off' : 'tabler-eye' \"\n        :rules=\"[rules.required, rules.min]\"\n        :type=\"show1 ? 'text' : 'password'\"\n        name=\"input-10-1\"\n        label=\"Normal with hint text\"\n        hint=\"At least 8 characters\"\n        counter\n        @click:append-inner=\"show1 = !show1\"\n      />\n    </VCol>\n\n    <VCol\n      cols=\"12\"\n      sm=\"6\"\n    >\n      <AppTextField\n        v-model=\"confirmPassword\"\n        :append-inner-icon=\"show2 ? 'tabler-eye-off' : 'tabler-eye' \"\n        :rules=\"[rules.required, rules.min]\"\n        :type=\"show2 ? 'text' : 'password'\"\n        name=\"input-10-2\"\n        label=\"Visible\"\n        hint=\"At least 8 characters\"\n        @click:append-inner=\"show2 = !show2\"\n      />\n    </VCol>\n  </VRow>\n</template>\n","<template>\n  <AppTextField>\n    <template #label>\n      What about &nbsp;<strong>icon</strong>&nbsp;here?\n      <VIcon icon=\"tabler-file-search\" />\n    </template>\n  </AppTextField>\n</template>\n","<script setup>\nconst message = ref('Hey!')\nconst marker = ref(true)\nconst iconIndex = ref(0)\n\nconst toggleMarker = () => {\n  marker.value = !marker.value\n}\n\nconst clearMessage = () => {\n  message.value = ''\n}\n\nconst resetIcon = () => {\n  iconIndex.value = 0\n}\n\nconst sendMessage = () => {\n  resetIcon()\n  clearMessage()\n}\n</script>\n\n<template>\n  <AppTextField\n    v-model=\"message\"\n    clearable\n    type=\"text\"\n    label=\"Message\"\n    color=\"primary\"\n    clear-icon=\"tabler-circle-x\"\n    :append-icon=\"message ? $vuetify.locale.isRtl ? 'tabler-arrow-big-left-lines' : 'tabler-arrow-big-right-lines' : 'tabler-microphone'\"\n    :append-inner-icon=\"marker ? 'tabler-map-pin' : 'tabler-map-pin-off'\"\n    @click:append-inner=\"toggleMarker\"\n    @click:append=\"sendMessage\"\n    @click:clear=\"clearMessage\"\n  />\n</template>\n","<script setup>\nimport {\n  emailValidator,\n  requiredValidator,\n} from '@validators'\n\nconst email = ref('')\n</script>\n\n<template>\n  <VForm>\n    <AppTextField\n      v-model=\"email\"\n      :rules=\"[requiredValidator, emailValidator]\"\n      label=\"E-mail\"\n    />\n  </VForm>\n</template>\n","<template>\n  <AppTextField\n    label=\"Regular\"\n    single-line\n  />\n</template>\n","<script setup>\nconst amount = ref(10.05)\nconst weight = ref(28.02)\nconst email = ref('example')\nconst time = ref('04:56')\n</script>\n\n<template>\n  <VRow>\n    <VCol cols=\"12\">\n      <AppTextField\n        v-model=\"amount\"\n        label=\"Amount\"\n        prefix=\"$\"\n        type=\"number\"\n      />\n    </VCol>\n\n    <VCol cols=\"12\">\n      <AppTextField\n        v-model=\"weight\"\n        label=\"Weight\"\n        suffix=\"lbs\"\n        type=\"number\"\n      />\n    </VCol>\n\n    <VCol cols=\"12\">\n      <AppTextField\n        v-model=\"email\"\n        label=\"Email address\"\n        suffix=\"@gmail.com\"\n      />\n    </VCol>\n\n    <VCol cols=\"12\">\n      <AppTextField\n        v-model=\"time\"\n        label=\"Label Text\"\n        type=\"time\"\n        suffix=\"PST\"\n      />\n    </VCol>\n  </VRow>\n</template>\n","<template>\n  <VRow>\n    <VCol cols=\"12\">\n      <AppTextField\n        label=\"Prepend\"\n        prepend-icon=\"tabler-map-pin\"\n      />\n    </VCol>\n\n    <VCol cols=\"12\">\n      <AppTextField\n        label=\"Prepend Inner\"\n        prepend-inner-icon=\"tabler-map-pin\"\n      />\n    </VCol>\n\n    <VCol cols=\"12\">\n      <AppTextField\n        label=\"Append\"\n        append-icon=\"tabler-map-pin\"\n      />\n    </VCol>\n\n    <VCol cols=\"12\">\n      <AppTextField\n        label=\"Append Inner\"\n        append-inner-icon=\"tabler-map-pin\"\n      />\n    </VCol>\n  </VRow>\n</template>\n","<template>\n  <AppTextField\n    color=\"success\"\n    label=\"First name\"\n  />\n</template>\n","<template>\n  <AppTextField\n    label=\"Regular\"\n    clearable\n  />\n</template>\n","<script setup>\nconst title = ref('Preliminary report')\nconst description = ref('California is a state in the western United States')\nconst rules = [v => v.length <= 25 || 'Max 25 characters']\n</script>\n\n<template>\n  <VRow>\n    <VCol cols=\"12\">\n      <AppTextField\n        v-model=\"title\"\n        :rules=\"rules\"\n        counter=\"25\"\n        hint=\"This field uses counter prop\"\n        label=\"Regular\"\n      />\n    </VCol>\n\n    <VCol cols=\"12\">\n      <AppTextField\n        v-model=\"description\"\n        :rules=\"rules\"\n        counter\n        maxlength=\"25\"\n        hint=\"This field uses maxlength attribute\"\n        label=\"Limit exceeded\"\n      />\n    </VCol>\n  </VRow>\n</template>\n","<template>\n  <VRow>\n    <VCol>\n      <AppTextField\n        label=\"Disabled\"\n        disabled\n      />\n    </VCol>\n\n    <VCol cols=\"12\">\n      <AppTextField\n        label=\"Readonly\"\n        readonly\n      />\n    </VCol>\n  </VRow>\n</template>\n","<template>\n  <VRow>\n    <VCol\n      cols=\"12\"\n      md=\"6\"\n    >\n      <VTextField label=\"Outlined\" />\n    </VCol>\n\n    <VCol\n      cols=\"12\"\n      md=\"6\"\n    >\n      <VTextField\n        label=\"Filled\"\n        variant=\"filled\"\n      />\n    </VCol>\n\n    <VCol\n      cols=\"12\"\n      md=\"6\"\n    >\n      <VTextField\n        label=\"Solo\"\n        variant=\"solo\"\n      />\n    </VCol>\n\n    <VCol\n      cols=\"12\"\n      md=\"6\"\n    >\n      <VTextField\n        label=\"Plain\"\n        variant=\"plain\"\n      />\n    </VCol>\n\n    <VCol\n      cols=\"12\"\n      md=\"6\"\n    >\n      <VTextField\n        label=\"Underlined\"\n        variant=\"underlined\"\n      />\n    </VCol>\n  </VRow>\n</template>\n","<template>\n  <AppTextField\n    label=\"Compact\"\n    density=\"compact\"\n  />\n</template>\n","export const basic = { ts: `<template>\n  <AppTextField label=\"Regular\" />\n</template>\n`, js: `<template>\n  <AppTextField label=\"Regular\" />\n</template>\n` }\n\nexport const clearable = { ts: `<template>\n  <AppTextField\n    label=\"Regular\"\n    clearable\n  />\n</template>\n`, js: `<template>\n  <AppTextField\n    label=\"Regular\"\n    clearable\n  />\n</template>\n` }\n\nexport const counter = { ts: `<script lang=\"ts\" setup>\nconst title = ref('Preliminary report')\nconst description = ref('California is a state in the western United States')\nconst rules = [(v: string) => v.length <= 25 || 'Max 25 characters']\n</script>\n\n<template>\n  <VRow>\n    <VCol cols=\"12\">\n      <AppTextField\n        v-model=\"title\"\n        :rules=\"rules\"\n        counter=\"25\"\n        hint=\"This field uses counter prop\"\n        label=\"Regular\"\n      />\n    </VCol>\n\n    <VCol cols=\"12\">\n      <AppTextField\n        v-model=\"description\"\n        :rules=\"rules\"\n        counter\n        maxlength=\"25\"\n        hint=\"This field uses maxlength attribute\"\n        label=\"Limit exceeded\"\n      />\n    </VCol>\n  </VRow>\n</template>\n`, js: `<script setup>\nconst title = ref('Preliminary report')\nconst description = ref('California is a state in the western United States')\nconst rules = [v => v.length <= 25 || 'Max 25 characters']\n</script>\n\n<template>\n  <VRow>\n    <VCol cols=\"12\">\n      <AppTextField\n        v-model=\"title\"\n        :rules=\"rules\"\n        counter=\"25\"\n        hint=\"This field uses counter prop\"\n        label=\"Regular\"\n      />\n    </VCol>\n\n    <VCol cols=\"12\">\n      <AppTextField\n        v-model=\"description\"\n        :rules=\"rules\"\n        counter\n        maxlength=\"25\"\n        hint=\"This field uses maxlength attribute\"\n        label=\"Limit exceeded\"\n      />\n    </VCol>\n  </VRow>\n</template>\n` }\n\nexport const customColors = { ts: `<template>\n  <AppTextField\n    color=\"success\"\n    label=\"First name\"\n  />\n</template>\n`, js: `<template>\n  <AppTextField\n    color=\"success\"\n    label=\"First name\"\n  />\n</template>\n` }\n\nexport const density = { ts: `<template>\n  <AppTextField\n    label=\"Compact\"\n    density=\"compact\"\n  />\n</template>\n`, js: `<template>\n  <AppTextField\n    label=\"Compact\"\n    density=\"compact\"\n  />\n</template>\n` }\n\nexport const iconEvents = { ts: `<script lang=\"ts\" setup>\nconst message = ref('Hey!')\nconst marker = ref(true)\nconst iconIndex = ref(0)\n\nconst toggleMarker = () => {\n  marker.value = !marker.value\n}\n\nconst clearMessage = () => {\n  message.value = ''\n}\n\nconst resetIcon = () => {\n  iconIndex.value = 0\n}\n\nconst sendMessage = () => {\n  resetIcon()\n  clearMessage()\n}\n</script>\n\n<template>\n  <AppTextField\n    v-model=\"message\"\n    clearable\n    type=\"text\"\n    label=\"Message\"\n    color=\"primary\"\n    clear-icon=\"tabler-circle-x\"\n    :append-icon=\"message ? $vuetify.locale.isRtl ? 'tabler-arrow-big-left-lines' : 'tabler-arrow-big-right-lines' : 'tabler-microphone'\"\n    :append-inner-icon=\"marker ? 'tabler-map-pin' : 'tabler-map-pin-off'\"\n    @click:append-inner=\"toggleMarker\"\n    @click:append=\"sendMessage\"\n    @click:clear=\"clearMessage\"\n  />\n</template>\n`, js: `<script setup>\nconst message = ref('Hey!')\nconst marker = ref(true)\nconst iconIndex = ref(0)\n\nconst toggleMarker = () => {\n  marker.value = !marker.value\n}\n\nconst clearMessage = () => {\n  message.value = ''\n}\n\nconst resetIcon = () => {\n  iconIndex.value = 0\n}\n\nconst sendMessage = () => {\n  resetIcon()\n  clearMessage()\n}\n</script>\n\n<template>\n  <AppTextField\n    v-model=\"message\"\n    clearable\n    type=\"text\"\n    label=\"Message\"\n    color=\"primary\"\n    clear-icon=\"tabler-circle-x\"\n    :append-icon=\"message ? $vuetify.locale.isRtl ? 'tabler-arrow-big-left-lines' : 'tabler-arrow-big-right-lines' : 'tabler-microphone'\"\n    :append-inner-icon=\"marker ? 'tabler-map-pin' : 'tabler-map-pin-off'\"\n    @click:append-inner=\"toggleMarker\"\n    @click:append=\"sendMessage\"\n    @click:clear=\"clearMessage\"\n  />\n</template>\n` }\n\nexport const iconSlots = { ts: `<script lang=\"ts\" setup>\nimport { VNodeRenderer } from '@layouts/components/VNodeRenderer'\nimport { themeConfig } from '@themeConfig'\n\nconst message = ref('Hey!')\nconst loading = ref(false)\n\nconst clickMe = () => {\n  loading.value = true\n  message.value = 'Wait for it...'\n\n  setTimeout(() => {\n    loading.value = false\n    message.value = 'You\\'ve clicked me!'\n  }, 2000)\n}\n</script>\n\n<template>\n  <AppTextField\n    v-model=\"message\"\n    clearable\n    label=\"Message\"\n    type=\"text\"\n    class=\"textfield-demo-icon-slot\"\n  >\n    <!-- Prepend -->\n    <template #prepend>\n      <VTooltip location=\"bottom\">\n        <template #activator=\"{ props }\">\n          <VIcon\n            v-bind=\"props\"\n            icon=\"tabler-help\"\n          />\n        </template>\n        I'm a tooltip\n      </VTooltip>\n    </template>\n\n    <!-- AppendInner -->\n    <template #append-inner>\n      <VFadeTransition leave-absolute>\n        <VProgressCircular\n          v-if=\"loading\"\n          color=\"info\"\n          indeterminate\n        />\n\n        <VNodeRenderer\n          v-else\n          class=\"text-2xl\"\n          :nodes=\"themeConfig.app.logo\"\n        />\n      </VFadeTransition>\n    </template>\n\n    <!-- Append -->\n    <template #append>\n      <VBtn\n        :icon=\"$vuetify.display.smAndDown\"\n        @click=\"clickMe\"\n      >\n        <VIcon icon=\"tabler-viewfinder\" />\n        <span\n          v-if=\"$vuetify.display.mdAndUp\"\n          class=\"ms-3\"\n        >Click me</span>\n      </VBtn>\n    </template>\n  </AppTextField>\n</template>\n\n<style lang=\"scss\" scoped>\n.textfield-demo-icon-slot {\n  :deep(.v-input) {\n    align-content: center;\n\n    .v-input__prepend,\n    .v-input__append {\n      padding-block-start: 0 !important;\n    }\n\n    .v-input__prepend {\n      align-items: center;\n    }\n\n    .v-field__append-inner .v-progress-circular svg {\n      block-size: 1.3em;\n      inline-size: 1.3em;\n    }\n\n    .v-field__append-inner svg {\n      margin-block-start: 0.1rem;\n    }\n  }\n}\n</style>\n`, js: `<script setup>\nimport { VNodeRenderer } from '@layouts/components/VNodeRenderer'\nimport { themeConfig } from '@themeConfig'\n\nconst message = ref('Hey!')\nconst loading = ref(false)\n\nconst clickMe = () => {\n  loading.value = true\n  message.value = 'Wait for it...'\n  setTimeout(() => {\n    loading.value = false\n    message.value = 'You\\'ve clicked me!'\n  }, 2000)\n}\n</script>\n\n<template>\n  <AppTextField\n    v-model=\"message\"\n    clearable\n    label=\"Message\"\n    type=\"text\"\n    class=\"textfield-demo-icon-slot\"\n  >\n    <!-- Prepend -->\n    <template #prepend>\n      <VTooltip location=\"bottom\">\n        <template #activator=\"{ props }\">\n          <VIcon\n            v-bind=\"props\"\n            icon=\"tabler-help\"\n          />\n        </template>\n        I'm a tooltip\n      </VTooltip>\n    </template>\n\n    <!-- AppendInner -->\n    <template #append-inner>\n      <VFadeTransition leave-absolute>\n        <VProgressCircular\n          v-if=\"loading\"\n          color=\"info\"\n          indeterminate\n        />\n\n        <VNodeRenderer\n          v-else\n          class=\"text-2xl\"\n          :nodes=\"themeConfig.app.logo\"\n        />\n      </VFadeTransition>\n    </template>\n\n    <!-- Append -->\n    <template #append>\n      <VBtn\n        :icon=\"$vuetify.display.smAndDown\"\n        @click=\"clickMe\"\n      >\n        <VIcon icon=\"tabler-viewfinder\" />\n        <span\n          v-if=\"$vuetify.display.mdAndUp\"\n          class=\"ms-3\"\n        >Click me</span>\n      </VBtn>\n    </template>\n  </AppTextField>\n</template>\n\n<style lang=\"scss\" scoped>\n.textfield-demo-icon-slot {\n  :deep(.v-input) {\n    align-content: center;\n\n    .v-input__prepend,\n    .v-input__append {\n      padding-block-start: 0 !important;\n    }\n\n    .v-input__prepend {\n      align-items: center;\n    }\n\n    .v-field__append-inner .v-progress-circular svg {\n      block-size: 1.3em;\n      inline-size: 1.3em;\n    }\n\n    .v-field__append-inner svg {\n      margin-block-start: 0.1rem;\n    }\n  }\n}\n</style>\n` }\n\nexport const icons = { ts: `<template>\n  <VRow>\n    <VCol cols=\"12\">\n      <AppTextField\n        label=\"Prepend\"\n        prepend-icon=\"tabler-map-pin\"\n      />\n    </VCol>\n\n    <VCol cols=\"12\">\n      <AppTextField\n        label=\"Prepend Inner\"\n        prepend-inner-icon=\"tabler-map-pin\"\n      />\n    </VCol>\n\n    <VCol cols=\"12\">\n      <AppTextField\n        label=\"Append\"\n        append-icon=\"tabler-map-pin\"\n      />\n    </VCol>\n\n    <VCol cols=\"12\">\n      <AppTextField\n        label=\"Append Inner\"\n        append-inner-icon=\"tabler-map-pin\"\n      />\n    </VCol>\n  </VRow>\n</template>\n`, js: `<template>\n  <VRow>\n    <VCol cols=\"12\">\n      <AppTextField\n        label=\"Prepend\"\n        prepend-icon=\"tabler-map-pin\"\n      />\n    </VCol>\n\n    <VCol cols=\"12\">\n      <AppTextField\n        label=\"Prepend Inner\"\n        prepend-inner-icon=\"tabler-map-pin\"\n      />\n    </VCol>\n\n    <VCol cols=\"12\">\n      <AppTextField\n        label=\"Append\"\n        append-icon=\"tabler-map-pin\"\n      />\n    </VCol>\n\n    <VCol cols=\"12\">\n      <AppTextField\n        label=\"Append Inner\"\n        append-inner-icon=\"tabler-map-pin\"\n      />\n    </VCol>\n  </VRow>\n</template>\n` }\n\nexport const labelSlot = { ts: `<template>\n  <AppTextField>\n    <template #label>\n      What about &nbsp;<strong>icon</strong>&nbsp;here?\n      <VIcon icon=\"tabler-file-search\" />\n    </template>\n  </AppTextField>\n</template>\n`, js: `<template>\n  <AppTextField>\n    <template #label>\n      What about &nbsp;<strong>icon</strong>&nbsp;here?\n      <VIcon icon=\"tabler-file-search\" />\n    </template>\n  </AppTextField>\n</template>\n` }\n\nexport const passwordInput = { ts: `<script lang=\"ts\" setup>\nconst show1 = ref(false)\nconst show2 = ref(true)\nconst password = ref('Password')\nconst confirmPassword = ref('wqfasds')\n\nconst rules = {\n  required: (value: string) => !!value || 'Required.',\n  min: (v: string) => v.length >= 8 || 'Min 8 characters',\n}\n</script>\n\n<template>\n  <VRow>\n    <VCol\n      cols=\"12\"\n      sm=\"6\"\n    >\n      <AppTextField\n        v-model=\"password\"\n        :append-inner-icon=\"show1 ? 'tabler-eye-off' : 'tabler-eye' \"\n        :rules=\"[rules.required, rules.min]\"\n        :type=\"show1 ? 'text' : 'password'\"\n        name=\"input-10-1\"\n        label=\"Normal with hint text\"\n        hint=\"At least 8 characters\"\n        counter\n        @click:append-inner=\"show1 = !show1\"\n      />\n    </VCol>\n\n    <VCol\n      cols=\"12\"\n      sm=\"6\"\n    >\n      <AppTextField\n        v-model=\"confirmPassword\"\n        :append-inner-icon=\"show2 ? 'tabler-eye-off' : 'tabler-eye' \"\n        :rules=\"[rules.required, rules.min]\"\n        :type=\"show2 ? 'text' : 'password'\"\n        name=\"input-10-2\"\n        label=\"Visible\"\n        hint=\"At least 8 characters\"\n        @click:append-inner=\"show2 = !show2\"\n      />\n    </VCol>\n  </VRow>\n</template>\n`, js: `<script setup>\nconst show1 = ref(false)\nconst show2 = ref(true)\nconst password = ref('Password')\nconst confirmPassword = ref('wqfasds')\n\nconst rules = {\n  required: value => !!value || 'Required.',\n  min: v => v.length >= 8 || 'Min 8 characters',\n}\n</script>\n\n<template>\n  <VRow>\n    <VCol\n      cols=\"12\"\n      sm=\"6\"\n    >\n      <AppTextField\n        v-model=\"password\"\n        :append-inner-icon=\"show1 ? 'tabler-eye-off' : 'tabler-eye' \"\n        :rules=\"[rules.required, rules.min]\"\n        :type=\"show1 ? 'text' : 'password'\"\n        name=\"input-10-1\"\n        label=\"Normal with hint text\"\n        hint=\"At least 8 characters\"\n        counter\n        @click:append-inner=\"show1 = !show1\"\n      />\n    </VCol>\n\n    <VCol\n      cols=\"12\"\n      sm=\"6\"\n    >\n      <AppTextField\n        v-model=\"confirmPassword\"\n        :append-inner-icon=\"show2 ? 'tabler-eye-off' : 'tabler-eye' \"\n        :rules=\"[rules.required, rules.min]\"\n        :type=\"show2 ? 'text' : 'password'\"\n        name=\"input-10-2\"\n        label=\"Visible\"\n        hint=\"At least 8 characters\"\n        @click:append-inner=\"show2 = !show2\"\n      />\n    </VCol>\n  </VRow>\n</template>\n` }\n\nexport const prefixesAndSuffixes = { ts: `<script setup lang=\"ts\">\nconst amount = ref(10.05)\nconst weight = ref(28.02)\nconst email = ref('example')\nconst time = ref('04:56')\n</script>\n\n<template>\n  <VRow>\n    <VCol cols=\"12\">\n      <AppTextField\n        v-model=\"amount\"\n        label=\"Amount\"\n        prefix=\"$\"\n        type=\"number\"\n      />\n    </VCol>\n\n    <VCol cols=\"12\">\n      <AppTextField\n        v-model=\"weight\"\n        label=\"Weight\"\n        suffix=\"lbs\"\n        type=\"number\"\n      />\n    </VCol>\n\n    <VCol cols=\"12\">\n      <AppTextField\n        v-model=\"email\"\n        label=\"Email address\"\n        suffix=\"@gmail.com\"\n      />\n    </VCol>\n\n    <VCol cols=\"12\">\n      <AppTextField\n        v-model=\"time\"\n        label=\"Label Text\"\n        type=\"time\"\n        suffix=\"PST\"\n      />\n    </VCol>\n  </VRow>\n</template>\n`, js: `<script setup>\nconst amount = ref(10.05)\nconst weight = ref(28.02)\nconst email = ref('example')\nconst time = ref('04:56')\n</script>\n\n<template>\n  <VRow>\n    <VCol cols=\"12\">\n      <AppTextField\n        v-model=\"amount\"\n        label=\"Amount\"\n        prefix=\"$\"\n        type=\"number\"\n      />\n    </VCol>\n\n    <VCol cols=\"12\">\n      <AppTextField\n        v-model=\"weight\"\n        label=\"Weight\"\n        suffix=\"lbs\"\n        type=\"number\"\n      />\n    </VCol>\n\n    <VCol cols=\"12\">\n      <AppTextField\n        v-model=\"email\"\n        label=\"Email address\"\n        suffix=\"@gmail.com\"\n      />\n    </VCol>\n\n    <VCol cols=\"12\">\n      <AppTextField\n        v-model=\"time\"\n        label=\"Label Text\"\n        type=\"time\"\n        suffix=\"PST\"\n      />\n    </VCol>\n  </VRow>\n</template>\n` }\n\nexport const singleLine = { ts: `<template>\n  <AppTextField\n    label=\"Regular\"\n    single-line\n  />\n</template>\n`, js: `<template>\n  <AppTextField\n    label=\"Regular\"\n    single-line\n  />\n</template>\n` }\n\nexport const state = { ts: `<template>\n  <VRow>\n    <VCol>\n      <AppTextField\n        label=\"Disabled\"\n        disabled\n      />\n    </VCol>\n\n    <VCol cols=\"12\">\n      <AppTextField\n        label=\"Readonly\"\n        readonly\n      />\n    </VCol>\n  </VRow>\n</template>\n`, js: `<template>\n  <VRow>\n    <VCol>\n      <AppTextField\n        label=\"Disabled\"\n        disabled\n      />\n    </VCol>\n\n    <VCol cols=\"12\">\n      <AppTextField\n        label=\"Readonly\"\n        readonly\n      />\n    </VCol>\n  </VRow>\n</template>\n` }\n\nexport const validation = { ts: `<script lang=\"ts\" setup>\nimport { emailValidator, requiredValidator } from '@validators'\n\nconst email = ref('')\n</script>\n\n<template>\n  <VForm>\n    <AppTextField\n      v-model=\"email\"\n      :rules=\"[requiredValidator, emailValidator]\"\n      label=\"E-mail\"\n    />\n  </VForm>\n</template>\n`, js: `<script setup>\nimport {\n  emailValidator,\n  requiredValidator,\n} from '@validators'\n\nconst email = ref('')\n</script>\n\n<template>\n  <VForm>\n    <AppTextField\n      v-model=\"email\"\n      :rules=\"[requiredValidator, emailValidator]\"\n      label=\"E-mail\"\n    />\n  </VForm>\n</template>\n` }\n\nexport const variant = { ts: `<template>\n  <VRow>\n    <VCol\n      cols=\"12\"\n      md=\"6\"\n    >\n      <VTextField label=\"Outlined\" />\n    </VCol>\n\n    <VCol\n      cols=\"12\"\n      md=\"6\"\n    >\n      <VTextField\n        label=\"Filled\"\n        variant=\"filled\"\n      />\n    </VCol>\n\n    <VCol\n      cols=\"12\"\n      md=\"6\"\n    >\n      <VTextField\n        label=\"Solo\"\n        variant=\"solo\"\n      />\n    </VCol>\n\n    <VCol\n      cols=\"12\"\n      md=\"6\"\n    >\n      <VTextField\n        label=\"Plain\"\n        variant=\"plain\"\n      />\n    </VCol>\n\n    <VCol\n      cols=\"12\"\n      md=\"6\"\n    >\n      <VTextField\n        label=\"Underlined\"\n        variant=\"underlined\"\n      />\n    </VCol>\n  </VRow>\n</template>\n`, js: `<template>\n  <VRow>\n    <VCol\n      cols=\"12\"\n      md=\"6\"\n    >\n      <VTextField label=\"Outlined\" />\n    </VCol>\n\n    <VCol\n      cols=\"12\"\n      md=\"6\"\n    >\n      <VTextField\n        label=\"Filled\"\n        variant=\"filled\"\n      />\n    </VCol>\n\n    <VCol\n      cols=\"12\"\n      md=\"6\"\n    >\n      <VTextField\n        label=\"Solo\"\n        variant=\"solo\"\n      />\n    </VCol>\n\n    <VCol\n      cols=\"12\"\n      md=\"6\"\n    >\n      <VTextField\n        label=\"Plain\"\n        variant=\"plain\"\n      />\n    </VCol>\n\n    <VCol\n      cols=\"12\"\n      md=\"6\"\n    >\n      <VTextField\n        label=\"Underlined\"\n        variant=\"underlined\"\n      />\n    </VCol>\n  </VRow>\n</template>\n` }\n\n"],"names":["message","ref","loading","clickMe","show1","show2","password","confirmPassword","rules","value","v","_openBlock","_createBlock","_component_AppTextField","marker","iconIndex","toggleMarker","clearMessage","resetIcon","sendMessage","email","amount","weight","time","_createVNode","title","description","_component_VCol","_component_VTextField","basic","clearable","counter","customColors","density","iconEvents","iconSlots","icons","labelSlot","passwordInput","prefixesAndSuffixes","singleLine","state","validation","variant"],"mappings":"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"}